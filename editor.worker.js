(()=>{var __webpack_modules__={"./node_modules/process/browser.js":module=>{var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(fun){if(cachedSetTimeout===setTimeout)return setTimeout(fun,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(fun,0);try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var timeout=runTimeout(cleanUpNextTick);draining=!0;for(var len=queue.length;len;){for(currentQueue=queue,queue=[];++queueIndex<len;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,len=queue.length}currentQueue=null,draining=!1,function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout)return clearTimeout(marker);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(marker);try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}(timeout)}}function Item(fun,array){this.fun=fun,this.array=array}function noop(){}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)args[i-1]=arguments[i];queue.push(new Item(fun,args)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(name){return[]},process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId](module,module.exports,__webpack_require__),module.exports}__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{"use strict";const errorHandler=new class ErrorHandler{constructor(){this.listeners=[],this.unexpectedErrorHandler=function(e){setTimeout((()=>{if(e.stack){if(ErrorNoTelemetry.isErrorNoTelemetry(e))throw new ErrorNoTelemetry(e.message+"\n\n"+e.stack);throw new Error(e.message+"\n\n"+e.stack)}throw e}),0)}}emit(e){this.listeners.forEach((listener=>{listener(e)}))}onUnexpectedError(e){this.unexpectedErrorHandler(e),this.emit(e)}onUnexpectedExternalError(e){this.unexpectedErrorHandler(e)}};function onUnexpectedError(e){isCancellationError(e)||errorHandler.onUnexpectedError(e)}function transformErrorForSerialization(error){if(error instanceof Error){const{name,message}=error;return{$isError:!0,name,message,stack:error.stacktrace||error.stack,noTelemetry:ErrorNoTelemetry.isErrorNoTelemetry(error)}}return error}const canceledName="Canceled";function isCancellationError(error){return error instanceof CancellationError||error instanceof Error&&error.name===canceledName&&error.message===canceledName}class CancellationError extends Error{constructor(){super(canceledName),this.name=this.message}}class ErrorNoTelemetry extends Error{constructor(msg){super(msg),this.name="CodeExpectedError"}static fromError(err){if(err instanceof ErrorNoTelemetry)return err;const result=new ErrorNoTelemetry;return result.message=err.message,result.stack=err.stack,result}static isErrorNoTelemetry(err){return"CodeExpectedError"===err.name}}class BugIndicatingError extends Error{constructor(message){super(message||"An unexpected bug occurred."),Object.setPrototypeOf(this,BugIndicatingError.prototype)}}function once(fn){const _this=this;let result,didCall=!1;return function(){return didCall||(didCall=!0,result=fn.apply(_this,arguments)),result}}var Iterable;!function(Iterable){function is(thing){return thing&&"object"==typeof thing&&"function"==typeof thing[Symbol.iterator]}Iterable.is=is;const _empty=Object.freeze([]);function*single(element){yield element}Iterable.empty=function empty(){return _empty},Iterable.single=single,Iterable.wrap=function wrap(iterableOrElement){return is(iterableOrElement)?iterableOrElement:single(iterableOrElement)},Iterable.from=function from(iterable){return iterable||_empty},Iterable.isEmpty=function isEmpty(iterable){return!iterable||!0===iterable[Symbol.iterator]().next().done},Iterable.first=function first(iterable){return iterable[Symbol.iterator]().next().value},Iterable.some=function some(iterable,predicate){for(const element of iterable)if(predicate(element))return!0;return!1},Iterable.find=function find(iterable,predicate){for(const element of iterable)if(predicate(element))return element},Iterable.filter=function*filter(iterable,predicate){for(const element of iterable)predicate(element)&&(yield element)},Iterable.map=function*map(iterable,fn){let index=0;for(const element of iterable)yield fn(element,index++)},Iterable.concat=function*concat(...iterables){for(const iterable of iterables)for(const element of iterable)yield element},Iterable.reduce=function reduce(iterable,reducer,initialValue){let value=initialValue;for(const element of iterable)value=reducer(value,element);return value},Iterable.slice=function*slice(arr,from,to=arr.length){for(from<0&&(from+=arr.length),to<0?to+=arr.length:to>arr.length&&(to=arr.length);from<to;from++)yield arr[from]},Iterable.consume=function consume(iterable,atMost=Number.POSITIVE_INFINITY){const consumed=[];if(0===atMost)return[consumed,iterable];const iterator=iterable[Symbol.iterator]();for(let i=0;i<atMost;i++){const next=iterator.next();if(next.done)return[consumed,Iterable.empty()];consumed.push(next.value)}return[consumed,{[Symbol.iterator]:()=>iterator}]}}(Iterable||(Iterable={}));let disposableTracker=null;function trackDisposable(x){return null==disposableTracker||disposableTracker.trackDisposable(x),x}function markAsDisposed(disposable){null==disposableTracker||disposableTracker.markAsDisposed(disposable)}function setParentOfDisposable(child,parent){null==disposableTracker||disposableTracker.setParent(child,parent)}function dispose(arg){if(Iterable.is(arg)){const errors=[];for(const d of arg)if(d)try{d.dispose()}catch(e){errors.push(e)}if(1===errors.length)throw errors[0];if(errors.length>1)throw new AggregateError(errors,"Encountered errors while disposing of store");return Array.isArray(arg)?[]:arg}if(arg)return arg.dispose(),arg}function combinedDisposable(...disposables){const parent=lifecycle_toDisposable((()=>dispose(disposables)));return function setParentOfDisposables(children,parent){if(disposableTracker)for(const child of children)disposableTracker.setParent(child,parent)}(disposables,parent),parent}function lifecycle_toDisposable(fn){const self=trackDisposable({dispose:once((()=>{markAsDisposed(self),fn()}))});return self}class DisposableStore{constructor(){this._toDispose=new Set,this._isDisposed=!1,trackDisposable(this)}dispose(){this._isDisposed||(markAsDisposed(this),this._isDisposed=!0,this.clear())}get isDisposed(){return this._isDisposed}clear(){if(0!==this._toDispose.size)try{dispose(this._toDispose)}finally{this._toDispose.clear()}}add(o){if(!o)return o;if(o===this)throw new Error("Cannot register a disposable on itself!");return setParentOfDisposable(o,this),this._isDisposed?DisposableStore.DISABLE_DISPOSED_WARNING||console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack):this._toDispose.add(o),o}}DisposableStore.DISABLE_DISPOSED_WARNING=!1;class lifecycle_Disposable{constructor(){this._store=new DisposableStore,trackDisposable(this),setParentOfDisposable(this._store,this)}dispose(){markAsDisposed(this),this._store.dispose()}_register(o){if(o===this)throw new Error("Cannot register a disposable on itself!");return this._store.add(o)}}lifecycle_Disposable.None=Object.freeze({dispose(){}});class SafeDisposable{constructor(){this.dispose=()=>{},this.unset=()=>{},this.isset=()=>!1,trackDisposable(this)}set(fn){let callback=fn;return this.unset=()=>callback=void 0,this.isset=()=>void 0!==callback,this.dispose=()=>{callback&&(callback(),callback=void 0,markAsDisposed(this))},this}}Symbol.iterator;class Node{constructor(element){this.element=element,this.next=Node.Undefined,this.prev=Node.Undefined}}Node.Undefined=new Node(void 0);class linkedList_LinkedList{constructor(){this._first=Node.Undefined,this._last=Node.Undefined,this._size=0}get size(){return this._size}isEmpty(){return this._first===Node.Undefined}clear(){let node=this._first;for(;node!==Node.Undefined;){const next=node.next;node.prev=Node.Undefined,node.next=Node.Undefined,node=next}this._first=Node.Undefined,this._last=Node.Undefined,this._size=0}unshift(element){return this._insert(element,!1)}push(element){return this._insert(element,!0)}_insert(element,atTheEnd){const newNode=new Node(element);if(this._first===Node.Undefined)this._first=newNode,this._last=newNode;else if(atTheEnd){const oldLast=this._last;this._last=newNode,newNode.prev=oldLast,oldLast.next=newNode}else{const oldFirst=this._first;this._first=newNode,newNode.next=oldFirst,oldFirst.prev=newNode}this._size+=1;let didRemove=!1;return()=>{didRemove||(didRemove=!0,this._remove(newNode))}}shift(){if(this._first!==Node.Undefined){const res=this._first.element;return this._remove(this._first),res}}pop(){if(this._last!==Node.Undefined){const res=this._last.element;return this._remove(this._last),res}}_remove(node){if(node.prev!==Node.Undefined&&node.next!==Node.Undefined){const anchor=node.prev;anchor.next=node.next,node.next.prev=anchor}else node.prev===Node.Undefined&&node.next===Node.Undefined?(this._first=Node.Undefined,this._last=Node.Undefined):node.next===Node.Undefined?(this._last=this._last.prev,this._last.next=Node.Undefined):node.prev===Node.Undefined&&(this._first=this._first.next,this._first.prev=Node.Undefined);this._size-=1}*[Symbol.iterator](){let node=this._first;for(;node!==Node.Undefined;)yield node.element,node=node.next}}let isPseudo="undefined"!=typeof document&&document.location&&document.location.hash.indexOf("pseudo=true")>=0;function _format(message,args){let result;return result=0===args.length?message:message.replace(/\{(\d+)\}/g,((match,rest)=>{const index=rest[0],arg=args[index];let result=match;return"string"==typeof arg?result=arg:"number"!=typeof arg&&"boolean"!=typeof arg&&null!=arg||(result=String(arg)),result})),isPseudo&&(result="［"+result.replace(/[aouei]/g,"$&$&")+"］"),result}function localize(data,message,...args){return _format(message,args)}var _a,process=__webpack_require__("./node_modules/process/browser.js");let _locale,_userAgent,_isWindows=!1,_isMacintosh=!1,_isLinux=!1,_isLinuxSnap=!1,_isNative=!1,_isWeb=!1,_isElectron=!1,_isIOS=!1,_isCI=!1,_isMobile=!1,_language=null,_platformLocale=null,_translationsConfigFile=null;const globals="object"==typeof self?self:"object"==typeof __webpack_require__.g?__webpack_require__.g:{};let nodeProcess;void 0!==globals.vscode&&void 0!==globals.vscode.process?nodeProcess=globals.vscode.process:void 0!==process&&(nodeProcess=process);const isElectronProcess="string"==typeof(null===(_a=null==nodeProcess?void 0:nodeProcess.versions)||void 0===_a?void 0:_a.electron),isElectronRenderer=isElectronProcess&&"renderer"===(null==nodeProcess?void 0:nodeProcess.type);if("object"!=typeof navigator||isElectronRenderer)if("object"==typeof nodeProcess){_isWindows="win32"===nodeProcess.platform,_isMacintosh="darwin"===nodeProcess.platform,_isLinux="linux"===nodeProcess.platform,_isLinuxSnap=_isLinux&&!!nodeProcess.env.SNAP&&!!nodeProcess.env.SNAP_REVISION,_isElectron=isElectronProcess,_isCI=!!nodeProcess.env.CI||!!nodeProcess.env.BUILD_ARTIFACTSTAGINGDIRECTORY,_locale="en",_language="en";const rawNlsConfig=nodeProcess.env.VSCODE_NLS_CONFIG;if(rawNlsConfig)try{const nlsConfig=JSON.parse(rawNlsConfig),resolved=nlsConfig.availableLanguages["*"];_locale=nlsConfig.locale,_platformLocale=nlsConfig.osLocale,_language=resolved||"en",_translationsConfigFile=nlsConfig._translationsConfigFile}catch(e){}_isNative=!0}else console.error("Unable to resolve platform.");else{_userAgent=navigator.userAgent,_isWindows=_userAgent.indexOf("Windows")>=0,_isMacintosh=_userAgent.indexOf("Macintosh")>=0,_isIOS=(_userAgent.indexOf("Macintosh")>=0||_userAgent.indexOf("iPad")>=0||_userAgent.indexOf("iPhone")>=0)&&!!navigator.maxTouchPoints&&navigator.maxTouchPoints>0,_isLinux=_userAgent.indexOf("Linux")>=0,_isMobile=(null==_userAgent?void 0:_userAgent.indexOf("Mobi"))>=0,_isWeb=!0;_locale=void localize(0,"_")||"en",_language=_locale,_platformLocale=navigator.language}let _platform=0;_isMacintosh?_platform=1:_isWindows?_platform=3:_isLinux&&(_platform=2);const isWindows=_isWindows,isMacintosh=_isMacintosh,userAgent=(_isWeb&&globals.importScripts,_userAgent),setTimeout0IsFaster="function"==typeof globals.postMessage&&!globals.importScripts;(()=>{if(setTimeout0IsFaster){const pending=[];globals.addEventListener("message",(e=>{if(e.data&&e.data.vscodeScheduleAsyncWork)for(let i=0,len=pending.length;i<len;i++){const candidate=pending[i];if(candidate.id===e.data.vscodeScheduleAsyncWork)return pending.splice(i,1),void candidate.callback()}}));let lastId=0;return callback=>{const myId=++lastId;pending.push({id:myId,callback}),globals.postMessage({vscodeScheduleAsyncWork:myId},"*")}}})();const isChrome=!!(userAgent&&userAgent.indexOf("Chrome")>=0),hasPerformanceNow=(userAgent&&userAgent.indexOf("Firefox"),!isChrome&&userAgent&&userAgent.indexOf("Safari"),userAgent&&userAgent.indexOf("Edg/"),userAgent&&userAgent.indexOf("Android"),globals.performance&&"function"==typeof globals.performance.now);class StopWatch{static create(highResolution=!0){return new StopWatch(highResolution)}constructor(highResolution){this._highResolution=hasPerformanceNow&&highResolution,this._startTime=this._now(),this._stopTime=-1}stop(){this._stopTime=this._now()}elapsed(){return-1!==this._stopTime?this._stopTime-this._startTime:this._now()-this._startTime}_now(){return this._highResolution?globals.performance.now():Date.now()}}var Event;!function(Event){function _addLeakageTraceLogic(options){false}function once(event){return(listener,thisArgs=null,disposables)=>{let result,didFire=!1;return result=event((e=>{if(!didFire)return result?result.dispose():didFire=!0,listener.call(thisArgs,e)}),null,disposables),didFire&&result.dispose(),result}}function map(event,map,disposable){return snapshot(((listener,thisArgs=null,disposables)=>event((i=>listener.call(thisArgs,map(i))),null,disposables)),disposable)}function forEach(event,each,disposable){return snapshot(((listener,thisArgs=null,disposables)=>event((i=>{each(i),listener.call(thisArgs,i)}),null,disposables)),disposable)}function filter(event,filter,disposable){return snapshot(((listener,thisArgs=null,disposables)=>event((e=>filter(e)&&listener.call(thisArgs,e)),null,disposables)),disposable)}function reduce(event,merge,initial,disposable){let output=initial;return map(event,(e=>(output=merge(output,e),output)),disposable)}function snapshot(event,disposable){let listener;const options={onWillAddFirstListener(){listener=event(emitter.fire,emitter)},onDidRemoveLastListener(){null==listener||listener.dispose()}};disposable||_addLeakageTraceLogic();const emitter=new Emitter(options);return null==disposable||disposable.add(emitter),emitter.event}function debounce(event,merge,delay=100,leading=!1,flushOnListenerRemove=!1,leakWarningThreshold,disposable){let subscription,output,handle,doFire,numDebouncedCalls=0;const options={leakWarningThreshold,onWillAddFirstListener(){subscription=event((cur=>{numDebouncedCalls++,output=merge(output,cur),leading&&!handle&&(emitter.fire(output),output=void 0),doFire=()=>{const _output=output;output=void 0,handle=void 0,(!leading||numDebouncedCalls>1)&&emitter.fire(_output),numDebouncedCalls=0},"number"==typeof delay?(clearTimeout(handle),handle=setTimeout(doFire,delay)):void 0===handle&&(handle=0,queueMicrotask(doFire))}))},onWillRemoveListener(){flushOnListenerRemove&&numDebouncedCalls>0&&(null==doFire||doFire())},onDidRemoveLastListener(){doFire=void 0,subscription.dispose()}};disposable||_addLeakageTraceLogic();const emitter=new Emitter(options);return null==disposable||disposable.add(emitter),emitter.event}function latch(event,equals=((a,b)=>a===b),disposable){let cache,firstCall=!0;return filter(event,(value=>{const shouldEmit=firstCall||!equals(value,cache);return firstCall=!1,cache=value,shouldEmit}),disposable)}Event.None=()=>lifecycle_Disposable.None,Event.defer=function defer(event,disposable){return debounce(event,(()=>{}),0,void 0,!0,void 0,disposable)},Event.once=once,Event.map=map,Event.forEach=forEach,Event.filter=filter,Event.signal=function signal(event){return event},Event.any=function any(...events){return(listener,thisArgs=null,disposables)=>combinedDisposable(...events.map((event=>event((e=>listener.call(thisArgs,e)),null,disposables))))},Event.reduce=reduce,Event.debounce=debounce,Event.accumulate=function accumulate(event,delay=0,disposable){return Event.debounce(event,((last,e)=>last?(last.push(e),last):[e]),delay,void 0,!0,void 0,disposable)},Event.latch=latch,Event.split=function split(event,isT,disposable){return[Event.filter(event,isT,disposable),Event.filter(event,(e=>!isT(e)),disposable)]},Event.buffer=function buffer(event,flushAfterTimeout=!1,_buffer=[]){let buffer=_buffer.slice(),listener=event((e=>{buffer?buffer.push(e):emitter.fire(e)}));const flush=()=>{null==buffer||buffer.forEach((e=>emitter.fire(e))),buffer=null},emitter=new Emitter({onWillAddFirstListener(){listener||(listener=event((e=>emitter.fire(e))))},onDidAddFirstListener(){buffer&&(flushAfterTimeout?setTimeout(flush):flush())},onDidRemoveLastListener(){listener&&listener.dispose(),listener=null}});return emitter.event};class ChainableEvent{constructor(event){this.event=event,this.disposables=new DisposableStore}map(fn){return new ChainableEvent(map(this.event,fn,this.disposables))}forEach(fn){return new ChainableEvent(forEach(this.event,fn,this.disposables))}filter(fn){return new ChainableEvent(filter(this.event,fn,this.disposables))}reduce(merge,initial){return new ChainableEvent(reduce(this.event,merge,initial,this.disposables))}latch(){return new ChainableEvent(latch(this.event,void 0,this.disposables))}debounce(merge,delay=100,leading=!1,flushOnListenerRemove=!1,leakWarningThreshold){return new ChainableEvent(debounce(this.event,merge,delay,leading,flushOnListenerRemove,leakWarningThreshold,this.disposables))}on(listener,thisArgs,disposables){return this.event(listener,thisArgs,disposables)}once(listener,thisArgs,disposables){return once(this.event)(listener,thisArgs,disposables)}dispose(){this.disposables.dispose()}}Event.chain=function chain(event){return new ChainableEvent(event)},Event.fromNodeEventEmitter=function fromNodeEventEmitter(emitter,eventName,map=(id=>id)){const fn=(...args)=>result.fire(map(...args)),result=new Emitter({onWillAddFirstListener:()=>emitter.on(eventName,fn),onDidRemoveLastListener:()=>emitter.removeListener(eventName,fn)});return result.event},Event.fromDOMEventEmitter=function fromDOMEventEmitter(emitter,eventName,map=(id=>id)){const fn=(...args)=>result.fire(map(...args)),result=new Emitter({onWillAddFirstListener:()=>emitter.addEventListener(eventName,fn),onDidRemoveLastListener:()=>emitter.removeEventListener(eventName,fn)});return result.event},Event.toPromise=function toPromise(event){return new Promise((resolve=>once(event)(resolve)))},Event.runAndSubscribe=function runAndSubscribe(event,handler){return handler(void 0),event((e=>handler(e)))},Event.runAndSubscribeWithStore=function runAndSubscribeWithStore(event,handler){let store=null;function run(e){null==store||store.dispose(),store=new DisposableStore,handler(e,store)}run(void 0);const disposable=event((e=>run(e)));return lifecycle_toDisposable((()=>{disposable.dispose(),null==store||store.dispose()}))};class EmitterObserver{constructor(_observable,store){this._observable=_observable,this._counter=0,this._hasChanged=!1;const options={onWillAddFirstListener:()=>{_observable.addObserver(this)},onDidRemoveLastListener:()=>{_observable.removeObserver(this)}};store||_addLeakageTraceLogic(),this.emitter=new Emitter(options),store&&store.add(this.emitter)}beginUpdate(_observable){this._counter++}handlePossibleChange(_observable){}handleChange(_observable,_change){this._hasChanged=!0}endUpdate(_observable){this._counter--,0===this._counter&&(this._observable.reportChanges(),this._hasChanged&&(this._hasChanged=!1,this.emitter.fire(this._observable.get())))}}Event.fromObservable=function fromObservable(obs,store){return new EmitterObserver(obs,store).emitter.event},Event.fromObservableLight=function fromObservableLight(observable){return listener=>{let count=0,didChange=!1;const observer={beginUpdate(){count++},endUpdate(){count--,0===count&&(observable.reportChanges(),didChange&&(didChange=!1,listener()))},handlePossibleChange(){},handleChange(){didChange=!0}};return observable.addObserver(observer),{dispose(){observable.removeObserver(observer)}}}}}(Event||(Event={}));class EventProfiling{constructor(name){this.listenerCount=0,this.invocationCount=0,this.elapsedOverall=0,this.durations=[],this.name=`${name}_${EventProfiling._idPool++}`,EventProfiling.all.add(this)}start(listenerCount){this._stopWatch=new StopWatch(!0),this.listenerCount=listenerCount}stop(){if(this._stopWatch){const elapsed=this._stopWatch.elapsed();this.durations.push(elapsed),this.elapsedOverall+=elapsed,this.invocationCount+=1,this._stopWatch=void 0}}}EventProfiling.all=new Set,EventProfiling._idPool=0;class LeakageMonitor{constructor(threshold,name=Math.random().toString(18).slice(2,5)){this.threshold=threshold,this.name=name,this._warnCountdown=0}dispose(){var _a;null===(_a=this._stacks)||void 0===_a||_a.clear()}check(stack,listenerCount){const threshold=this.threshold;if(threshold<=0||listenerCount<threshold)return;this._stacks||(this._stacks=new Map);const count=this._stacks.get(stack.value)||0;if(this._stacks.set(stack.value,count+1),this._warnCountdown-=1,this._warnCountdown<=0){let topStack;this._warnCountdown=.5*threshold;let topCount=0;for(const[stack,count]of this._stacks)(!topStack||topCount<count)&&(topStack=stack,topCount=count);console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`),console.warn(topStack)}return()=>{const count=this._stacks.get(stack.value)||0;this._stacks.set(stack.value,count-1)}}}class Stacktrace{static create(){var _a;return new Stacktrace(null!==(_a=(new Error).stack)&&void 0!==_a?_a:"")}constructor(value){this.value=value}print(){console.warn(this.value.split("\n").slice(2).join("\n"))}}class Listener{constructor(callback,callbackThis,stack){this.callback=callback,this.callbackThis=callbackThis,this.stack=stack,this.subscription=new SafeDisposable}invoke(e){this.callback.call(this.callbackThis,e)}}class Emitter{constructor(options){var _a,_b,_c,_d,_e;this._disposed=!1,this._options=options,this._leakageMon=(null===(_a=this._options)||void 0===_a?void 0:_a.leakWarningThreshold)?new LeakageMonitor(null!==(_c=null===(_b=this._options)||void 0===_b?void 0:_b.leakWarningThreshold)&&void 0!==_c?_c:-1):void 0,this._perfMon=(null===(_d=this._options)||void 0===_d?void 0:_d._profName)?new EventProfiling(this._options._profName):void 0,this._deliveryQueue=null===(_e=this._options)||void 0===_e?void 0:_e.deliveryQueue}dispose(){var _a,_b,_c,_d;this._disposed||(this._disposed=!0,this._listeners&&this._listeners.clear(),null===(_a=this._deliveryQueue)||void 0===_a||_a.clear(this),null===(_c=null===(_b=this._options)||void 0===_b?void 0:_b.onDidRemoveLastListener)||void 0===_c||_c.call(_b),null===(_d=this._leakageMon)||void 0===_d||_d.dispose())}get event(){return this._event||(this._event=(callback,thisArgs,disposables)=>{var _a,_b,_c;if(this._listeners||(this._listeners=new linkedList_LinkedList),this._leakageMon&&this._listeners.size>3*this._leakageMon.threshold)return console.warn(`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far`),lifecycle_Disposable.None;const firstListener=this._listeners.isEmpty();let removeMonitor,stack;firstListener&&(null===(_a=this._options)||void 0===_a?void 0:_a.onWillAddFirstListener)&&this._options.onWillAddFirstListener(this),this._leakageMon&&this._listeners.size>=Math.ceil(.2*this._leakageMon.threshold)&&(stack=Stacktrace.create(),removeMonitor=this._leakageMon.check(stack,this._listeners.size+1));const listener=new Listener(callback,thisArgs,stack),removeListener=this._listeners.push(listener);firstListener&&(null===(_b=this._options)||void 0===_b?void 0:_b.onDidAddFirstListener)&&this._options.onDidAddFirstListener(this),(null===(_c=this._options)||void 0===_c?void 0:_c.onDidAddListener)&&this._options.onDidAddListener(this,callback,thisArgs);const result=listener.subscription.set((()=>{var _a,_b;if(null==removeMonitor||removeMonitor(),!this._disposed&&(null===(_b=null===(_a=this._options)||void 0===_a?void 0:_a.onWillRemoveListener)||void 0===_b||_b.call(_a,this),removeListener(),this._options&&this._options.onDidRemoveLastListener)){this._listeners&&!this._listeners.isEmpty()||this._options.onDidRemoveLastListener(this)}}));return disposables instanceof DisposableStore?disposables.add(result):Array.isArray(disposables)&&disposables.push(result),result}),this._event}fire(event){var _a,_b,_c;if(this._listeners){this._deliveryQueue||(this._deliveryQueue=new PrivateEventDeliveryQueue(null===(_a=this._options)||void 0===_a?void 0:_a.onListenerError));for(const listener of this._listeners)this._deliveryQueue.push(this,listener,event);null===(_b=this._perfMon)||void 0===_b||_b.start(this._deliveryQueue.size),this._deliveryQueue.deliver(),null===(_c=this._perfMon)||void 0===_c||_c.stop()}}hasListeners(){return!!this._listeners&&!this._listeners.isEmpty()}}class EventDeliveryQueue{constructor(_onListenerError=onUnexpectedError){this._onListenerError=_onListenerError,this._queue=new linkedList_LinkedList}get size(){return this._queue.size}push(emitter,listener,event){this._queue.push(new EventDeliveryQueueElement(emitter,listener,event))}clear(emitter){const newQueue=new linkedList_LinkedList;for(const element of this._queue)element.emitter!==emitter&&newQueue.push(element);this._queue=newQueue}deliver(){for(;this._queue.size>0;){const element=this._queue.shift();try{element.listener.invoke(element.event)}catch(e){this._onListenerError(e)}}}}class PrivateEventDeliveryQueue extends EventDeliveryQueue{clear(emitter){this._queue.clear()}}class EventDeliveryQueueElement{constructor(emitter,listener,event){this.emitter=emitter,this.listener=listener,this.event=event}}Object.prototype.hasOwnProperty;function objects_getAllMethodNames(obj){const methods=[];for(const prop of function getAllPropertyNames(obj){let res=[],proto=Object.getPrototypeOf(obj);for(;Object.prototype!==proto;)res=res.concat(Object.getOwnPropertyNames(proto)),proto=Object.getPrototypeOf(proto);return res}(obj))"function"==typeof obj[prop]&&methods.push(prop);return methods}class Lazy{constructor(executor){this.executor=executor,this._didRun=!1}get value(){if(!this._didRun)try{this._value=this.executor()}catch(err){this._error=err}finally{this._didRun=!0}if(this._error)throw this._error;return this._value}get rawValue(){return this._value}}var strings_a;function escapeRegExpCharacters(value){return value.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g,"\\$&")}function isUpperAsciiLetter(code){return code>=65&&code<=90}function isHighSurrogate(charCode){return 55296<=charCode&&charCode<=56319}function isLowSurrogate(charCode){return 56320<=charCode&&charCode<=57343}function computeCodePoint(highSurrogate,lowSurrogate){return lowSurrogate-56320+(highSurrogate-55296<<10)+65536}function getNextCodePoint(str,len,offset){const charCode=str.charCodeAt(offset);if(isHighSurrogate(charCode)&&offset+1<len){const nextCharCode=str.charCodeAt(offset+1);if(isLowSurrogate(nextCharCode))return computeCodePoint(charCode,nextCharCode)}return charCode}const IS_BASIC_ASCII=/^[\t\n\r\x20-\x7E]*$/;String.fromCharCode(65279);class GraphemeBreakTree{static getInstance(){return GraphemeBreakTree._INSTANCE||(GraphemeBreakTree._INSTANCE=new GraphemeBreakTree),GraphemeBreakTree._INSTANCE}constructor(){this._data=function getGraphemeBreakRawData(){return JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")}()}getGraphemeBreakType(codePoint){if(codePoint<32)return 10===codePoint?3:13===codePoint?2:4;if(codePoint<127)return 0;const data=this._data,nodeCount=data.length/3;let nodeIndex=1;for(;nodeIndex<=nodeCount;)if(codePoint<data[3*nodeIndex])nodeIndex*=2;else{if(!(codePoint>data[3*nodeIndex+1]))return data[3*nodeIndex+2];nodeIndex=2*nodeIndex+1}return 0}}GraphemeBreakTree._INSTANCE=null;class AmbiguousCharacters{static getInstance(locales){return AmbiguousCharacters.cache.get(Array.from(locales))}static getLocales(){return AmbiguousCharacters._locales.value}constructor(confusableDictionary){this.confusableDictionary=confusableDictionary}isAmbiguous(codePoint){return this.confusableDictionary.has(codePoint)}getPrimaryConfusable(codePoint){return this.confusableDictionary.get(codePoint)}getConfusableCodePoints(){return new Set(this.confusableDictionary.keys())}}strings_a=AmbiguousCharacters,AmbiguousCharacters.ambiguousCharacterData=new Lazy((()=>JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'))),AmbiguousCharacters.cache=new class LRUCachedFunction{constructor(fn){this.fn=fn,this.lastCache=void 0,this.lastArgKey=void 0}get(arg){const key=JSON.stringify(arg);return this.lastArgKey!==key&&(this.lastArgKey=key,this.lastCache=this.fn(arg)),this.lastCache}}((locales=>{function arrayToMap(arr){const result=new Map;for(let i=0;i<arr.length;i+=2)result.set(arr[i],arr[i+1]);return result}function intersectMaps(map1,map2){if(!map1)return map2;const result=new Map;for(const[key,value]of map1)map2.has(key)&&result.set(key,value);return result}const data=strings_a.ambiguousCharacterData.value;let languageSpecificMap,filteredLocales=locales.filter((l=>!l.startsWith("_")&&l in data));0===filteredLocales.length&&(filteredLocales=["_default"]);for(const locale of filteredLocales){languageSpecificMap=intersectMaps(languageSpecificMap,arrayToMap(data[locale]))}const map=function mergeMaps(map1,map2){const result=new Map(map1);for(const[key,value]of map2)result.set(key,value);return result}(arrayToMap(data._common),languageSpecificMap);return new AmbiguousCharacters(map)})),AmbiguousCharacters._locales=new Lazy((()=>Object.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter((k=>!k.startsWith("_")))));class InvisibleCharacters{static getRawData(){return JSON.parse("[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]")}static getData(){return this._data||(this._data=new Set(InvisibleCharacters.getRawData())),this._data}static isInvisibleCharacter(codePoint){return InvisibleCharacters.getData().has(codePoint)}static get codePoints(){return InvisibleCharacters.getData()}}InvisibleCharacters._data=void 0;class RequestMessage{constructor(vsWorker,req,method,args){this.vsWorker=vsWorker,this.req=req,this.method=method,this.args=args,this.type=0}}class ReplyMessage{constructor(vsWorker,seq,res,err){this.vsWorker=vsWorker,this.seq=seq,this.res=res,this.err=err,this.type=1}}class SubscribeEventMessage{constructor(vsWorker,req,eventName,arg){this.vsWorker=vsWorker,this.req=req,this.eventName=eventName,this.arg=arg,this.type=2}}class EventMessage{constructor(vsWorker,req,event){this.vsWorker=vsWorker,this.req=req,this.event=event,this.type=3}}class UnsubscribeEventMessage{constructor(vsWorker,req){this.vsWorker=vsWorker,this.req=req,this.type=4}}class SimpleWorkerProtocol{constructor(handler){this._workerId=-1,this._handler=handler,this._lastSentReq=0,this._pendingReplies=Object.create(null),this._pendingEmitters=new Map,this._pendingEvents=new Map}setWorkerId(workerId){this._workerId=workerId}sendMessage(method,args){const req=String(++this._lastSentReq);return new Promise(((resolve,reject)=>{this._pendingReplies[req]={resolve,reject},this._send(new RequestMessage(this._workerId,req,method,args))}))}listen(eventName,arg){let req=null;const emitter=new Emitter({onWillAddFirstListener:()=>{req=String(++this._lastSentReq),this._pendingEmitters.set(req,emitter),this._send(new SubscribeEventMessage(this._workerId,req,eventName,arg))},onDidRemoveLastListener:()=>{this._pendingEmitters.delete(req),this._send(new UnsubscribeEventMessage(this._workerId,req)),req=null}});return emitter.event}handleMessage(message){message&&message.vsWorker&&(-1!==this._workerId&&message.vsWorker!==this._workerId||this._handleMessage(message))}_handleMessage(msg){switch(msg.type){case 1:return this._handleReplyMessage(msg);case 0:return this._handleRequestMessage(msg);case 2:return this._handleSubscribeEventMessage(msg);case 3:return this._handleEventMessage(msg);case 4:return this._handleUnsubscribeEventMessage(msg)}}_handleReplyMessage(replyMessage){if(!this._pendingReplies[replyMessage.seq])return void console.warn("Got reply to unknown seq");const reply=this._pendingReplies[replyMessage.seq];if(delete this._pendingReplies[replyMessage.seq],replyMessage.err){let err=replyMessage.err;return replyMessage.err.$isError&&(err=new Error,err.name=replyMessage.err.name,err.message=replyMessage.err.message,err.stack=replyMessage.err.stack),void reply.reject(err)}reply.resolve(replyMessage.res)}_handleRequestMessage(requestMessage){const req=requestMessage.req;this._handler.handleMessage(requestMessage.method,requestMessage.args).then((r=>{this._send(new ReplyMessage(this._workerId,req,r,void 0))}),(e=>{e.detail instanceof Error&&(e.detail=transformErrorForSerialization(e.detail)),this._send(new ReplyMessage(this._workerId,req,void 0,transformErrorForSerialization(e)))}))}_handleSubscribeEventMessage(msg){const req=msg.req,disposable=this._handler.handleEvent(msg.eventName,msg.arg)((event=>{this._send(new EventMessage(this._workerId,req,event))}));this._pendingEvents.set(req,disposable)}_handleEventMessage(msg){this._pendingEmitters.has(msg.req)?this._pendingEmitters.get(msg.req).fire(msg.event):console.warn("Got event for unknown req")}_handleUnsubscribeEventMessage(msg){this._pendingEvents.has(msg.req)?(this._pendingEvents.get(msg.req).dispose(),this._pendingEvents.delete(msg.req)):console.warn("Got unsubscribe for unknown req")}_send(msg){const transfer=[];if(0===msg.type)for(let i=0;i<msg.args.length;i++)msg.args[i]instanceof ArrayBuffer&&transfer.push(msg.args[i]);else 1===msg.type&&msg.res instanceof ArrayBuffer&&transfer.push(msg.res);this._handler.sendMessage(msg,transfer)}}function propertyIsEvent(name){return"o"===name[0]&&"n"===name[1]&&isUpperAsciiLetter(name.charCodeAt(2))}function propertyIsDynamicEvent(name){return/^onDynamic/.test(name)&&isUpperAsciiLetter(name.charCodeAt(9))}function simpleWorker_createProxyObject(methodNames,invoke,proxyListen){const createProxyMethod=method=>function(){const args=Array.prototype.slice.call(arguments,0);return invoke(method,args)},createProxyDynamicEvent=eventName=>function(arg){return proxyListen(eventName,arg)},result={};for(const methodName of methodNames)propertyIsDynamicEvent(methodName)?result[methodName]=createProxyDynamicEvent(methodName):propertyIsEvent(methodName)?result[methodName]=proxyListen(methodName,void 0):result[methodName]=createProxyMethod(methodName);return result}class SimpleWorkerServer{constructor(postMessage,requestHandlerFactory){this._requestHandlerFactory=requestHandlerFactory,this._requestHandler=null,this._protocol=new SimpleWorkerProtocol({sendMessage:(msg,transfer)=>{postMessage(msg,transfer)},handleMessage:(method,args)=>this._handleMessage(method,args),handleEvent:(eventName,arg)=>this._handleEvent(eventName,arg)})}onmessage(msg){this._protocol.handleMessage(msg)}_handleMessage(method,args){if("$initialize"===method)return this.initialize(args[0],args[1],args[2],args[3]);if(!this._requestHandler||"function"!=typeof this._requestHandler[method])return Promise.reject(new Error("Missing requestHandler or method: "+method));try{return Promise.resolve(this._requestHandler[method].apply(this._requestHandler,args))}catch(e){return Promise.reject(e)}}_handleEvent(eventName,arg){if(!this._requestHandler)throw new Error("Missing requestHandler");if(propertyIsDynamicEvent(eventName)){const event=this._requestHandler[eventName].call(this._requestHandler,arg);if("function"!=typeof event)throw new Error(`Missing dynamic event ${eventName} on request handler.`);return event}if(propertyIsEvent(eventName)){const event=this._requestHandler[eventName];if("function"!=typeof event)throw new Error(`Missing event ${eventName} on request handler.`);return event}throw new Error(`Malformed event name ${eventName}`)}initialize(workerId,loaderConfig,moduleId,hostMethods){this._protocol.setWorkerId(workerId);const hostProxy=simpleWorker_createProxyObject(hostMethods,((method,args)=>this._protocol.sendMessage(method,args)),((eventName,arg)=>this._protocol.listen(eventName,arg)));return this._requestHandlerFactory?(this._requestHandler=this._requestHandlerFactory(hostProxy),Promise.resolve(objects_getAllMethodNames(this._requestHandler))):(loaderConfig&&(void 0!==loaderConfig.baseUrl&&delete loaderConfig.baseUrl,void 0!==loaderConfig.paths&&void 0!==loaderConfig.paths.vs&&delete loaderConfig.paths.vs,void 0!==typeof loaderConfig.trustedTypesPolicy&&delete loaderConfig.trustedTypesPolicy,loaderConfig.catchError=!0,globalThis.require.config(loaderConfig)),new Promise(((resolve,reject)=>{(0,globalThis.require)([moduleId],(module=>{this._requestHandler=module.create(hostProxy),this._requestHandler?resolve(objects_getAllMethodNames(this._requestHandler)):reject(new Error("No RequestHandler!"))}),reject)})))}}class DiffChange{constructor(originalStart,originalLength,modifiedStart,modifiedLength){this.originalStart=originalStart,this.originalLength=originalLength,this.modifiedStart=modifiedStart,this.modifiedLength=modifiedLength}getOriginalEnd(){return this.originalStart+this.originalLength}getModifiedEnd(){return this.modifiedStart+this.modifiedLength}}function numberHash(val,initialHashVal){return(initialHashVal<<5)-initialHashVal+val|0}function stringHash(s,hashVal){hashVal=numberHash(149417,hashVal);for(let i=0,length=s.length;i<length;i++)hashVal=numberHash(s.charCodeAt(i),hashVal);return hashVal}function leftRotate(value,bits,totalBits=32){const delta=totalBits-bits;return(value<<bits|(~((1<<delta)-1)&value)>>>delta)>>>0}function fill(dest,index=0,count=dest.byteLength,value=0){for(let i=0;i<count;i++)dest[index+i]=value}function toHexString(bufferOrValue,bitsize=32){return bufferOrValue instanceof ArrayBuffer?Array.from(new Uint8Array(bufferOrValue)).map((b=>b.toString(16).padStart(2,"0"))).join(""):function leftPad(value,length,char="0"){for(;value.length<length;)value=char+value;return value}((bufferOrValue>>>0).toString(16),bitsize/4)}class StringSHA1{constructor(){this._h0=1732584193,this._h1=4023233417,this._h2=2562383102,this._h3=271733878,this._h4=3285377520,this._buff=new Uint8Array(67),this._buffDV=new DataView(this._buff.buffer),this._buffLen=0,this._totalLen=0,this._leftoverHighSurrogate=0,this._finished=!1}update(str){const strLen=str.length;if(0===strLen)return;const buff=this._buff;let charCode,offset,buffLen=this._buffLen,leftoverHighSurrogate=this._leftoverHighSurrogate;for(0!==leftoverHighSurrogate?(charCode=leftoverHighSurrogate,offset=-1,leftoverHighSurrogate=0):(charCode=str.charCodeAt(0),offset=0);;){let codePoint=charCode;if(isHighSurrogate(charCode)){if(!(offset+1<strLen)){leftoverHighSurrogate=charCode;break}{const nextCharCode=str.charCodeAt(offset+1);isLowSurrogate(nextCharCode)?(offset++,codePoint=computeCodePoint(charCode,nextCharCode)):codePoint=65533}}else isLowSurrogate(charCode)&&(codePoint=65533);if(buffLen=this._push(buff,buffLen,codePoint),offset++,!(offset<strLen))break;charCode=str.charCodeAt(offset)}this._buffLen=buffLen,this._leftoverHighSurrogate=leftoverHighSurrogate}_push(buff,buffLen,codePoint){return codePoint<128?buff[buffLen++]=codePoint:codePoint<2048?(buff[buffLen++]=192|(1984&codePoint)>>>6,buff[buffLen++]=128|(63&codePoint)>>>0):codePoint<65536?(buff[buffLen++]=224|(61440&codePoint)>>>12,buff[buffLen++]=128|(4032&codePoint)>>>6,buff[buffLen++]=128|(63&codePoint)>>>0):(buff[buffLen++]=240|(1835008&codePoint)>>>18,buff[buffLen++]=128|(258048&codePoint)>>>12,buff[buffLen++]=128|(4032&codePoint)>>>6,buff[buffLen++]=128|(63&codePoint)>>>0),buffLen>=64&&(this._step(),buffLen-=64,this._totalLen+=64,buff[0]=buff[64],buff[1]=buff[65],buff[2]=buff[66]),buffLen}digest(){return this._finished||(this._finished=!0,this._leftoverHighSurrogate&&(this._leftoverHighSurrogate=0,this._buffLen=this._push(this._buff,this._buffLen,65533)),this._totalLen+=this._buffLen,this._wrapUp()),toHexString(this._h0)+toHexString(this._h1)+toHexString(this._h2)+toHexString(this._h3)+toHexString(this._h4)}_wrapUp(){this._buff[this._buffLen++]=128,fill(this._buff,this._buffLen),this._buffLen>56&&(this._step(),fill(this._buff));const ml=8*this._totalLen;this._buffDV.setUint32(56,Math.floor(ml/4294967296),!1),this._buffDV.setUint32(60,ml%4294967296,!1),this._step()}_step(){const bigBlock32=StringSHA1._bigBlock32,data=this._buffDV;for(let j=0;j<64;j+=4)bigBlock32.setUint32(j,data.getUint32(j,!1),!1);for(let j=64;j<320;j+=4)bigBlock32.setUint32(j,leftRotate(bigBlock32.getUint32(j-12,!1)^bigBlock32.getUint32(j-32,!1)^bigBlock32.getUint32(j-56,!1)^bigBlock32.getUint32(j-64,!1),1),!1);let f,k,temp,a=this._h0,b=this._h1,c=this._h2,d=this._h3,e=this._h4;for(let j=0;j<80;j++)j<20?(f=b&c|~b&d,k=1518500249):j<40?(f=b^c^d,k=1859775393):j<60?(f=b&c|b&d|c&d,k=2400959708):(f=b^c^d,k=3395469782),temp=leftRotate(a,5)+f+e+k+bigBlock32.getUint32(4*j,!1)&4294967295,e=d,d=c,c=leftRotate(b,30),b=a,a=temp;this._h0=this._h0+a&4294967295,this._h1=this._h1+b&4294967295,this._h2=this._h2+c&4294967295,this._h3=this._h3+d&4294967295,this._h4=this._h4+e&4294967295}}StringSHA1._bigBlock32=new DataView(new ArrayBuffer(320));class StringDiffSequence{constructor(source){this.source=source}getElements(){const source=this.source,characters=new Int32Array(source.length);for(let i=0,len=source.length;i<len;i++)characters[i]=source.charCodeAt(i);return characters}}function stringDiff(original,modified,pretty){return new LcsDiff(new StringDiffSequence(original),new StringDiffSequence(modified)).ComputeDiff(pretty).changes}class Debug{static Assert(condition,message){if(!condition)throw new Error(message)}}class MyArray{static Copy(sourceArray,sourceIndex,destinationArray,destinationIndex,length){for(let i=0;i<length;i++)destinationArray[destinationIndex+i]=sourceArray[sourceIndex+i]}static Copy2(sourceArray,sourceIndex,destinationArray,destinationIndex,length){for(let i=0;i<length;i++)destinationArray[destinationIndex+i]=sourceArray[sourceIndex+i]}}class DiffChangeHelper{constructor(){this.m_changes=[],this.m_originalStart=1073741824,this.m_modifiedStart=1073741824,this.m_originalCount=0,this.m_modifiedCount=0}MarkNextChange(){(this.m_originalCount>0||this.m_modifiedCount>0)&&this.m_changes.push(new DiffChange(this.m_originalStart,this.m_originalCount,this.m_modifiedStart,this.m_modifiedCount)),this.m_originalCount=0,this.m_modifiedCount=0,this.m_originalStart=1073741824,this.m_modifiedStart=1073741824}AddOriginalElement(originalIndex,modifiedIndex){this.m_originalStart=Math.min(this.m_originalStart,originalIndex),this.m_modifiedStart=Math.min(this.m_modifiedStart,modifiedIndex),this.m_originalCount++}AddModifiedElement(originalIndex,modifiedIndex){this.m_originalStart=Math.min(this.m_originalStart,originalIndex),this.m_modifiedStart=Math.min(this.m_modifiedStart,modifiedIndex),this.m_modifiedCount++}getChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes}getReverseChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes.reverse(),this.m_changes}}class LcsDiff{constructor(originalSequence,modifiedSequence,continueProcessingPredicate=null){this.ContinueProcessingPredicate=continueProcessingPredicate,this._originalSequence=originalSequence,this._modifiedSequence=modifiedSequence;const[originalStringElements,originalElementsOrHash,originalHasStrings]=LcsDiff._getElements(originalSequence),[modifiedStringElements,modifiedElementsOrHash,modifiedHasStrings]=LcsDiff._getElements(modifiedSequence);this._hasStrings=originalHasStrings&&modifiedHasStrings,this._originalStringElements=originalStringElements,this._originalElementsOrHash=originalElementsOrHash,this._modifiedStringElements=modifiedStringElements,this._modifiedElementsOrHash=modifiedElementsOrHash,this.m_forwardHistory=[],this.m_reverseHistory=[]}static _isStringArray(arr){return arr.length>0&&"string"==typeof arr[0]}static _getElements(sequence){const elements=sequence.getElements();if(LcsDiff._isStringArray(elements)){const hashes=new Int32Array(elements.length);for(let i=0,len=elements.length;i<len;i++)hashes[i]=stringHash(elements[i],0);return[elements,hashes,!0]}return elements instanceof Int32Array?[[],elements,!1]:[[],new Int32Array(elements),!1]}ElementsAreEqual(originalIndex,newIndex){return this._originalElementsOrHash[originalIndex]===this._modifiedElementsOrHash[newIndex]&&(!this._hasStrings||this._originalStringElements[originalIndex]===this._modifiedStringElements[newIndex])}ElementsAreStrictEqual(originalIndex,newIndex){if(!this.ElementsAreEqual(originalIndex,newIndex))return!1;return LcsDiff._getStrictElement(this._originalSequence,originalIndex)===LcsDiff._getStrictElement(this._modifiedSequence,newIndex)}static _getStrictElement(sequence,index){return"function"==typeof sequence.getStrictElement?sequence.getStrictElement(index):null}OriginalElementsAreEqual(index1,index2){return this._originalElementsOrHash[index1]===this._originalElementsOrHash[index2]&&(!this._hasStrings||this._originalStringElements[index1]===this._originalStringElements[index2])}ModifiedElementsAreEqual(index1,index2){return this._modifiedElementsOrHash[index1]===this._modifiedElementsOrHash[index2]&&(!this._hasStrings||this._modifiedStringElements[index1]===this._modifiedStringElements[index2])}ComputeDiff(pretty){return this._ComputeDiff(0,this._originalElementsOrHash.length-1,0,this._modifiedElementsOrHash.length-1,pretty)}_ComputeDiff(originalStart,originalEnd,modifiedStart,modifiedEnd,pretty){const quitEarlyArr=[!1];let changes=this.ComputeDiffRecursive(originalStart,originalEnd,modifiedStart,modifiedEnd,quitEarlyArr);return pretty&&(changes=this.PrettifyChanges(changes)),{quitEarly:quitEarlyArr[0],changes}}ComputeDiffRecursive(originalStart,originalEnd,modifiedStart,modifiedEnd,quitEarlyArr){for(quitEarlyArr[0]=!1;originalStart<=originalEnd&&modifiedStart<=modifiedEnd&&this.ElementsAreEqual(originalStart,modifiedStart);)originalStart++,modifiedStart++;for(;originalEnd>=originalStart&&modifiedEnd>=modifiedStart&&this.ElementsAreEqual(originalEnd,modifiedEnd);)originalEnd--,modifiedEnd--;if(originalStart>originalEnd||modifiedStart>modifiedEnd){let changes;return modifiedStart<=modifiedEnd?(Debug.Assert(originalStart===originalEnd+1,"originalStart should only be one more than originalEnd"),changes=[new DiffChange(originalStart,0,modifiedStart,modifiedEnd-modifiedStart+1)]):originalStart<=originalEnd?(Debug.Assert(modifiedStart===modifiedEnd+1,"modifiedStart should only be one more than modifiedEnd"),changes=[new DiffChange(originalStart,originalEnd-originalStart+1,modifiedStart,0)]):(Debug.Assert(originalStart===originalEnd+1,"originalStart should only be one more than originalEnd"),Debug.Assert(modifiedStart===modifiedEnd+1,"modifiedStart should only be one more than modifiedEnd"),changes=[]),changes}const midOriginalArr=[0],midModifiedArr=[0],result=this.ComputeRecursionPoint(originalStart,originalEnd,modifiedStart,modifiedEnd,midOriginalArr,midModifiedArr,quitEarlyArr),midOriginal=midOriginalArr[0],midModified=midModifiedArr[0];if(null!==result)return result;if(!quitEarlyArr[0]){const leftChanges=this.ComputeDiffRecursive(originalStart,midOriginal,modifiedStart,midModified,quitEarlyArr);let rightChanges=[];return rightChanges=quitEarlyArr[0]?[new DiffChange(midOriginal+1,originalEnd-(midOriginal+1)+1,midModified+1,modifiedEnd-(midModified+1)+1)]:this.ComputeDiffRecursive(midOriginal+1,originalEnd,midModified+1,modifiedEnd,quitEarlyArr),this.ConcatenateChanges(leftChanges,rightChanges)}return[new DiffChange(originalStart,originalEnd-originalStart+1,modifiedStart,modifiedEnd-modifiedStart+1)]}WALKTRACE(diagonalForwardBase,diagonalForwardStart,diagonalForwardEnd,diagonalForwardOffset,diagonalReverseBase,diagonalReverseStart,diagonalReverseEnd,diagonalReverseOffset,forwardPoints,reversePoints,originalIndex,originalEnd,midOriginalArr,modifiedIndex,modifiedEnd,midModifiedArr,deltaIsEven,quitEarlyArr){let forwardChanges=null,reverseChanges=null,changeHelper=new DiffChangeHelper,diagonalMin=diagonalForwardStart,diagonalMax=diagonalForwardEnd,diagonalRelative=midOriginalArr[0]-midModifiedArr[0]-diagonalForwardOffset,lastOriginalIndex=-1073741824,historyIndex=this.m_forwardHistory.length-1;do{const diagonal=diagonalRelative+diagonalForwardBase;diagonal===diagonalMin||diagonal<diagonalMax&&forwardPoints[diagonal-1]<forwardPoints[diagonal+1]?(modifiedIndex=(originalIndex=forwardPoints[diagonal+1])-diagonalRelative-diagonalForwardOffset,originalIndex<lastOriginalIndex&&changeHelper.MarkNextChange(),lastOriginalIndex=originalIndex,changeHelper.AddModifiedElement(originalIndex+1,modifiedIndex),diagonalRelative=diagonal+1-diagonalForwardBase):(modifiedIndex=(originalIndex=forwardPoints[diagonal-1]+1)-diagonalRelative-diagonalForwardOffset,originalIndex<lastOriginalIndex&&changeHelper.MarkNextChange(),lastOriginalIndex=originalIndex-1,changeHelper.AddOriginalElement(originalIndex,modifiedIndex+1),diagonalRelative=diagonal-1-diagonalForwardBase),historyIndex>=0&&(diagonalForwardBase=(forwardPoints=this.m_forwardHistory[historyIndex])[0],diagonalMin=1,diagonalMax=forwardPoints.length-1)}while(--historyIndex>=-1);if(forwardChanges=changeHelper.getReverseChanges(),quitEarlyArr[0]){let originalStartPoint=midOriginalArr[0]+1,modifiedStartPoint=midModifiedArr[0]+1;if(null!==forwardChanges&&forwardChanges.length>0){const lastForwardChange=forwardChanges[forwardChanges.length-1];originalStartPoint=Math.max(originalStartPoint,lastForwardChange.getOriginalEnd()),modifiedStartPoint=Math.max(modifiedStartPoint,lastForwardChange.getModifiedEnd())}reverseChanges=[new DiffChange(originalStartPoint,originalEnd-originalStartPoint+1,modifiedStartPoint,modifiedEnd-modifiedStartPoint+1)]}else{changeHelper=new DiffChangeHelper,diagonalMin=diagonalReverseStart,diagonalMax=diagonalReverseEnd,diagonalRelative=midOriginalArr[0]-midModifiedArr[0]-diagonalReverseOffset,lastOriginalIndex=1073741824,historyIndex=deltaIsEven?this.m_reverseHistory.length-1:this.m_reverseHistory.length-2;do{const diagonal=diagonalRelative+diagonalReverseBase;diagonal===diagonalMin||diagonal<diagonalMax&&reversePoints[diagonal-1]>=reversePoints[diagonal+1]?(modifiedIndex=(originalIndex=reversePoints[diagonal+1]-1)-diagonalRelative-diagonalReverseOffset,originalIndex>lastOriginalIndex&&changeHelper.MarkNextChange(),lastOriginalIndex=originalIndex+1,changeHelper.AddOriginalElement(originalIndex+1,modifiedIndex+1),diagonalRelative=diagonal+1-diagonalReverseBase):(modifiedIndex=(originalIndex=reversePoints[diagonal-1])-diagonalRelative-diagonalReverseOffset,originalIndex>lastOriginalIndex&&changeHelper.MarkNextChange(),lastOriginalIndex=originalIndex,changeHelper.AddModifiedElement(originalIndex+1,modifiedIndex+1),diagonalRelative=diagonal-1-diagonalReverseBase),historyIndex>=0&&(diagonalReverseBase=(reversePoints=this.m_reverseHistory[historyIndex])[0],diagonalMin=1,diagonalMax=reversePoints.length-1)}while(--historyIndex>=-1);reverseChanges=changeHelper.getChanges()}return this.ConcatenateChanges(forwardChanges,reverseChanges)}ComputeRecursionPoint(originalStart,originalEnd,modifiedStart,modifiedEnd,midOriginalArr,midModifiedArr,quitEarlyArr){let originalIndex=0,modifiedIndex=0,diagonalForwardStart=0,diagonalForwardEnd=0,diagonalReverseStart=0,diagonalReverseEnd=0;originalStart--,modifiedStart--,midOriginalArr[0]=0,midModifiedArr[0]=0,this.m_forwardHistory=[],this.m_reverseHistory=[];const maxDifferences=originalEnd-originalStart+(modifiedEnd-modifiedStart),numDiagonals=maxDifferences+1,forwardPoints=new Int32Array(numDiagonals),reversePoints=new Int32Array(numDiagonals),diagonalForwardBase=modifiedEnd-modifiedStart,diagonalReverseBase=originalEnd-originalStart,diagonalForwardOffset=originalStart-modifiedStart,diagonalReverseOffset=originalEnd-modifiedEnd,deltaIsEven=(diagonalReverseBase-diagonalForwardBase)%2==0;forwardPoints[diagonalForwardBase]=originalStart,reversePoints[diagonalReverseBase]=originalEnd,quitEarlyArr[0]=!1;for(let numDifferences=1;numDifferences<=maxDifferences/2+1;numDifferences++){let furthestOriginalIndex=0,furthestModifiedIndex=0;diagonalForwardStart=this.ClipDiagonalBound(diagonalForwardBase-numDifferences,numDifferences,diagonalForwardBase,numDiagonals),diagonalForwardEnd=this.ClipDiagonalBound(diagonalForwardBase+numDifferences,numDifferences,diagonalForwardBase,numDiagonals);for(let diagonal=diagonalForwardStart;diagonal<=diagonalForwardEnd;diagonal+=2){originalIndex=diagonal===diagonalForwardStart||diagonal<diagonalForwardEnd&&forwardPoints[diagonal-1]<forwardPoints[diagonal+1]?forwardPoints[diagonal+1]:forwardPoints[diagonal-1]+1,modifiedIndex=originalIndex-(diagonal-diagonalForwardBase)-diagonalForwardOffset;const tempOriginalIndex=originalIndex;for(;originalIndex<originalEnd&&modifiedIndex<modifiedEnd&&this.ElementsAreEqual(originalIndex+1,modifiedIndex+1);)originalIndex++,modifiedIndex++;if(forwardPoints[diagonal]=originalIndex,originalIndex+modifiedIndex>furthestOriginalIndex+furthestModifiedIndex&&(furthestOriginalIndex=originalIndex,furthestModifiedIndex=modifiedIndex),!deltaIsEven&&Math.abs(diagonal-diagonalReverseBase)<=numDifferences-1&&originalIndex>=reversePoints[diagonal])return midOriginalArr[0]=originalIndex,midModifiedArr[0]=modifiedIndex,tempOriginalIndex<=reversePoints[diagonal]&&numDifferences<=1448?this.WALKTRACE(diagonalForwardBase,diagonalForwardStart,diagonalForwardEnd,diagonalForwardOffset,diagonalReverseBase,diagonalReverseStart,diagonalReverseEnd,diagonalReverseOffset,forwardPoints,reversePoints,originalIndex,originalEnd,midOriginalArr,modifiedIndex,modifiedEnd,midModifiedArr,deltaIsEven,quitEarlyArr):null}const matchLengthOfLongest=(furthestOriginalIndex-originalStart+(furthestModifiedIndex-modifiedStart)-numDifferences)/2;if(null!==this.ContinueProcessingPredicate&&!this.ContinueProcessingPredicate(furthestOriginalIndex,matchLengthOfLongest))return quitEarlyArr[0]=!0,midOriginalArr[0]=furthestOriginalIndex,midModifiedArr[0]=furthestModifiedIndex,matchLengthOfLongest>0&&numDifferences<=1448?this.WALKTRACE(diagonalForwardBase,diagonalForwardStart,diagonalForwardEnd,diagonalForwardOffset,diagonalReverseBase,diagonalReverseStart,diagonalReverseEnd,diagonalReverseOffset,forwardPoints,reversePoints,originalIndex,originalEnd,midOriginalArr,modifiedIndex,modifiedEnd,midModifiedArr,deltaIsEven,quitEarlyArr):(originalStart++,modifiedStart++,[new DiffChange(originalStart,originalEnd-originalStart+1,modifiedStart,modifiedEnd-modifiedStart+1)]);diagonalReverseStart=this.ClipDiagonalBound(diagonalReverseBase-numDifferences,numDifferences,diagonalReverseBase,numDiagonals),diagonalReverseEnd=this.ClipDiagonalBound(diagonalReverseBase+numDifferences,numDifferences,diagonalReverseBase,numDiagonals);for(let diagonal=diagonalReverseStart;diagonal<=diagonalReverseEnd;diagonal+=2){originalIndex=diagonal===diagonalReverseStart||diagonal<diagonalReverseEnd&&reversePoints[diagonal-1]>=reversePoints[diagonal+1]?reversePoints[diagonal+1]-1:reversePoints[diagonal-1],modifiedIndex=originalIndex-(diagonal-diagonalReverseBase)-diagonalReverseOffset;const tempOriginalIndex=originalIndex;for(;originalIndex>originalStart&&modifiedIndex>modifiedStart&&this.ElementsAreEqual(originalIndex,modifiedIndex);)originalIndex--,modifiedIndex--;if(reversePoints[diagonal]=originalIndex,deltaIsEven&&Math.abs(diagonal-diagonalForwardBase)<=numDifferences&&originalIndex<=forwardPoints[diagonal])return midOriginalArr[0]=originalIndex,midModifiedArr[0]=modifiedIndex,tempOriginalIndex>=forwardPoints[diagonal]&&numDifferences<=1448?this.WALKTRACE(diagonalForwardBase,diagonalForwardStart,diagonalForwardEnd,diagonalForwardOffset,diagonalReverseBase,diagonalReverseStart,diagonalReverseEnd,diagonalReverseOffset,forwardPoints,reversePoints,originalIndex,originalEnd,midOriginalArr,modifiedIndex,modifiedEnd,midModifiedArr,deltaIsEven,quitEarlyArr):null}if(numDifferences<=1447){let temp=new Int32Array(diagonalForwardEnd-diagonalForwardStart+2);temp[0]=diagonalForwardBase-diagonalForwardStart+1,MyArray.Copy2(forwardPoints,diagonalForwardStart,temp,1,diagonalForwardEnd-diagonalForwardStart+1),this.m_forwardHistory.push(temp),temp=new Int32Array(diagonalReverseEnd-diagonalReverseStart+2),temp[0]=diagonalReverseBase-diagonalReverseStart+1,MyArray.Copy2(reversePoints,diagonalReverseStart,temp,1,diagonalReverseEnd-diagonalReverseStart+1),this.m_reverseHistory.push(temp)}}return this.WALKTRACE(diagonalForwardBase,diagonalForwardStart,diagonalForwardEnd,diagonalForwardOffset,diagonalReverseBase,diagonalReverseStart,diagonalReverseEnd,diagonalReverseOffset,forwardPoints,reversePoints,originalIndex,originalEnd,midOriginalArr,modifiedIndex,modifiedEnd,midModifiedArr,deltaIsEven,quitEarlyArr)}PrettifyChanges(changes){for(let i=0;i<changes.length;i++){const change=changes[i],originalStop=i<changes.length-1?changes[i+1].originalStart:this._originalElementsOrHash.length,modifiedStop=i<changes.length-1?changes[i+1].modifiedStart:this._modifiedElementsOrHash.length,checkOriginal=change.originalLength>0,checkModified=change.modifiedLength>0;for(;change.originalStart+change.originalLength<originalStop&&change.modifiedStart+change.modifiedLength<modifiedStop&&(!checkOriginal||this.OriginalElementsAreEqual(change.originalStart,change.originalStart+change.originalLength))&&(!checkModified||this.ModifiedElementsAreEqual(change.modifiedStart,change.modifiedStart+change.modifiedLength));){const startStrictEqual=this.ElementsAreStrictEqual(change.originalStart,change.modifiedStart);if(this.ElementsAreStrictEqual(change.originalStart+change.originalLength,change.modifiedStart+change.modifiedLength)&&!startStrictEqual)break;change.originalStart++,change.modifiedStart++}const mergedChangeArr=[null];i<changes.length-1&&this.ChangesOverlap(changes[i],changes[i+1],mergedChangeArr)&&(changes[i]=mergedChangeArr[0],changes.splice(i+1,1),i--)}for(let i=changes.length-1;i>=0;i--){const change=changes[i];let originalStop=0,modifiedStop=0;if(i>0){const prevChange=changes[i-1];originalStop=prevChange.originalStart+prevChange.originalLength,modifiedStop=prevChange.modifiedStart+prevChange.modifiedLength}const checkOriginal=change.originalLength>0,checkModified=change.modifiedLength>0;let bestDelta=0,bestScore=this._boundaryScore(change.originalStart,change.originalLength,change.modifiedStart,change.modifiedLength);for(let delta=1;;delta++){const originalStart=change.originalStart-delta,modifiedStart=change.modifiedStart-delta;if(originalStart<originalStop||modifiedStart<modifiedStop)break;if(checkOriginal&&!this.OriginalElementsAreEqual(originalStart,originalStart+change.originalLength))break;if(checkModified&&!this.ModifiedElementsAreEqual(modifiedStart,modifiedStart+change.modifiedLength))break;const score=(originalStart===originalStop&&modifiedStart===modifiedStop?5:0)+this._boundaryScore(originalStart,change.originalLength,modifiedStart,change.modifiedLength);score>bestScore&&(bestScore=score,bestDelta=delta)}change.originalStart-=bestDelta,change.modifiedStart-=bestDelta;const mergedChangeArr=[null];i>0&&this.ChangesOverlap(changes[i-1],changes[i],mergedChangeArr)&&(changes[i-1]=mergedChangeArr[0],changes.splice(i,1),i++)}if(this._hasStrings)for(let i=1,len=changes.length;i<len;i++){const aChange=changes[i-1],bChange=changes[i],matchedLength=bChange.originalStart-aChange.originalStart-aChange.originalLength,aOriginalStart=aChange.originalStart,bOriginalEnd=bChange.originalStart+bChange.originalLength,abOriginalLength=bOriginalEnd-aOriginalStart,aModifiedStart=aChange.modifiedStart,bModifiedEnd=bChange.modifiedStart+bChange.modifiedLength,abModifiedLength=bModifiedEnd-aModifiedStart;if(matchedLength<5&&abOriginalLength<20&&abModifiedLength<20){const t=this._findBetterContiguousSequence(aOriginalStart,abOriginalLength,aModifiedStart,abModifiedLength,matchedLength);if(t){const[originalMatchStart,modifiedMatchStart]=t;originalMatchStart===aChange.originalStart+aChange.originalLength&&modifiedMatchStart===aChange.modifiedStart+aChange.modifiedLength||(aChange.originalLength=originalMatchStart-aChange.originalStart,aChange.modifiedLength=modifiedMatchStart-aChange.modifiedStart,bChange.originalStart=originalMatchStart+matchedLength,bChange.modifiedStart=modifiedMatchStart+matchedLength,bChange.originalLength=bOriginalEnd-bChange.originalStart,bChange.modifiedLength=bModifiedEnd-bChange.modifiedStart)}}}return changes}_findBetterContiguousSequence(originalStart,originalLength,modifiedStart,modifiedLength,desiredLength){if(originalLength<desiredLength||modifiedLength<desiredLength)return null;const originalMax=originalStart+originalLength-desiredLength+1,modifiedMax=modifiedStart+modifiedLength-desiredLength+1;let bestScore=0,bestOriginalStart=0,bestModifiedStart=0;for(let i=originalStart;i<originalMax;i++)for(let j=modifiedStart;j<modifiedMax;j++){const score=this._contiguousSequenceScore(i,j,desiredLength);score>0&&score>bestScore&&(bestScore=score,bestOriginalStart=i,bestModifiedStart=j)}return bestScore>0?[bestOriginalStart,bestModifiedStart]:null}_contiguousSequenceScore(originalStart,modifiedStart,length){let score=0;for(let l=0;l<length;l++){if(!this.ElementsAreEqual(originalStart+l,modifiedStart+l))return 0;score+=this._originalStringElements[originalStart+l].length}return score}_OriginalIsBoundary(index){return index<=0||index>=this._originalElementsOrHash.length-1||this._hasStrings&&/^\s*$/.test(this._originalStringElements[index])}_OriginalRegionIsBoundary(originalStart,originalLength){if(this._OriginalIsBoundary(originalStart)||this._OriginalIsBoundary(originalStart-1))return!0;if(originalLength>0){const originalEnd=originalStart+originalLength;if(this._OriginalIsBoundary(originalEnd-1)||this._OriginalIsBoundary(originalEnd))return!0}return!1}_ModifiedIsBoundary(index){return index<=0||index>=this._modifiedElementsOrHash.length-1||this._hasStrings&&/^\s*$/.test(this._modifiedStringElements[index])}_ModifiedRegionIsBoundary(modifiedStart,modifiedLength){if(this._ModifiedIsBoundary(modifiedStart)||this._ModifiedIsBoundary(modifiedStart-1))return!0;if(modifiedLength>0){const modifiedEnd=modifiedStart+modifiedLength;if(this._ModifiedIsBoundary(modifiedEnd-1)||this._ModifiedIsBoundary(modifiedEnd))return!0}return!1}_boundaryScore(originalStart,originalLength,modifiedStart,modifiedLength){return(this._OriginalRegionIsBoundary(originalStart,originalLength)?1:0)+(this._ModifiedRegionIsBoundary(modifiedStart,modifiedLength)?1:0)}ConcatenateChanges(left,right){const mergedChangeArr=[];if(0===left.length||0===right.length)return right.length>0?right:left;if(this.ChangesOverlap(left[left.length-1],right[0],mergedChangeArr)){const result=new Array(left.length+right.length-1);return MyArray.Copy(left,0,result,0,left.length-1),result[left.length-1]=mergedChangeArr[0],MyArray.Copy(right,1,result,left.length,right.length-1),result}{const result=new Array(left.length+right.length);return MyArray.Copy(left,0,result,0,left.length),MyArray.Copy(right,0,result,left.length,right.length),result}}ChangesOverlap(left,right,mergedChangeArr){if(Debug.Assert(left.originalStart<=right.originalStart,"Left change is not less than or equal to right change"),Debug.Assert(left.modifiedStart<=right.modifiedStart,"Left change is not less than or equal to right change"),left.originalStart+left.originalLength>=right.originalStart||left.modifiedStart+left.modifiedLength>=right.modifiedStart){const originalStart=left.originalStart;let originalLength=left.originalLength;const modifiedStart=left.modifiedStart;let modifiedLength=left.modifiedLength;return left.originalStart+left.originalLength>=right.originalStart&&(originalLength=right.originalStart+right.originalLength-left.originalStart),left.modifiedStart+left.modifiedLength>=right.modifiedStart&&(modifiedLength=right.modifiedStart+right.modifiedLength-left.modifiedStart),mergedChangeArr[0]=new DiffChange(originalStart,originalLength,modifiedStart,modifiedLength),!0}return mergedChangeArr[0]=null,!1}ClipDiagonalBound(diagonal,numDifferences,diagonalBaseIndex,numDiagonals){if(diagonal>=0&&diagonal<numDiagonals)return diagonal;const diffEven=numDifferences%2==0;if(diagonal<0){return diffEven===(diagonalBaseIndex%2==0)?0:1}return diffEven===((numDiagonals-diagonalBaseIndex-1)%2==0)?numDiagonals-1:numDiagonals-2}}var process_process=__webpack_require__("./node_modules/process/browser.js");let safeProcess;if(void 0!==globals.vscode&&void 0!==globals.vscode.process){const sandboxProcess=globals.vscode.process;safeProcess={get platform(){return sandboxProcess.platform},get arch(){return sandboxProcess.arch},get env(){return sandboxProcess.env},cwd:()=>sandboxProcess.cwd()}}else safeProcess=void 0!==process_process?{get platform(){return process_process.platform},get arch(){return process_process.arch},get env(){return process_process.env},cwd:()=>process_process.env.VSCODE_CWD||process_process.cwd()}:{get platform(){return isWindows?"win32":isMacintosh?"darwin":"linux"},get arch(){},get env(){return{}},cwd:()=>"/"};const process_cwd=safeProcess.cwd,env=safeProcess.env,platform=safeProcess.platform;class ErrorInvalidArgType extends Error{constructor(name,expected,actual){let determiner;"string"==typeof expected&&0===expected.indexOf("not ")?(determiner="must not be",expected=expected.replace(/^not /,"")):determiner="must be";const type=-1!==name.indexOf(".")?"property":"argument";let msg=`The "${name}" ${type} ${determiner} of type ${expected}`;msg+=". Received type "+typeof actual,super(msg),this.code="ERR_INVALID_ARG_TYPE"}}function validateString(value,name){if("string"!=typeof value)throw new ErrorInvalidArgType(name,"string",value)}const platformIsWin32="win32"===platform;function isPathSeparator(code){return 47===code||92===code}function isPosixPathSeparator(code){return 47===code}function isWindowsDeviceRoot(code){return code>=65&&code<=90||code>=97&&code<=122}function normalizeString(path,allowAboveRoot,separator,isPathSeparator){let res="",lastSegmentLength=0,lastSlash=-1,dots=0,code=0;for(let i=0;i<=path.length;++i){if(i<path.length)code=path.charCodeAt(i);else{if(isPathSeparator(code))break;code=47}if(isPathSeparator(code)){if(lastSlash===i-1||1===dots);else if(2===dots){if(res.length<2||2!==lastSegmentLength||46!==res.charCodeAt(res.length-1)||46!==res.charCodeAt(res.length-2)){if(res.length>2){const lastSlashIndex=res.lastIndexOf(separator);-1===lastSlashIndex?(res="",lastSegmentLength=0):(res=res.slice(0,lastSlashIndex),lastSegmentLength=res.length-1-res.lastIndexOf(separator)),lastSlash=i,dots=0;continue}if(0!==res.length){res="",lastSegmentLength=0,lastSlash=i,dots=0;continue}}allowAboveRoot&&(res+=res.length>0?`${separator}..`:"..",lastSegmentLength=2)}else res.length>0?res+=`${separator}${path.slice(lastSlash+1,i)}`:res=path.slice(lastSlash+1,i),lastSegmentLength=i-lastSlash-1;lastSlash=i,dots=0}else 46===code&&-1!==dots?++dots:dots=-1}return res}function path_format(sep,pathObject){!function validateObject(pathObject,name){if(null===pathObject||"object"!=typeof pathObject)throw new ErrorInvalidArgType(name,"Object",pathObject)}(pathObject,"pathObject");const dir=pathObject.dir||pathObject.root,base=pathObject.base||`${pathObject.name||""}${pathObject.ext||""}`;return dir?dir===pathObject.root?`${dir}${base}`:`${dir}${sep}${base}`:base}const win32={resolve(...pathSegments){let resolvedDevice="",resolvedTail="",resolvedAbsolute=!1;for(let i=pathSegments.length-1;i>=-1;i--){let path;if(i>=0){if(path=pathSegments[i],validateString(path,"path"),0===path.length)continue}else 0===resolvedDevice.length?path=process_cwd():(path=env[`=${resolvedDevice}`]||process_cwd(),(void 0===path||path.slice(0,2).toLowerCase()!==resolvedDevice.toLowerCase()&&92===path.charCodeAt(2))&&(path=`${resolvedDevice}\\`));const len=path.length;let rootEnd=0,device="",isAbsolute=!1;const code=path.charCodeAt(0);if(1===len)isPathSeparator(code)&&(rootEnd=1,isAbsolute=!0);else if(isPathSeparator(code))if(isAbsolute=!0,isPathSeparator(path.charCodeAt(1))){let j=2,last=j;for(;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){const firstPart=path.slice(last,j);for(last=j;j<len&&isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){for(last=j;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;j!==len&&j===last||(device=`\\\\${firstPart}\\${path.slice(last,j)}`,rootEnd=j)}}}else rootEnd=1;else isWindowsDeviceRoot(code)&&58===path.charCodeAt(1)&&(device=path.slice(0,2),rootEnd=2,len>2&&isPathSeparator(path.charCodeAt(2))&&(isAbsolute=!0,rootEnd=3));if(device.length>0)if(resolvedDevice.length>0){if(device.toLowerCase()!==resolvedDevice.toLowerCase())continue}else resolvedDevice=device;if(resolvedAbsolute){if(resolvedDevice.length>0)break}else if(resolvedTail=`${path.slice(rootEnd)}\\${resolvedTail}`,resolvedAbsolute=isAbsolute,isAbsolute&&resolvedDevice.length>0)break}return resolvedTail=normalizeString(resolvedTail,!resolvedAbsolute,"\\",isPathSeparator),resolvedAbsolute?`${resolvedDevice}\\${resolvedTail}`:`${resolvedDevice}${resolvedTail}`||"."},normalize(path){validateString(path,"path");const len=path.length;if(0===len)return".";let device,rootEnd=0,isAbsolute=!1;const code=path.charCodeAt(0);if(1===len)return isPosixPathSeparator(code)?"\\":path;if(isPathSeparator(code))if(isAbsolute=!0,isPathSeparator(path.charCodeAt(1))){let j=2,last=j;for(;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){const firstPart=path.slice(last,j);for(last=j;j<len&&isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){for(last=j;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;if(j===len)return`\\\\${firstPart}\\${path.slice(last)}\\`;j!==last&&(device=`\\\\${firstPart}\\${path.slice(last,j)}`,rootEnd=j)}}}else rootEnd=1;else isWindowsDeviceRoot(code)&&58===path.charCodeAt(1)&&(device=path.slice(0,2),rootEnd=2,len>2&&isPathSeparator(path.charCodeAt(2))&&(isAbsolute=!0,rootEnd=3));let tail=rootEnd<len?normalizeString(path.slice(rootEnd),!isAbsolute,"\\",isPathSeparator):"";return 0!==tail.length||isAbsolute||(tail="."),tail.length>0&&isPathSeparator(path.charCodeAt(len-1))&&(tail+="\\"),void 0===device?isAbsolute?`\\${tail}`:tail:isAbsolute?`${device}\\${tail}`:`${device}${tail}`},isAbsolute(path){validateString(path,"path");const len=path.length;if(0===len)return!1;const code=path.charCodeAt(0);return isPathSeparator(code)||len>2&&isWindowsDeviceRoot(code)&&58===path.charCodeAt(1)&&isPathSeparator(path.charCodeAt(2))},join(...paths){if(0===paths.length)return".";let joined,firstPart;for(let i=0;i<paths.length;++i){const arg=paths[i];validateString(arg,"path"),arg.length>0&&(void 0===joined?joined=firstPart=arg:joined+=`\\${arg}`)}if(void 0===joined)return".";let needsReplace=!0,slashCount=0;if("string"==typeof firstPart&&isPathSeparator(firstPart.charCodeAt(0))){++slashCount;const firstLen=firstPart.length;firstLen>1&&isPathSeparator(firstPart.charCodeAt(1))&&(++slashCount,firstLen>2&&(isPathSeparator(firstPart.charCodeAt(2))?++slashCount:needsReplace=!1))}if(needsReplace){for(;slashCount<joined.length&&isPathSeparator(joined.charCodeAt(slashCount));)slashCount++;slashCount>=2&&(joined=`\\${joined.slice(slashCount)}`)}return win32.normalize(joined)},relative(from,to){if(validateString(from,"from"),validateString(to,"to"),from===to)return"";const fromOrig=win32.resolve(from),toOrig=win32.resolve(to);if(fromOrig===toOrig)return"";if((from=fromOrig.toLowerCase())===(to=toOrig.toLowerCase()))return"";let fromStart=0;for(;fromStart<from.length&&92===from.charCodeAt(fromStart);)fromStart++;let fromEnd=from.length;for(;fromEnd-1>fromStart&&92===from.charCodeAt(fromEnd-1);)fromEnd--;const fromLen=fromEnd-fromStart;let toStart=0;for(;toStart<to.length&&92===to.charCodeAt(toStart);)toStart++;let toEnd=to.length;for(;toEnd-1>toStart&&92===to.charCodeAt(toEnd-1);)toEnd--;const toLen=toEnd-toStart,length=fromLen<toLen?fromLen:toLen;let lastCommonSep=-1,i=0;for(;i<length;i++){const fromCode=from.charCodeAt(fromStart+i);if(fromCode!==to.charCodeAt(toStart+i))break;92===fromCode&&(lastCommonSep=i)}if(i!==length){if(-1===lastCommonSep)return toOrig}else{if(toLen>length){if(92===to.charCodeAt(toStart+i))return toOrig.slice(toStart+i+1);if(2===i)return toOrig.slice(toStart+i)}fromLen>length&&(92===from.charCodeAt(fromStart+i)?lastCommonSep=i:2===i&&(lastCommonSep=3)),-1===lastCommonSep&&(lastCommonSep=0)}let out="";for(i=fromStart+lastCommonSep+1;i<=fromEnd;++i)i!==fromEnd&&92!==from.charCodeAt(i)||(out+=0===out.length?"..":"\\..");return toStart+=lastCommonSep,out.length>0?`${out}${toOrig.slice(toStart,toEnd)}`:(92===toOrig.charCodeAt(toStart)&&++toStart,toOrig.slice(toStart,toEnd))},toNamespacedPath(path){if("string"!=typeof path||0===path.length)return path;const resolvedPath=win32.resolve(path);if(resolvedPath.length<=2)return path;if(92===resolvedPath.charCodeAt(0)){if(92===resolvedPath.charCodeAt(1)){const code=resolvedPath.charCodeAt(2);if(63!==code&&46!==code)return`\\\\?\\UNC\\${resolvedPath.slice(2)}`}}else if(isWindowsDeviceRoot(resolvedPath.charCodeAt(0))&&58===resolvedPath.charCodeAt(1)&&92===resolvedPath.charCodeAt(2))return`\\\\?\\${resolvedPath}`;return path},dirname(path){validateString(path,"path");const len=path.length;if(0===len)return".";let rootEnd=-1,offset=0;const code=path.charCodeAt(0);if(1===len)return isPathSeparator(code)?path:".";if(isPathSeparator(code)){if(rootEnd=offset=1,isPathSeparator(path.charCodeAt(1))){let j=2,last=j;for(;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){for(last=j;j<len&&isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){for(last=j;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;if(j===len)return path;j!==last&&(rootEnd=offset=j+1)}}}}else isWindowsDeviceRoot(code)&&58===path.charCodeAt(1)&&(rootEnd=len>2&&isPathSeparator(path.charCodeAt(2))?3:2,offset=rootEnd);let end=-1,matchedSlash=!0;for(let i=len-1;i>=offset;--i)if(isPathSeparator(path.charCodeAt(i))){if(!matchedSlash){end=i;break}}else matchedSlash=!1;if(-1===end){if(-1===rootEnd)return".";end=rootEnd}return path.slice(0,end)},basename(path,ext){void 0!==ext&&validateString(ext,"ext"),validateString(path,"path");let i,start=0,end=-1,matchedSlash=!0;if(path.length>=2&&isWindowsDeviceRoot(path.charCodeAt(0))&&58===path.charCodeAt(1)&&(start=2),void 0!==ext&&ext.length>0&&ext.length<=path.length){if(ext===path)return"";let extIdx=ext.length-1,firstNonSlashEnd=-1;for(i=path.length-1;i>=start;--i){const code=path.charCodeAt(i);if(isPathSeparator(code)){if(!matchedSlash){start=i+1;break}}else-1===firstNonSlashEnd&&(matchedSlash=!1,firstNonSlashEnd=i+1),extIdx>=0&&(code===ext.charCodeAt(extIdx)?-1==--extIdx&&(end=i):(extIdx=-1,end=firstNonSlashEnd))}return start===end?end=firstNonSlashEnd:-1===end&&(end=path.length),path.slice(start,end)}for(i=path.length-1;i>=start;--i)if(isPathSeparator(path.charCodeAt(i))){if(!matchedSlash){start=i+1;break}}else-1===end&&(matchedSlash=!1,end=i+1);return-1===end?"":path.slice(start,end)},extname(path){validateString(path,"path");let start=0,startDot=-1,startPart=0,end=-1,matchedSlash=!0,preDotState=0;path.length>=2&&58===path.charCodeAt(1)&&isWindowsDeviceRoot(path.charCodeAt(0))&&(start=startPart=2);for(let i=path.length-1;i>=start;--i){const code=path.charCodeAt(i);if(isPathSeparator(code)){if(!matchedSlash){startPart=i+1;break}}else-1===end&&(matchedSlash=!1,end=i+1),46===code?-1===startDot?startDot=i:1!==preDotState&&(preDotState=1):-1!==startDot&&(preDotState=-1)}return-1===startDot||-1===end||0===preDotState||1===preDotState&&startDot===end-1&&startDot===startPart+1?"":path.slice(startDot,end)},format:path_format.bind(null,"\\"),parse(path){validateString(path,"path");const ret={root:"",dir:"",base:"",ext:"",name:""};if(0===path.length)return ret;const len=path.length;let rootEnd=0,code=path.charCodeAt(0);if(1===len)return isPathSeparator(code)?(ret.root=ret.dir=path,ret):(ret.base=ret.name=path,ret);if(isPathSeparator(code)){if(rootEnd=1,isPathSeparator(path.charCodeAt(1))){let j=2,last=j;for(;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){for(last=j;j<len&&isPathSeparator(path.charCodeAt(j));)j++;if(j<len&&j!==last){for(last=j;j<len&&!isPathSeparator(path.charCodeAt(j));)j++;j===len?rootEnd=j:j!==last&&(rootEnd=j+1)}}}}else if(isWindowsDeviceRoot(code)&&58===path.charCodeAt(1)){if(len<=2)return ret.root=ret.dir=path,ret;if(rootEnd=2,isPathSeparator(path.charCodeAt(2))){if(3===len)return ret.root=ret.dir=path,ret;rootEnd=3}}rootEnd>0&&(ret.root=path.slice(0,rootEnd));let startDot=-1,startPart=rootEnd,end=-1,matchedSlash=!0,i=path.length-1,preDotState=0;for(;i>=rootEnd;--i)if(code=path.charCodeAt(i),isPathSeparator(code)){if(!matchedSlash){startPart=i+1;break}}else-1===end&&(matchedSlash=!1,end=i+1),46===code?-1===startDot?startDot=i:1!==preDotState&&(preDotState=1):-1!==startDot&&(preDotState=-1);return-1!==end&&(-1===startDot||0===preDotState||1===preDotState&&startDot===end-1&&startDot===startPart+1?ret.base=ret.name=path.slice(startPart,end):(ret.name=path.slice(startPart,startDot),ret.base=path.slice(startPart,end),ret.ext=path.slice(startDot,end))),ret.dir=startPart>0&&startPart!==rootEnd?path.slice(0,startPart-1):ret.root,ret},sep:"\\",delimiter:";",win32:null,posix:null},posixCwd=(()=>{if(platformIsWin32){const regexp=/\\/g;return()=>{const cwd=process_cwd().replace(regexp,"/");return cwd.slice(cwd.indexOf("/"))}}return()=>process_cwd()})(),posix={resolve(...pathSegments){let resolvedPath="",resolvedAbsolute=!1;for(let i=pathSegments.length-1;i>=-1&&!resolvedAbsolute;i--){const path=i>=0?pathSegments[i]:posixCwd();validateString(path,"path"),0!==path.length&&(resolvedPath=`${path}/${resolvedPath}`,resolvedAbsolute=47===path.charCodeAt(0))}return resolvedPath=normalizeString(resolvedPath,!resolvedAbsolute,"/",isPosixPathSeparator),resolvedAbsolute?`/${resolvedPath}`:resolvedPath.length>0?resolvedPath:"."},normalize(path){if(validateString(path,"path"),0===path.length)return".";const isAbsolute=47===path.charCodeAt(0),trailingSeparator=47===path.charCodeAt(path.length-1);return 0===(path=normalizeString(path,!isAbsolute,"/",isPosixPathSeparator)).length?isAbsolute?"/":trailingSeparator?"./":".":(trailingSeparator&&(path+="/"),isAbsolute?`/${path}`:path)},isAbsolute:path=>(validateString(path,"path"),path.length>0&&47===path.charCodeAt(0)),join(...paths){if(0===paths.length)return".";let joined;for(let i=0;i<paths.length;++i){const arg=paths[i];validateString(arg,"path"),arg.length>0&&(void 0===joined?joined=arg:joined+=`/${arg}`)}return void 0===joined?".":posix.normalize(joined)},relative(from,to){if(validateString(from,"from"),validateString(to,"to"),from===to)return"";if((from=posix.resolve(from))===(to=posix.resolve(to)))return"";const fromEnd=from.length,fromLen=fromEnd-1,toLen=to.length-1,length=fromLen<toLen?fromLen:toLen;let lastCommonSep=-1,i=0;for(;i<length;i++){const fromCode=from.charCodeAt(1+i);if(fromCode!==to.charCodeAt(1+i))break;47===fromCode&&(lastCommonSep=i)}if(i===length)if(toLen>length){if(47===to.charCodeAt(1+i))return to.slice(1+i+1);if(0===i)return to.slice(1+i)}else fromLen>length&&(47===from.charCodeAt(1+i)?lastCommonSep=i:0===i&&(lastCommonSep=0));let out="";for(i=1+lastCommonSep+1;i<=fromEnd;++i)i!==fromEnd&&47!==from.charCodeAt(i)||(out+=0===out.length?"..":"/..");return`${out}${to.slice(1+lastCommonSep)}`},toNamespacedPath:path=>path,dirname(path){if(validateString(path,"path"),0===path.length)return".";const hasRoot=47===path.charCodeAt(0);let end=-1,matchedSlash=!0;for(let i=path.length-1;i>=1;--i)if(47===path.charCodeAt(i)){if(!matchedSlash){end=i;break}}else matchedSlash=!1;return-1===end?hasRoot?"/":".":hasRoot&&1===end?"//":path.slice(0,end)},basename(path,ext){void 0!==ext&&validateString(ext,"ext"),validateString(path,"path");let i,start=0,end=-1,matchedSlash=!0;if(void 0!==ext&&ext.length>0&&ext.length<=path.length){if(ext===path)return"";let extIdx=ext.length-1,firstNonSlashEnd=-1;for(i=path.length-1;i>=0;--i){const code=path.charCodeAt(i);if(47===code){if(!matchedSlash){start=i+1;break}}else-1===firstNonSlashEnd&&(matchedSlash=!1,firstNonSlashEnd=i+1),extIdx>=0&&(code===ext.charCodeAt(extIdx)?-1==--extIdx&&(end=i):(extIdx=-1,end=firstNonSlashEnd))}return start===end?end=firstNonSlashEnd:-1===end&&(end=path.length),path.slice(start,end)}for(i=path.length-1;i>=0;--i)if(47===path.charCodeAt(i)){if(!matchedSlash){start=i+1;break}}else-1===end&&(matchedSlash=!1,end=i+1);return-1===end?"":path.slice(start,end)},extname(path){validateString(path,"path");let startDot=-1,startPart=0,end=-1,matchedSlash=!0,preDotState=0;for(let i=path.length-1;i>=0;--i){const code=path.charCodeAt(i);if(47!==code)-1===end&&(matchedSlash=!1,end=i+1),46===code?-1===startDot?startDot=i:1!==preDotState&&(preDotState=1):-1!==startDot&&(preDotState=-1);else if(!matchedSlash){startPart=i+1;break}}return-1===startDot||-1===end||0===preDotState||1===preDotState&&startDot===end-1&&startDot===startPart+1?"":path.slice(startDot,end)},format:path_format.bind(null,"/"),parse(path){validateString(path,"path");const ret={root:"",dir:"",base:"",ext:"",name:""};if(0===path.length)return ret;const isAbsolute=47===path.charCodeAt(0);let start;isAbsolute?(ret.root="/",start=1):start=0;let startDot=-1,startPart=0,end=-1,matchedSlash=!0,i=path.length-1,preDotState=0;for(;i>=start;--i){const code=path.charCodeAt(i);if(47!==code)-1===end&&(matchedSlash=!1,end=i+1),46===code?-1===startDot?startDot=i:1!==preDotState&&(preDotState=1):-1!==startDot&&(preDotState=-1);else if(!matchedSlash){startPart=i+1;break}}if(-1!==end){const start=0===startPart&&isAbsolute?1:startPart;-1===startDot||0===preDotState||1===preDotState&&startDot===end-1&&startDot===startPart+1?ret.base=ret.name=path.slice(start,end):(ret.name=path.slice(start,startDot),ret.base=path.slice(start,end),ret.ext=path.slice(startDot,end))}return startPart>0?ret.dir=path.slice(0,startPart-1):isAbsolute&&(ret.dir="/"),ret},sep:"/",delimiter:":",win32:null,posix:null};posix.win32=win32.win32=win32,posix.posix=win32.posix=posix;platformIsWin32?win32.normalize:posix.normalize,platformIsWin32?win32.resolve:posix.resolve,platformIsWin32?win32.relative:posix.relative,platformIsWin32?win32.dirname:posix.dirname,platformIsWin32?win32.basename:posix.basename,platformIsWin32?win32.extname:posix.extname,platformIsWin32?win32.sep:posix.sep;const _schemePattern=/^\w[\w\d+.-]*$/,_singleSlashStart=/^\//,_doubleSlashStart=/^\/\//;const _slash="/",_regexp=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class uri_URI{static isUri(thing){return thing instanceof uri_URI||!!thing&&("string"==typeof thing.authority&&"string"==typeof thing.fragment&&"string"==typeof thing.path&&"string"==typeof thing.query&&"string"==typeof thing.scheme&&"string"==typeof thing.fsPath&&"function"==typeof thing.with&&"function"==typeof thing.toString)}constructor(schemeOrData,authority,path,query,fragment,_strict=!1){"object"==typeof schemeOrData?(this.scheme=schemeOrData.scheme||"",this.authority=schemeOrData.authority||"",this.path=schemeOrData.path||"",this.query=schemeOrData.query||"",this.fragment=schemeOrData.fragment||""):(this.scheme=function _schemeFix(scheme,_strict){return scheme||_strict?scheme:"file"}(schemeOrData,_strict),this.authority=authority||"",this.path=function _referenceResolution(scheme,path){switch(scheme){case"https":case"http":case"file":path?path[0]!==_slash&&(path=_slash+path):path=_slash}return path}(this.scheme,path||""),this.query=query||"",this.fragment=fragment||"",function _validateUri(ret,_strict){if(!ret.scheme&&_strict)throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${ret.authority}", path: "${ret.path}", query: "${ret.query}", fragment: "${ret.fragment}"}`);if(ret.scheme&&!_schemePattern.test(ret.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(ret.path)if(ret.authority){if(!_singleSlashStart.test(ret.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(_doubleSlashStart.test(ret.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}(this,_strict))}get fsPath(){return uriToFsPath(this,!1)}with(change){if(!change)return this;let{scheme,authority,path,query,fragment}=change;return void 0===scheme?scheme=this.scheme:null===scheme&&(scheme=""),void 0===authority?authority=this.authority:null===authority&&(authority=""),void 0===path?path=this.path:null===path&&(path=""),void 0===query?query=this.query:null===query&&(query=""),void 0===fragment?fragment=this.fragment:null===fragment&&(fragment=""),scheme===this.scheme&&authority===this.authority&&path===this.path&&query===this.query&&fragment===this.fragment?this:new Uri(scheme,authority,path,query,fragment)}static parse(value,_strict=!1){const match=_regexp.exec(value);return match?new Uri(match[2]||"",percentDecode(match[4]||""),percentDecode(match[5]||""),percentDecode(match[7]||""),percentDecode(match[9]||""),_strict):new Uri("","","","","")}static file(path){let authority="";if(isWindows&&(path=path.replace(/\\/g,_slash)),path[0]===_slash&&path[1]===_slash){const idx=path.indexOf(_slash,2);-1===idx?(authority=path.substring(2),path=_slash):(authority=path.substring(2,idx),path=path.substring(idx)||_slash)}return new Uri("file",authority,path,"","")}static from(components,strict){return new Uri(components.scheme,components.authority,components.path,components.query,components.fragment,strict)}static joinPath(uri,...pathFragment){if(!uri.path)throw new Error("[UriError]: cannot call joinPath on URI without path");let newPath;return newPath=isWindows&&"file"===uri.scheme?uri_URI.file(win32.join(uriToFsPath(uri,!0),...pathFragment)).path:posix.join(uri.path,...pathFragment),uri.with({path:newPath})}toString(skipEncoding=!1){return _asFormatted(this,skipEncoding)}toJSON(){return this}static revive(data){var _a,_b;if(data){if(data instanceof uri_URI)return data;{const result=new Uri(data);return result._formatted=null!==(_a=data.external)&&void 0!==_a?_a:null,result._fsPath=data._sep===_pathSepMarker&&null!==(_b=data.fsPath)&&void 0!==_b?_b:null,result}}return data}}const _pathSepMarker=isWindows?1:void 0;class Uri extends uri_URI{constructor(){super(...arguments),this._formatted=null,this._fsPath=null}get fsPath(){return this._fsPath||(this._fsPath=uriToFsPath(this,!1)),this._fsPath}toString(skipEncoding=!1){return skipEncoding?_asFormatted(this,!0):(this._formatted||(this._formatted=_asFormatted(this,!1)),this._formatted)}toJSON(){const res={$mid:1};return this._fsPath&&(res.fsPath=this._fsPath,res._sep=_pathSepMarker),this._formatted&&(res.external=this._formatted),this.path&&(res.path=this.path),this.scheme&&(res.scheme=this.scheme),this.authority&&(res.authority=this.authority),this.query&&(res.query=this.query),this.fragment&&(res.fragment=this.fragment),res}}const encodeTable={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function encodeURIComponentFast(uriComponent,isPath,isAuthority){let res,nativeEncodePos=-1;for(let pos=0;pos<uriComponent.length;pos++){const code=uriComponent.charCodeAt(pos);if(code>=97&&code<=122||code>=65&&code<=90||code>=48&&code<=57||45===code||46===code||95===code||126===code||isPath&&47===code||isAuthority&&91===code||isAuthority&&93===code||isAuthority&&58===code)-1!==nativeEncodePos&&(res+=encodeURIComponent(uriComponent.substring(nativeEncodePos,pos)),nativeEncodePos=-1),void 0!==res&&(res+=uriComponent.charAt(pos));else{void 0===res&&(res=uriComponent.substr(0,pos));const escaped=encodeTable[code];void 0!==escaped?(-1!==nativeEncodePos&&(res+=encodeURIComponent(uriComponent.substring(nativeEncodePos,pos)),nativeEncodePos=-1),res+=escaped):-1===nativeEncodePos&&(nativeEncodePos=pos)}}return-1!==nativeEncodePos&&(res+=encodeURIComponent(uriComponent.substring(nativeEncodePos))),void 0!==res?res:uriComponent}function encodeURIComponentMinimal(path){let res;for(let pos=0;pos<path.length;pos++){const code=path.charCodeAt(pos);35===code||63===code?(void 0===res&&(res=path.substr(0,pos)),res+=encodeTable[code]):void 0!==res&&(res+=path[pos])}return void 0!==res?res:path}function uriToFsPath(uri,keepDriveLetterCasing){let value;return value=uri.authority&&uri.path.length>1&&"file"===uri.scheme?`//${uri.authority}${uri.path}`:47===uri.path.charCodeAt(0)&&(uri.path.charCodeAt(1)>=65&&uri.path.charCodeAt(1)<=90||uri.path.charCodeAt(1)>=97&&uri.path.charCodeAt(1)<=122)&&58===uri.path.charCodeAt(2)?keepDriveLetterCasing?uri.path.substr(1):uri.path[1].toLowerCase()+uri.path.substr(2):uri.path,isWindows&&(value=value.replace(/\//g,"\\")),value}function _asFormatted(uri,skipEncoding){const encoder=skipEncoding?encodeURIComponentMinimal:encodeURIComponentFast;let res="",{scheme,authority,path,query,fragment}=uri;if(scheme&&(res+=scheme,res+=":"),(authority||"file"===scheme)&&(res+=_slash,res+=_slash),authority){let idx=authority.indexOf("@");if(-1!==idx){const userinfo=authority.substr(0,idx);authority=authority.substr(idx+1),idx=userinfo.lastIndexOf(":"),-1===idx?res+=encoder(userinfo,!1,!1):(res+=encoder(userinfo.substr(0,idx),!1,!1),res+=":",res+=encoder(userinfo.substr(idx+1),!1,!0)),res+="@"}authority=authority.toLowerCase(),idx=authority.lastIndexOf(":"),-1===idx?res+=encoder(authority,!1,!0):(res+=encoder(authority.substr(0,idx),!1,!0),res+=authority.substr(idx))}if(path){if(path.length>=3&&47===path.charCodeAt(0)&&58===path.charCodeAt(2)){const code=path.charCodeAt(1);code>=65&&code<=90&&(path=`/${String.fromCharCode(code+32)}:${path.substr(3)}`)}else if(path.length>=2&&58===path.charCodeAt(1)){const code=path.charCodeAt(0);code>=65&&code<=90&&(path=`${String.fromCharCode(code+32)}:${path.substr(2)}`)}res+=encoder(path,!0,!1)}return query&&(res+="?",res+=encoder(query,!1,!1)),fragment&&(res+="#",res+=skipEncoding?fragment:encodeURIComponentFast(fragment,!1,!1)),res}function decodeURIComponentGraceful(str){try{return decodeURIComponent(str)}catch(_a){return str.length>3?str.substr(0,3)+decodeURIComponentGraceful(str.substr(3)):str}}const _rEncodedAsHex=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function percentDecode(str){return str.match(_rEncodedAsHex)?str.replace(_rEncodedAsHex,(match=>decodeURIComponentGraceful(match))):str}class position_Position{constructor(lineNumber,column){this.lineNumber=lineNumber,this.column=column}with(newLineNumber=this.lineNumber,newColumn=this.column){return newLineNumber===this.lineNumber&&newColumn===this.column?this:new position_Position(newLineNumber,newColumn)}delta(deltaLineNumber=0,deltaColumn=0){return this.with(this.lineNumber+deltaLineNumber,this.column+deltaColumn)}equals(other){return position_Position.equals(this,other)}static equals(a,b){return!a&&!b||!!a&&!!b&&a.lineNumber===b.lineNumber&&a.column===b.column}isBefore(other){return position_Position.isBefore(this,other)}static isBefore(a,b){return a.lineNumber<b.lineNumber||!(b.lineNumber<a.lineNumber)&&a.column<b.column}isBeforeOrEqual(other){return position_Position.isBeforeOrEqual(this,other)}static isBeforeOrEqual(a,b){return a.lineNumber<b.lineNumber||!(b.lineNumber<a.lineNumber)&&a.column<=b.column}static compare(a,b){const aLineNumber=0|a.lineNumber,bLineNumber=0|b.lineNumber;if(aLineNumber===bLineNumber){return(0|a.column)-(0|b.column)}return aLineNumber-bLineNumber}clone(){return new position_Position(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(pos){return new position_Position(pos.lineNumber,pos.column)}static isIPosition(obj){return obj&&"number"==typeof obj.lineNumber&&"number"==typeof obj.column}}class range_Range{constructor(startLineNumber,startColumn,endLineNumber,endColumn){startLineNumber>endLineNumber||startLineNumber===endLineNumber&&startColumn>endColumn?(this.startLineNumber=endLineNumber,this.startColumn=endColumn,this.endLineNumber=startLineNumber,this.endColumn=startColumn):(this.startLineNumber=startLineNumber,this.startColumn=startColumn,this.endLineNumber=endLineNumber,this.endColumn=endColumn)}isEmpty(){return range_Range.isEmpty(this)}static isEmpty(range){return range.startLineNumber===range.endLineNumber&&range.startColumn===range.endColumn}containsPosition(position){return range_Range.containsPosition(this,position)}static containsPosition(range,position){return!(position.lineNumber<range.startLineNumber||position.lineNumber>range.endLineNumber)&&(!(position.lineNumber===range.startLineNumber&&position.column<range.startColumn)&&!(position.lineNumber===range.endLineNumber&&position.column>range.endColumn))}static strictContainsPosition(range,position){return!(position.lineNumber<range.startLineNumber||position.lineNumber>range.endLineNumber)&&(!(position.lineNumber===range.startLineNumber&&position.column<=range.startColumn)&&!(position.lineNumber===range.endLineNumber&&position.column>=range.endColumn))}containsRange(range){return range_Range.containsRange(this,range)}static containsRange(range,otherRange){return!(otherRange.startLineNumber<range.startLineNumber||otherRange.endLineNumber<range.startLineNumber)&&(!(otherRange.startLineNumber>range.endLineNumber||otherRange.endLineNumber>range.endLineNumber)&&(!(otherRange.startLineNumber===range.startLineNumber&&otherRange.startColumn<range.startColumn)&&!(otherRange.endLineNumber===range.endLineNumber&&otherRange.endColumn>range.endColumn)))}strictContainsRange(range){return range_Range.strictContainsRange(this,range)}static strictContainsRange(range,otherRange){return!(otherRange.startLineNumber<range.startLineNumber||otherRange.endLineNumber<range.startLineNumber)&&(!(otherRange.startLineNumber>range.endLineNumber||otherRange.endLineNumber>range.endLineNumber)&&(!(otherRange.startLineNumber===range.startLineNumber&&otherRange.startColumn<=range.startColumn)&&!(otherRange.endLineNumber===range.endLineNumber&&otherRange.endColumn>=range.endColumn)))}plusRange(range){return range_Range.plusRange(this,range)}static plusRange(a,b){let startLineNumber,startColumn,endLineNumber,endColumn;return b.startLineNumber<a.startLineNumber?(startLineNumber=b.startLineNumber,startColumn=b.startColumn):b.startLineNumber===a.startLineNumber?(startLineNumber=b.startLineNumber,startColumn=Math.min(b.startColumn,a.startColumn)):(startLineNumber=a.startLineNumber,startColumn=a.startColumn),b.endLineNumber>a.endLineNumber?(endLineNumber=b.endLineNumber,endColumn=b.endColumn):b.endLineNumber===a.endLineNumber?(endLineNumber=b.endLineNumber,endColumn=Math.max(b.endColumn,a.endColumn)):(endLineNumber=a.endLineNumber,endColumn=a.endColumn),new range_Range(startLineNumber,startColumn,endLineNumber,endColumn)}intersectRanges(range){return range_Range.intersectRanges(this,range)}static intersectRanges(a,b){let resultStartLineNumber=a.startLineNumber,resultStartColumn=a.startColumn,resultEndLineNumber=a.endLineNumber,resultEndColumn=a.endColumn;const otherStartLineNumber=b.startLineNumber,otherStartColumn=b.startColumn,otherEndLineNumber=b.endLineNumber,otherEndColumn=b.endColumn;return resultStartLineNumber<otherStartLineNumber?(resultStartLineNumber=otherStartLineNumber,resultStartColumn=otherStartColumn):resultStartLineNumber===otherStartLineNumber&&(resultStartColumn=Math.max(resultStartColumn,otherStartColumn)),resultEndLineNumber>otherEndLineNumber?(resultEndLineNumber=otherEndLineNumber,resultEndColumn=otherEndColumn):resultEndLineNumber===otherEndLineNumber&&(resultEndColumn=Math.min(resultEndColumn,otherEndColumn)),resultStartLineNumber>resultEndLineNumber||resultStartLineNumber===resultEndLineNumber&&resultStartColumn>resultEndColumn?null:new range_Range(resultStartLineNumber,resultStartColumn,resultEndLineNumber,resultEndColumn)}equalsRange(other){return range_Range.equalsRange(this,other)}static equalsRange(a,b){return!a&&!b||!!a&&!!b&&a.startLineNumber===b.startLineNumber&&a.startColumn===b.startColumn&&a.endLineNumber===b.endLineNumber&&a.endColumn===b.endColumn}getEndPosition(){return range_Range.getEndPosition(this)}static getEndPosition(range){return new position_Position(range.endLineNumber,range.endColumn)}getStartPosition(){return range_Range.getStartPosition(this)}static getStartPosition(range){return new position_Position(range.startLineNumber,range.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(endLineNumber,endColumn){return new range_Range(this.startLineNumber,this.startColumn,endLineNumber,endColumn)}setStartPosition(startLineNumber,startColumn){return new range_Range(startLineNumber,startColumn,this.endLineNumber,this.endColumn)}collapseToStart(){return range_Range.collapseToStart(this)}static collapseToStart(range){return new range_Range(range.startLineNumber,range.startColumn,range.startLineNumber,range.startColumn)}collapseToEnd(){return range_Range.collapseToEnd(this)}static collapseToEnd(range){return new range_Range(range.endLineNumber,range.endColumn,range.endLineNumber,range.endColumn)}delta(lineCount){return new range_Range(this.startLineNumber+lineCount,this.startColumn,this.endLineNumber+lineCount,this.endColumn)}static fromPositions(start,end=start){return new range_Range(start.lineNumber,start.column,end.lineNumber,end.column)}static lift(range){return range?new range_Range(range.startLineNumber,range.startColumn,range.endLineNumber,range.endColumn):null}static isIRange(obj){return obj&&"number"==typeof obj.startLineNumber&&"number"==typeof obj.startColumn&&"number"==typeof obj.endLineNumber&&"number"==typeof obj.endColumn}static areIntersectingOrTouching(a,b){return!(a.endLineNumber<b.startLineNumber||a.endLineNumber===b.startLineNumber&&a.endColumn<b.startColumn)&&!(b.endLineNumber<a.startLineNumber||b.endLineNumber===a.startLineNumber&&b.endColumn<a.startColumn)}static areIntersecting(a,b){return!(a.endLineNumber<b.startLineNumber||a.endLineNumber===b.startLineNumber&&a.endColumn<=b.startColumn)&&!(b.endLineNumber<a.startLineNumber||b.endLineNumber===a.startLineNumber&&b.endColumn<=a.startColumn)}static compareRangesUsingStarts(a,b){if(a&&b){const aStartLineNumber=0|a.startLineNumber,bStartLineNumber=0|b.startLineNumber;if(aStartLineNumber===bStartLineNumber){const aStartColumn=0|a.startColumn,bStartColumn=0|b.startColumn;if(aStartColumn===bStartColumn){const aEndLineNumber=0|a.endLineNumber,bEndLineNumber=0|b.endLineNumber;if(aEndLineNumber===bEndLineNumber){return(0|a.endColumn)-(0|b.endColumn)}return aEndLineNumber-bEndLineNumber}return aStartColumn-bStartColumn}return aStartLineNumber-bStartLineNumber}return(a?1:0)-(b?1:0)}static compareRangesUsingEnds(a,b){return a.endLineNumber===b.endLineNumber?a.endColumn===b.endColumn?a.startLineNumber===b.startLineNumber?a.startColumn-b.startColumn:a.startLineNumber-b.startLineNumber:a.endColumn-b.endColumn:a.endLineNumber-b.endLineNumber}static spansMultipleLines(range){return range.endLineNumber>range.startLineNumber}toJSON(){return this}}var CompareResult;!function(CompareResult){CompareResult.isLessThan=function isLessThan(result){return result<0},CompareResult.isGreaterThan=function isGreaterThan(result){return result>0},CompareResult.isNeitherLessOrGreaterThan=function isNeitherLessOrGreaterThan(result){return 0===result},CompareResult.greaterThan=1,CompareResult.lessThan=-1,CompareResult.neitherLessOrGreaterThan=0}(CompareResult||(CompareResult={}));class CallbackIterable{constructor(iterate){this.iterate=iterate}toArray(){const result=[];return this.iterate((item=>(result.push(item),!0))),result}filter(predicate){return new CallbackIterable((cb=>this.iterate((item=>!predicate(item)||cb(item)))))}map(mapFn){return new CallbackIterable((cb=>this.iterate((item=>cb(mapFn(item))))))}findLast(predicate){let result;return this.iterate((item=>(predicate(item)&&(result=item),!0))),result}findLastMaxBy(comparator){let result,first=!0;return this.iterate((item=>((first||CompareResult.isGreaterThan(comparator(item,result)))&&(first=!1,result=item),!0))),result}}function toUint8(v){return v<0?0:v>255?255:0|v}function toUint32(v){return v<0?0:v>4294967295?4294967295:0|v}CallbackIterable.empty=new CallbackIterable((_callback=>{}));class PrefixSumComputer{constructor(values){this.values=values,this.prefixSum=new Uint32Array(values.length),this.prefixSumValidIndex=new Int32Array(1),this.prefixSumValidIndex[0]=-1}insertValues(insertIndex,insertValues){insertIndex=toUint32(insertIndex);const oldValues=this.values,oldPrefixSum=this.prefixSum,insertValuesLen=insertValues.length;return 0!==insertValuesLen&&(this.values=new Uint32Array(oldValues.length+insertValuesLen),this.values.set(oldValues.subarray(0,insertIndex),0),this.values.set(oldValues.subarray(insertIndex),insertIndex+insertValuesLen),this.values.set(insertValues,insertIndex),insertIndex-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=insertIndex-1),this.prefixSum=new Uint32Array(this.values.length),this.prefixSumValidIndex[0]>=0&&this.prefixSum.set(oldPrefixSum.subarray(0,this.prefixSumValidIndex[0]+1)),!0)}setValue(index,value){return index=toUint32(index),value=toUint32(value),this.values[index]!==value&&(this.values[index]=value,index-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=index-1),!0)}removeValues(startIndex,count){startIndex=toUint32(startIndex),count=toUint32(count);const oldValues=this.values,oldPrefixSum=this.prefixSum;if(startIndex>=oldValues.length)return!1;const maxCount=oldValues.length-startIndex;return count>=maxCount&&(count=maxCount),0!==count&&(this.values=new Uint32Array(oldValues.length-count),this.values.set(oldValues.subarray(0,startIndex),0),this.values.set(oldValues.subarray(startIndex+count),startIndex),this.prefixSum=new Uint32Array(this.values.length),startIndex-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=startIndex-1),this.prefixSumValidIndex[0]>=0&&this.prefixSum.set(oldPrefixSum.subarray(0,this.prefixSumValidIndex[0]+1)),!0)}getTotalSum(){return 0===this.values.length?0:this._getPrefixSum(this.values.length-1)}getPrefixSum(index){return index<0?0:(index=toUint32(index),this._getPrefixSum(index))}_getPrefixSum(index){if(index<=this.prefixSumValidIndex[0])return this.prefixSum[index];let startIndex=this.prefixSumValidIndex[0]+1;0===startIndex&&(this.prefixSum[0]=this.values[0],startIndex++),index>=this.values.length&&(index=this.values.length-1);for(let i=startIndex;i<=index;i++)this.prefixSum[i]=this.prefixSum[i-1]+this.values[i];return this.prefixSumValidIndex[0]=Math.max(this.prefixSumValidIndex[0],index),this.prefixSum[index]}getIndexOf(sum){sum=Math.floor(sum),this.getTotalSum();let low=0,high=this.values.length-1,mid=0,midStop=0,midStart=0;for(;low<=high;)if(mid=low+(high-low)/2|0,midStop=this.prefixSum[mid],midStart=midStop-this.values[mid],sum<midStart)high=mid-1;else{if(!(sum>=midStop))break;low=mid+1}return new PrefixSumIndexOfResult(mid,sum-midStart)}}class PrefixSumIndexOfResult{constructor(index,remainder){this.index=index,this.remainder=remainder,this._prefixSumIndexOfResultBrand=void 0,this.index=index,this.remainder=remainder}}class MirrorTextModel{constructor(uri,lines,eol,versionId){this._uri=uri,this._lines=lines,this._eol=eol,this._versionId=versionId,this._lineStarts=null,this._cachedTextValue=null}dispose(){this._lines.length=0}get version(){return this._versionId}getText(){return null===this._cachedTextValue&&(this._cachedTextValue=this._lines.join(this._eol)),this._cachedTextValue}onEvents(e){e.eol&&e.eol!==this._eol&&(this._eol=e.eol,this._lineStarts=null);const changes=e.changes;for(const change of changes)this._acceptDeleteRange(change.range),this._acceptInsertText(new position_Position(change.range.startLineNumber,change.range.startColumn),change.text);this._versionId=e.versionId,this._cachedTextValue=null}_ensureLineStarts(){if(!this._lineStarts){const eolLength=this._eol.length,linesLength=this._lines.length,lineStartValues=new Uint32Array(linesLength);for(let i=0;i<linesLength;i++)lineStartValues[i]=this._lines[i].length+eolLength;this._lineStarts=new PrefixSumComputer(lineStartValues)}}_setLineText(lineIndex,newValue){this._lines[lineIndex]=newValue,this._lineStarts&&this._lineStarts.setValue(lineIndex,this._lines[lineIndex].length+this._eol.length)}_acceptDeleteRange(range){if(range.startLineNumber!==range.endLineNumber)this._setLineText(range.startLineNumber-1,this._lines[range.startLineNumber-1].substring(0,range.startColumn-1)+this._lines[range.endLineNumber-1].substring(range.endColumn-1)),this._lines.splice(range.startLineNumber,range.endLineNumber-range.startLineNumber),this._lineStarts&&this._lineStarts.removeValues(range.startLineNumber,range.endLineNumber-range.startLineNumber);else{if(range.startColumn===range.endColumn)return;this._setLineText(range.startLineNumber-1,this._lines[range.startLineNumber-1].substring(0,range.startColumn-1)+this._lines[range.startLineNumber-1].substring(range.endColumn-1))}}_acceptInsertText(position,insertText){if(0===insertText.length)return;const insertLines=function splitLines(str){return str.split(/\r\n|\r|\n/)}(insertText);if(1===insertLines.length)return void this._setLineText(position.lineNumber-1,this._lines[position.lineNumber-1].substring(0,position.column-1)+insertLines[0]+this._lines[position.lineNumber-1].substring(position.column-1));insertLines[insertLines.length-1]+=this._lines[position.lineNumber-1].substring(position.column-1),this._setLineText(position.lineNumber-1,this._lines[position.lineNumber-1].substring(0,position.column-1)+insertLines[0]);const newLengths=new Uint32Array(insertLines.length-1);for(let i=1;i<insertLines.length;i++)this._lines.splice(position.lineNumber+i-1,0,insertLines[i]),newLengths[i-1]=insertLines[i].length+this._eol.length;this._lineStarts&&this._lineStarts.insertValues(position.lineNumber,newLengths)}}const DEFAULT_WORD_REGEXP=function createWordRegExp(allowInWords=""){let source="(-?\\d*\\.\\d\\w*)|([^";for(const sep of"`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?")allowInWords.indexOf(sep)>=0||(source+="\\"+sep);return source+="\\s]+)",new RegExp(source,"g")}();const _defaultConfig=new linkedList_LinkedList;function getWordAtText(column,wordDefinition,text,textOffset,config){if(config||(config=Iterable.first(_defaultConfig)),text.length>config.maxLen){let start=column-config.maxLen/2;return start<0?start=0:textOffset+=start,getWordAtText(column,wordDefinition,text=text.substring(start,column+config.maxLen/2),textOffset,config)}const t1=Date.now(),pos=column-1-textOffset;let prevRegexIndex=-1,match=null;for(let i=1;!(Date.now()-t1>=config.timeBudget);i++){const regexIndex=pos-config.windowSize*i;wordDefinition.lastIndex=Math.max(0,regexIndex);const thisMatch=_findRegexMatchEnclosingPosition(wordDefinition,text,pos,prevRegexIndex);if(!thisMatch&&match)break;if(match=thisMatch,regexIndex<=0)break;prevRegexIndex=regexIndex}if(match){const result={word:match[0],startColumn:textOffset+1+match.index,endColumn:textOffset+1+match.index+match[0].length};return wordDefinition.lastIndex=0,result}return null}function _findRegexMatchEnclosingPosition(wordDefinition,text,pos,stopPos){let match;for(;match=wordDefinition.exec(text);){const matchIndex=match.index||0;if(matchIndex<=pos&&wordDefinition.lastIndex>=pos)return match;if(stopPos>0&&matchIndex>stopPos)return null}return null}_defaultConfig.unshift({maxLen:1e3,windowSize:15,timeBudget:150});class CharacterClassifier{constructor(_defaultValue){const defaultValue=toUint8(_defaultValue);this._defaultValue=defaultValue,this._asciiMap=CharacterClassifier._createAsciiMap(defaultValue),this._map=new Map}static _createAsciiMap(defaultValue){const asciiMap=new Uint8Array(256);return asciiMap.fill(defaultValue),asciiMap}set(charCode,_value){const value=toUint8(_value);charCode>=0&&charCode<256?this._asciiMap[charCode]=value:this._map.set(charCode,value)}get(charCode){return charCode>=0&&charCode<256?this._asciiMap[charCode]:this._map.get(charCode)||this._defaultValue}clear(){this._asciiMap.fill(this._defaultValue),this._map.clear()}}class Uint8Matrix{constructor(rows,cols,defaultValue){const data=new Uint8Array(rows*cols);for(let i=0,len=rows*cols;i<len;i++)data[i]=defaultValue;this._data=data,this.rows=rows,this.cols=cols}get(row,col){return this._data[row*this.cols+col]}set(row,col,value){this._data[row*this.cols+col]=value}}class StateMachine{constructor(edges){let maxCharCode=0,maxState=0;for(let i=0,len=edges.length;i<len;i++){const[from,chCode,to]=edges[i];chCode>maxCharCode&&(maxCharCode=chCode),from>maxState&&(maxState=from),to>maxState&&(maxState=to)}maxCharCode++,maxState++;const states=new Uint8Matrix(maxState,maxCharCode,0);for(let i=0,len=edges.length;i<len;i++){const[from,chCode,to]=edges[i];states.set(from,chCode,to)}this._states=states,this._maxCharCode=maxCharCode}nextState(currentState,chCode){return chCode<0||chCode>=this._maxCharCode?0:this._states.get(currentState,chCode)}}let _stateMachine=null;let _classifier=null;class LinkComputer{static _createLink(classifier,line,lineNumber,linkBeginIndex,linkEndIndex){let lastIncludedCharIndex=linkEndIndex-1;do{const chCode=line.charCodeAt(lastIncludedCharIndex);if(2!==classifier.get(chCode))break;lastIncludedCharIndex--}while(lastIncludedCharIndex>linkBeginIndex);if(linkBeginIndex>0){const charCodeBeforeLink=line.charCodeAt(linkBeginIndex-1),lastCharCodeInLink=line.charCodeAt(lastIncludedCharIndex);(40===charCodeBeforeLink&&41===lastCharCodeInLink||91===charCodeBeforeLink&&93===lastCharCodeInLink||123===charCodeBeforeLink&&125===lastCharCodeInLink)&&lastIncludedCharIndex--}return{range:{startLineNumber:lineNumber,startColumn:linkBeginIndex+1,endLineNumber:lineNumber,endColumn:lastIncludedCharIndex+2},url:line.substring(linkBeginIndex,lastIncludedCharIndex+1)}}static computeLinks(model,stateMachine=function getStateMachine(){return null===_stateMachine&&(_stateMachine=new StateMachine([[1,104,2],[1,72,2],[1,102,6],[1,70,6],[2,116,3],[2,84,3],[3,116,4],[3,84,4],[4,112,5],[4,80,5],[5,115,9],[5,83,9],[5,58,10],[6,105,7],[6,73,7],[7,108,8],[7,76,8],[8,101,9],[8,69,9],[9,58,10],[10,47,11],[11,47,12]])),_stateMachine}()){const classifier=function getClassifier(){if(null===_classifier){_classifier=new CharacterClassifier(0);const FORCE_TERMINATION_CHARACTERS=" \t<>'\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…";for(let i=0;i<FORCE_TERMINATION_CHARACTERS.length;i++)_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i),1);const CANNOT_END_WITH_CHARACTERS=".,;:";for(let i=0;i<CANNOT_END_WITH_CHARACTERS.length;i++)_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i),2)}return _classifier}(),result=[];for(let i=1,lineCount=model.getLineCount();i<=lineCount;i++){const line=model.getLineContent(i),len=line.length;let j=0,linkBeginIndex=0,linkBeginChCode=0,state=1,hasOpenParens=!1,hasOpenSquareBracket=!1,inSquareBrackets=!1,hasOpenCurlyBracket=!1;for(;j<len;){let resetStateMachine=!1;const chCode=line.charCodeAt(j);if(13===state){let chClass;switch(chCode){case 40:hasOpenParens=!0,chClass=0;break;case 41:chClass=hasOpenParens?0:1;break;case 91:inSquareBrackets=!0,hasOpenSquareBracket=!0,chClass=0;break;case 93:inSquareBrackets=!1,chClass=hasOpenSquareBracket?0:1;break;case 123:hasOpenCurlyBracket=!0,chClass=0;break;case 125:chClass=hasOpenCurlyBracket?0:1;break;case 39:case 34:case 96:chClass=linkBeginChCode===chCode?1:39===linkBeginChCode||34===linkBeginChCode||96===linkBeginChCode?0:1;break;case 42:chClass=42===linkBeginChCode?1:0;break;case 124:chClass=124===linkBeginChCode?1:0;break;case 32:chClass=inSquareBrackets?0:1;break;default:chClass=classifier.get(chCode)}1===chClass&&(result.push(LinkComputer._createLink(classifier,line,i,linkBeginIndex,j)),resetStateMachine=!0)}else if(12===state){let chClass;91===chCode?(hasOpenSquareBracket=!0,chClass=0):chClass=classifier.get(chCode),1===chClass?resetStateMachine=!0:state=13}else state=stateMachine.nextState(state,chCode),0===state&&(resetStateMachine=!0);resetStateMachine&&(state=1,hasOpenParens=!1,hasOpenSquareBracket=!1,hasOpenCurlyBracket=!1,linkBeginIndex=j+1,linkBeginChCode=chCode),j++}13===state&&result.push(LinkComputer._createLink(classifier,line,i,linkBeginIndex,len))}return result}}class BasicInplaceReplace{constructor(){this._defaultValueSet=[["true","false"],["True","False"],["Private","Public","Friend","ReadOnly","Partial","Protected","WriteOnly"],["public","protected","private"]]}navigateValueSet(range1,text1,range2,text2,up){if(range1&&text1){const result=this.doNavigateValueSet(text1,up);if(result)return{range:range1,value:result}}if(range2&&text2){const result=this.doNavigateValueSet(text2,up);if(result)return{range:range2,value:result}}return null}doNavigateValueSet(text,up){const numberResult=this.numberReplace(text,up);return null!==numberResult?numberResult:this.textReplace(text,up)}numberReplace(value,up){const precision=Math.pow(10,value.length-(value.lastIndexOf(".")+1));let n1=Number(value);const n2=parseFloat(value);return isNaN(n1)||isNaN(n2)||n1!==n2?null:0!==n1||up?(n1=Math.floor(n1*precision),n1+=up?precision:-precision,String(n1/precision)):null}textReplace(value,up){return this.valueSetsReplace(this._defaultValueSet,value,up)}valueSetsReplace(valueSets,value,up){let result=null;for(let i=0,len=valueSets.length;null===result&&i<len;i++)result=this.valueSetReplace(valueSets[i],value,up);return result}valueSetReplace(valueSet,value,up){let idx=valueSet.indexOf(value);return idx>=0?(idx+=up?1:-1,idx<0?idx=valueSet.length-1:idx%=valueSet.length,valueSet[idx]):null}}BasicInplaceReplace.INSTANCE=new BasicInplaceReplace;const shortcutEvent=Object.freeze((function(callback,context){const handle=setTimeout(callback.bind(context),0);return{dispose(){clearTimeout(handle)}}}));var CancellationToken;!function(CancellationToken){CancellationToken.isCancellationToken=function isCancellationToken(thing){return thing===CancellationToken.None||thing===CancellationToken.Cancelled||(thing instanceof MutableToken||!(!thing||"object"!=typeof thing)&&("boolean"==typeof thing.isCancellationRequested&&"function"==typeof thing.onCancellationRequested))},CancellationToken.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:Event.None}),CancellationToken.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:shortcutEvent})}(CancellationToken||(CancellationToken={}));class MutableToken{constructor(){this._isCancelled=!1,this._emitter=null}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?shortcutEvent:(this._emitter||(this._emitter=new Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=null)}}class CancellationTokenSource{constructor(parent){this._token=void 0,this._parentListener=void 0,this._parentListener=parent&&parent.onCancellationRequested(this.cancel,this)}get token(){return this._token||(this._token=new MutableToken),this._token}cancel(){this._token?this._token instanceof MutableToken&&this._token.cancel():this._token=CancellationToken.Cancelled}dispose(cancel=!1){var _a;cancel&&this.cancel(),null===(_a=this._parentListener)||void 0===_a||_a.dispose(),this._token?this._token instanceof MutableToken&&this._token.dispose():this._token=CancellationToken.None}}class KeyCodeStrMap{constructor(){this._keyCodeToStr=[],this._strToKeyCode=Object.create(null)}define(keyCode,str){this._keyCodeToStr[keyCode]=str,this._strToKeyCode[str.toLowerCase()]=keyCode}keyCodeToStr(keyCode){return this._keyCodeToStr[keyCode]}strToKeyCode(str){return this._strToKeyCode[str.toLowerCase()]||0}}const uiMap=new KeyCodeStrMap,userSettingsUSMap=new KeyCodeStrMap,userSettingsGeneralMap=new KeyCodeStrMap,EVENT_KEY_CODE_MAP=new Array(230),NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE={},scanCodeIntToStr=[],scanCodeStrToInt=Object.create(null),scanCodeLowerCaseStrToInt=Object.create(null),IMMUTABLE_CODE_TO_KEY_CODE=[],IMMUTABLE_KEY_CODE_TO_CODE=[];for(let i=0;i<=193;i++)IMMUTABLE_CODE_TO_KEY_CODE[i]=-1;for(let i=0;i<=132;i++)IMMUTABLE_KEY_CODE_TO_CODE[i]=-1;var KeyCodeUtils;!function(){const mappings=[[1,0,"None",0,"unknown",0,"VK_UNKNOWN","",""],[1,1,"Hyper",0,"",0,"","",""],[1,2,"Super",0,"",0,"","",""],[1,3,"Fn",0,"",0,"","",""],[1,4,"FnLock",0,"",0,"","",""],[1,5,"Suspend",0,"",0,"","",""],[1,6,"Resume",0,"",0,"","",""],[1,7,"Turbo",0,"",0,"","",""],[1,8,"Sleep",0,"",0,"VK_SLEEP","",""],[1,9,"WakeUp",0,"",0,"","",""],[0,10,"KeyA",31,"A",65,"VK_A","",""],[0,11,"KeyB",32,"B",66,"VK_B","",""],[0,12,"KeyC",33,"C",67,"VK_C","",""],[0,13,"KeyD",34,"D",68,"VK_D","",""],[0,14,"KeyE",35,"E",69,"VK_E","",""],[0,15,"KeyF",36,"F",70,"VK_F","",""],[0,16,"KeyG",37,"G",71,"VK_G","",""],[0,17,"KeyH",38,"H",72,"VK_H","",""],[0,18,"KeyI",39,"I",73,"VK_I","",""],[0,19,"KeyJ",40,"J",74,"VK_J","",""],[0,20,"KeyK",41,"K",75,"VK_K","",""],[0,21,"KeyL",42,"L",76,"VK_L","",""],[0,22,"KeyM",43,"M",77,"VK_M","",""],[0,23,"KeyN",44,"N",78,"VK_N","",""],[0,24,"KeyO",45,"O",79,"VK_O","",""],[0,25,"KeyP",46,"P",80,"VK_P","",""],[0,26,"KeyQ",47,"Q",81,"VK_Q","",""],[0,27,"KeyR",48,"R",82,"VK_R","",""],[0,28,"KeyS",49,"S",83,"VK_S","",""],[0,29,"KeyT",50,"T",84,"VK_T","",""],[0,30,"KeyU",51,"U",85,"VK_U","",""],[0,31,"KeyV",52,"V",86,"VK_V","",""],[0,32,"KeyW",53,"W",87,"VK_W","",""],[0,33,"KeyX",54,"X",88,"VK_X","",""],[0,34,"KeyY",55,"Y",89,"VK_Y","",""],[0,35,"KeyZ",56,"Z",90,"VK_Z","",""],[0,36,"Digit1",22,"1",49,"VK_1","",""],[0,37,"Digit2",23,"2",50,"VK_2","",""],[0,38,"Digit3",24,"3",51,"VK_3","",""],[0,39,"Digit4",25,"4",52,"VK_4","",""],[0,40,"Digit5",26,"5",53,"VK_5","",""],[0,41,"Digit6",27,"6",54,"VK_6","",""],[0,42,"Digit7",28,"7",55,"VK_7","",""],[0,43,"Digit8",29,"8",56,"VK_8","",""],[0,44,"Digit9",30,"9",57,"VK_9","",""],[0,45,"Digit0",21,"0",48,"VK_0","",""],[1,46,"Enter",3,"Enter",13,"VK_RETURN","",""],[1,47,"Escape",9,"Escape",27,"VK_ESCAPE","",""],[1,48,"Backspace",1,"Backspace",8,"VK_BACK","",""],[1,49,"Tab",2,"Tab",9,"VK_TAB","",""],[1,50,"Space",10,"Space",32,"VK_SPACE","",""],[0,51,"Minus",88,"-",189,"VK_OEM_MINUS","-","OEM_MINUS"],[0,52,"Equal",86,"=",187,"VK_OEM_PLUS","=","OEM_PLUS"],[0,53,"BracketLeft",92,"[",219,"VK_OEM_4","[","OEM_4"],[0,54,"BracketRight",94,"]",221,"VK_OEM_6","]","OEM_6"],[0,55,"Backslash",93,"\\",220,"VK_OEM_5","\\","OEM_5"],[0,56,"IntlHash",0,"",0,"","",""],[0,57,"Semicolon",85,";",186,"VK_OEM_1",";","OEM_1"],[0,58,"Quote",95,"'",222,"VK_OEM_7","'","OEM_7"],[0,59,"Backquote",91,"`",192,"VK_OEM_3","`","OEM_3"],[0,60,"Comma",87,",",188,"VK_OEM_COMMA",",","OEM_COMMA"],[0,61,"Period",89,".",190,"VK_OEM_PERIOD",".","OEM_PERIOD"],[0,62,"Slash",90,"/",191,"VK_OEM_2","/","OEM_2"],[1,63,"CapsLock",8,"CapsLock",20,"VK_CAPITAL","",""],[1,64,"F1",59,"F1",112,"VK_F1","",""],[1,65,"F2",60,"F2",113,"VK_F2","",""],[1,66,"F3",61,"F3",114,"VK_F3","",""],[1,67,"F4",62,"F4",115,"VK_F4","",""],[1,68,"F5",63,"F5",116,"VK_F5","",""],[1,69,"F6",64,"F6",117,"VK_F6","",""],[1,70,"F7",65,"F7",118,"VK_F7","",""],[1,71,"F8",66,"F8",119,"VK_F8","",""],[1,72,"F9",67,"F9",120,"VK_F9","",""],[1,73,"F10",68,"F10",121,"VK_F10","",""],[1,74,"F11",69,"F11",122,"VK_F11","",""],[1,75,"F12",70,"F12",123,"VK_F12","",""],[1,76,"PrintScreen",0,"",0,"","",""],[1,77,"ScrollLock",84,"ScrollLock",145,"VK_SCROLL","",""],[1,78,"Pause",7,"PauseBreak",19,"VK_PAUSE","",""],[1,79,"Insert",19,"Insert",45,"VK_INSERT","",""],[1,80,"Home",14,"Home",36,"VK_HOME","",""],[1,81,"PageUp",11,"PageUp",33,"VK_PRIOR","",""],[1,82,"Delete",20,"Delete",46,"VK_DELETE","",""],[1,83,"End",13,"End",35,"VK_END","",""],[1,84,"PageDown",12,"PageDown",34,"VK_NEXT","",""],[1,85,"ArrowRight",17,"RightArrow",39,"VK_RIGHT","Right",""],[1,86,"ArrowLeft",15,"LeftArrow",37,"VK_LEFT","Left",""],[1,87,"ArrowDown",18,"DownArrow",40,"VK_DOWN","Down",""],[1,88,"ArrowUp",16,"UpArrow",38,"VK_UP","Up",""],[1,89,"NumLock",83,"NumLock",144,"VK_NUMLOCK","",""],[1,90,"NumpadDivide",113,"NumPad_Divide",111,"VK_DIVIDE","",""],[1,91,"NumpadMultiply",108,"NumPad_Multiply",106,"VK_MULTIPLY","",""],[1,92,"NumpadSubtract",111,"NumPad_Subtract",109,"VK_SUBTRACT","",""],[1,93,"NumpadAdd",109,"NumPad_Add",107,"VK_ADD","",""],[1,94,"NumpadEnter",3,"",0,"","",""],[1,95,"Numpad1",99,"NumPad1",97,"VK_NUMPAD1","",""],[1,96,"Numpad2",100,"NumPad2",98,"VK_NUMPAD2","",""],[1,97,"Numpad3",101,"NumPad3",99,"VK_NUMPAD3","",""],[1,98,"Numpad4",102,"NumPad4",100,"VK_NUMPAD4","",""],[1,99,"Numpad5",103,"NumPad5",101,"VK_NUMPAD5","",""],[1,100,"Numpad6",104,"NumPad6",102,"VK_NUMPAD6","",""],[1,101,"Numpad7",105,"NumPad7",103,"VK_NUMPAD7","",""],[1,102,"Numpad8",106,"NumPad8",104,"VK_NUMPAD8","",""],[1,103,"Numpad9",107,"NumPad9",105,"VK_NUMPAD9","",""],[1,104,"Numpad0",98,"NumPad0",96,"VK_NUMPAD0","",""],[1,105,"NumpadDecimal",112,"NumPad_Decimal",110,"VK_DECIMAL","",""],[0,106,"IntlBackslash",97,"OEM_102",226,"VK_OEM_102","",""],[1,107,"ContextMenu",58,"ContextMenu",93,"","",""],[1,108,"Power",0,"",0,"","",""],[1,109,"NumpadEqual",0,"",0,"","",""],[1,110,"F13",71,"F13",124,"VK_F13","",""],[1,111,"F14",72,"F14",125,"VK_F14","",""],[1,112,"F15",73,"F15",126,"VK_F15","",""],[1,113,"F16",74,"F16",127,"VK_F16","",""],[1,114,"F17",75,"F17",128,"VK_F17","",""],[1,115,"F18",76,"F18",129,"VK_F18","",""],[1,116,"F19",77,"F19",130,"VK_F19","",""],[1,117,"F20",78,"F20",131,"VK_F20","",""],[1,118,"F21",79,"F21",132,"VK_F21","",""],[1,119,"F22",80,"F22",133,"VK_F22","",""],[1,120,"F23",81,"F23",134,"VK_F23","",""],[1,121,"F24",82,"F24",135,"VK_F24","",""],[1,122,"Open",0,"",0,"","",""],[1,123,"Help",0,"",0,"","",""],[1,124,"Select",0,"",0,"","",""],[1,125,"Again",0,"",0,"","",""],[1,126,"Undo",0,"",0,"","",""],[1,127,"Cut",0,"",0,"","",""],[1,128,"Copy",0,"",0,"","",""],[1,129,"Paste",0,"",0,"","",""],[1,130,"Find",0,"",0,"","",""],[1,131,"AudioVolumeMute",117,"AudioVolumeMute",173,"VK_VOLUME_MUTE","",""],[1,132,"AudioVolumeUp",118,"AudioVolumeUp",175,"VK_VOLUME_UP","",""],[1,133,"AudioVolumeDown",119,"AudioVolumeDown",174,"VK_VOLUME_DOWN","",""],[1,134,"NumpadComma",110,"NumPad_Separator",108,"VK_SEPARATOR","",""],[0,135,"IntlRo",115,"ABNT_C1",193,"VK_ABNT_C1","",""],[1,136,"KanaMode",0,"",0,"","",""],[0,137,"IntlYen",0,"",0,"","",""],[1,138,"Convert",0,"",0,"","",""],[1,139,"NonConvert",0,"",0,"","",""],[1,140,"Lang1",0,"",0,"","",""],[1,141,"Lang2",0,"",0,"","",""],[1,142,"Lang3",0,"",0,"","",""],[1,143,"Lang4",0,"",0,"","",""],[1,144,"Lang5",0,"",0,"","",""],[1,145,"Abort",0,"",0,"","",""],[1,146,"Props",0,"",0,"","",""],[1,147,"NumpadParenLeft",0,"",0,"","",""],[1,148,"NumpadParenRight",0,"",0,"","",""],[1,149,"NumpadBackspace",0,"",0,"","",""],[1,150,"NumpadMemoryStore",0,"",0,"","",""],[1,151,"NumpadMemoryRecall",0,"",0,"","",""],[1,152,"NumpadMemoryClear",0,"",0,"","",""],[1,153,"NumpadMemoryAdd",0,"",0,"","",""],[1,154,"NumpadMemorySubtract",0,"",0,"","",""],[1,155,"NumpadClear",131,"Clear",12,"VK_CLEAR","",""],[1,156,"NumpadClearEntry",0,"",0,"","",""],[1,0,"",5,"Ctrl",17,"VK_CONTROL","",""],[1,0,"",4,"Shift",16,"VK_SHIFT","",""],[1,0,"",6,"Alt",18,"VK_MENU","",""],[1,0,"",57,"Meta",91,"VK_COMMAND","",""],[1,157,"ControlLeft",5,"",0,"VK_LCONTROL","",""],[1,158,"ShiftLeft",4,"",0,"VK_LSHIFT","",""],[1,159,"AltLeft",6,"",0,"VK_LMENU","",""],[1,160,"MetaLeft",57,"",0,"VK_LWIN","",""],[1,161,"ControlRight",5,"",0,"VK_RCONTROL","",""],[1,162,"ShiftRight",4,"",0,"VK_RSHIFT","",""],[1,163,"AltRight",6,"",0,"VK_RMENU","",""],[1,164,"MetaRight",57,"",0,"VK_RWIN","",""],[1,165,"BrightnessUp",0,"",0,"","",""],[1,166,"BrightnessDown",0,"",0,"","",""],[1,167,"MediaPlay",0,"",0,"","",""],[1,168,"MediaRecord",0,"",0,"","",""],[1,169,"MediaFastForward",0,"",0,"","",""],[1,170,"MediaRewind",0,"",0,"","",""],[1,171,"MediaTrackNext",124,"MediaTrackNext",176,"VK_MEDIA_NEXT_TRACK","",""],[1,172,"MediaTrackPrevious",125,"MediaTrackPrevious",177,"VK_MEDIA_PREV_TRACK","",""],[1,173,"MediaStop",126,"MediaStop",178,"VK_MEDIA_STOP","",""],[1,174,"Eject",0,"",0,"","",""],[1,175,"MediaPlayPause",127,"MediaPlayPause",179,"VK_MEDIA_PLAY_PAUSE","",""],[1,176,"MediaSelect",128,"LaunchMediaPlayer",181,"VK_MEDIA_LAUNCH_MEDIA_SELECT","",""],[1,177,"LaunchMail",129,"LaunchMail",180,"VK_MEDIA_LAUNCH_MAIL","",""],[1,178,"LaunchApp2",130,"LaunchApp2",183,"VK_MEDIA_LAUNCH_APP2","",""],[1,179,"LaunchApp1",0,"",0,"VK_MEDIA_LAUNCH_APP1","",""],[1,180,"SelectTask",0,"",0,"","",""],[1,181,"LaunchScreenSaver",0,"",0,"","",""],[1,182,"BrowserSearch",120,"BrowserSearch",170,"VK_BROWSER_SEARCH","",""],[1,183,"BrowserHome",121,"BrowserHome",172,"VK_BROWSER_HOME","",""],[1,184,"BrowserBack",122,"BrowserBack",166,"VK_BROWSER_BACK","",""],[1,185,"BrowserForward",123,"BrowserForward",167,"VK_BROWSER_FORWARD","",""],[1,186,"BrowserStop",0,"",0,"VK_BROWSER_STOP","",""],[1,187,"BrowserRefresh",0,"",0,"VK_BROWSER_REFRESH","",""],[1,188,"BrowserFavorites",0,"",0,"VK_BROWSER_FAVORITES","",""],[1,189,"ZoomToggle",0,"",0,"","",""],[1,190,"MailReply",0,"",0,"","",""],[1,191,"MailForward",0,"",0,"","",""],[1,192,"MailSend",0,"",0,"","",""],[1,0,"",114,"KeyInComposition",229,"","",""],[1,0,"",116,"ABNT_C2",194,"VK_ABNT_C2","",""],[1,0,"",96,"OEM_8",223,"VK_OEM_8","",""],[1,0,"",0,"",0,"VK_KANA","",""],[1,0,"",0,"",0,"VK_HANGUL","",""],[1,0,"",0,"",0,"VK_JUNJA","",""],[1,0,"",0,"",0,"VK_FINAL","",""],[1,0,"",0,"",0,"VK_HANJA","",""],[1,0,"",0,"",0,"VK_KANJI","",""],[1,0,"",0,"",0,"VK_CONVERT","",""],[1,0,"",0,"",0,"VK_NONCONVERT","",""],[1,0,"",0,"",0,"VK_ACCEPT","",""],[1,0,"",0,"",0,"VK_MODECHANGE","",""],[1,0,"",0,"",0,"VK_SELECT","",""],[1,0,"",0,"",0,"VK_PRINT","",""],[1,0,"",0,"",0,"VK_EXECUTE","",""],[1,0,"",0,"",0,"VK_SNAPSHOT","",""],[1,0,"",0,"",0,"VK_HELP","",""],[1,0,"",0,"",0,"VK_APPS","",""],[1,0,"",0,"",0,"VK_PROCESSKEY","",""],[1,0,"",0,"",0,"VK_PACKET","",""],[1,0,"",0,"",0,"VK_DBE_SBCSCHAR","",""],[1,0,"",0,"",0,"VK_DBE_DBCSCHAR","",""],[1,0,"",0,"",0,"VK_ATTN","",""],[1,0,"",0,"",0,"VK_CRSEL","",""],[1,0,"",0,"",0,"VK_EXSEL","",""],[1,0,"",0,"",0,"VK_EREOF","",""],[1,0,"",0,"",0,"VK_PLAY","",""],[1,0,"",0,"",0,"VK_ZOOM","",""],[1,0,"",0,"",0,"VK_NONAME","",""],[1,0,"",0,"",0,"VK_PA1","",""],[1,0,"",0,"",0,"VK_OEM_CLEAR","",""]],seenKeyCode=[],seenScanCode=[];for(const mapping of mappings){const[immutable,scanCode,scanCodeStr,keyCode,keyCodeStr,eventKeyCode,vkey,usUserSettingsLabel,generalUserSettingsLabel]=mapping;if(seenScanCode[scanCode]||(seenScanCode[scanCode]=!0,scanCodeIntToStr[scanCode]=scanCodeStr,scanCodeStrToInt[scanCodeStr]=scanCode,scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()]=scanCode,immutable&&(IMMUTABLE_CODE_TO_KEY_CODE[scanCode]=keyCode,0!==keyCode&&3!==keyCode&&5!==keyCode&&4!==keyCode&&6!==keyCode&&57!==keyCode&&(IMMUTABLE_KEY_CODE_TO_CODE[keyCode]=scanCode))),!seenKeyCode[keyCode]){if(seenKeyCode[keyCode]=!0,!keyCodeStr)throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);uiMap.define(keyCode,keyCodeStr),userSettingsUSMap.define(keyCode,usUserSettingsLabel||keyCodeStr),userSettingsGeneralMap.define(keyCode,generalUserSettingsLabel||usUserSettingsLabel||keyCodeStr)}eventKeyCode&&(EVENT_KEY_CODE_MAP[eventKeyCode]=keyCode),vkey&&(NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey]=keyCode)}IMMUTABLE_KEY_CODE_TO_CODE[3]=46}(),function(KeyCodeUtils){KeyCodeUtils.toString=function toString(keyCode){return uiMap.keyCodeToStr(keyCode)},KeyCodeUtils.fromString=function fromString(key){return uiMap.strToKeyCode(key)},KeyCodeUtils.toUserSettingsUS=function toUserSettingsUS(keyCode){return userSettingsUSMap.keyCodeToStr(keyCode)},KeyCodeUtils.toUserSettingsGeneral=function toUserSettingsGeneral(keyCode){return userSettingsGeneralMap.keyCodeToStr(keyCode)},KeyCodeUtils.fromUserSettings=function fromUserSettings(key){return userSettingsUSMap.strToKeyCode(key)||userSettingsGeneralMap.strToKeyCode(key)},KeyCodeUtils.toElectronAccelerator=function toElectronAccelerator(keyCode){if(keyCode>=98&&keyCode<=113)return null;switch(keyCode){case 16:return"Up";case 18:return"Down";case 15:return"Left";case 17:return"Right"}return uiMap.keyCodeToStr(keyCode)}}(KeyCodeUtils||(KeyCodeUtils={}));class Selection extends range_Range{constructor(selectionStartLineNumber,selectionStartColumn,positionLineNumber,positionColumn){super(selectionStartLineNumber,selectionStartColumn,positionLineNumber,positionColumn),this.selectionStartLineNumber=selectionStartLineNumber,this.selectionStartColumn=selectionStartColumn,this.positionLineNumber=positionLineNumber,this.positionColumn=positionColumn}toString(){return"["+this.selectionStartLineNumber+","+this.selectionStartColumn+" -> "+this.positionLineNumber+","+this.positionColumn+"]"}equalsSelection(other){return Selection.selectionsEqual(this,other)}static selectionsEqual(a,b){return a.selectionStartLineNumber===b.selectionStartLineNumber&&a.selectionStartColumn===b.selectionStartColumn&&a.positionLineNumber===b.positionLineNumber&&a.positionColumn===b.positionColumn}getDirection(){return this.selectionStartLineNumber===this.startLineNumber&&this.selectionStartColumn===this.startColumn?0:1}setEndPosition(endLineNumber,endColumn){return 0===this.getDirection()?new Selection(this.startLineNumber,this.startColumn,endLineNumber,endColumn):new Selection(endLineNumber,endColumn,this.startLineNumber,this.startColumn)}getPosition(){return new position_Position(this.positionLineNumber,this.positionColumn)}getSelectionStart(){return new position_Position(this.selectionStartLineNumber,this.selectionStartColumn)}setStartPosition(startLineNumber,startColumn){return 0===this.getDirection()?new Selection(startLineNumber,startColumn,this.endLineNumber,this.endColumn):new Selection(this.endLineNumber,this.endColumn,startLineNumber,startColumn)}static fromPositions(start,end=start){return new Selection(start.lineNumber,start.column,end.lineNumber,end.column)}static fromRange(range,direction){return 0===direction?new Selection(range.startLineNumber,range.startColumn,range.endLineNumber,range.endColumn):new Selection(range.endLineNumber,range.endColumn,range.startLineNumber,range.startColumn)}static liftSelection(sel){return new Selection(sel.selectionStartLineNumber,sel.selectionStartColumn,sel.positionLineNumber,sel.positionColumn)}static selectionsArrEqual(a,b){if(a&&!b||!a&&b)return!1;if(!a&&!b)return!0;if(a.length!==b.length)return!1;for(let i=0,len=a.length;i<len;i++)if(!this.selectionsEqual(a[i],b[i]))return!1;return!0}static isISelection(obj){return obj&&"number"==typeof obj.selectionStartLineNumber&&"number"==typeof obj.selectionStartColumn&&"number"==typeof obj.positionLineNumber&&"number"==typeof obj.positionColumn}static createWithDirection(startLineNumber,startColumn,endLineNumber,endColumn,direction){return 0===direction?new Selection(startLineNumber,startColumn,endLineNumber,endColumn):new Selection(endLineNumber,endColumn,startLineNumber,startColumn)}}function isString(str){return"string"==typeof str}const _codiconFontCharacters=Object.create(null);function register(id,fontCharacter){if(isString(fontCharacter)){const val=_codiconFontCharacters[fontCharacter];if(void 0===val)throw new Error(`${id} references an unknown codicon: ${fontCharacter}`);fontCharacter=val}return _codiconFontCharacters[id]=fontCharacter,{id}}const Codicon={add:register("add",6e4),plus:register("plus",6e4),gistNew:register("gist-new",6e4),repoCreate:register("repo-create",6e4),lightbulb:register("lightbulb",60001),lightBulb:register("light-bulb",60001),repo:register("repo",60002),repoDelete:register("repo-delete",60002),gistFork:register("gist-fork",60003),repoForked:register("repo-forked",60003),gitPullRequest:register("git-pull-request",60004),gitPullRequestAbandoned:register("git-pull-request-abandoned",60004),recordKeys:register("record-keys",60005),keyboard:register("keyboard",60005),tag:register("tag",60006),tagAdd:register("tag-add",60006),tagRemove:register("tag-remove",60006),person:register("person",60007),personFollow:register("person-follow",60007),personOutline:register("person-outline",60007),personFilled:register("person-filled",60007),gitBranch:register("git-branch",60008),gitBranchCreate:register("git-branch-create",60008),gitBranchDelete:register("git-branch-delete",60008),sourceControl:register("source-control",60008),mirror:register("mirror",60009),mirrorPublic:register("mirror-public",60009),star:register("star",60010),starAdd:register("star-add",60010),starDelete:register("star-delete",60010),starEmpty:register("star-empty",60010),comment:register("comment",60011),commentAdd:register("comment-add",60011),alert:register("alert",60012),warning:register("warning",60012),search:register("search",60013),searchSave:register("search-save",60013),logOut:register("log-out",60014),signOut:register("sign-out",60014),logIn:register("log-in",60015),signIn:register("sign-in",60015),eye:register("eye",60016),eyeUnwatch:register("eye-unwatch",60016),eyeWatch:register("eye-watch",60016),circleFilled:register("circle-filled",60017),primitiveDot:register("primitive-dot",60017),closeDirty:register("close-dirty",60017),debugBreakpoint:register("debug-breakpoint",60017),debugBreakpointDisabled:register("debug-breakpoint-disabled",60017),debugHint:register("debug-hint",60017),primitiveSquare:register("primitive-square",60018),edit:register("edit",60019),pencil:register("pencil",60019),info:register("info",60020),issueOpened:register("issue-opened",60020),gistPrivate:register("gist-private",60021),gitForkPrivate:register("git-fork-private",60021),lock:register("lock",60021),mirrorPrivate:register("mirror-private",60021),close:register("close",60022),removeClose:register("remove-close",60022),x:register("x",60022),repoSync:register("repo-sync",60023),sync:register("sync",60023),clone:register("clone",60024),desktopDownload:register("desktop-download",60024),beaker:register("beaker",60025),microscope:register("microscope",60025),vm:register("vm",60026),deviceDesktop:register("device-desktop",60026),file:register("file",60027),fileText:register("file-text",60027),more:register("more",60028),ellipsis:register("ellipsis",60028),kebabHorizontal:register("kebab-horizontal",60028),mailReply:register("mail-reply",60029),reply:register("reply",60029),organization:register("organization",60030),organizationFilled:register("organization-filled",60030),organizationOutline:register("organization-outline",60030),newFile:register("new-file",60031),fileAdd:register("file-add",60031),newFolder:register("new-folder",60032),fileDirectoryCreate:register("file-directory-create",60032),trash:register("trash",60033),trashcan:register("trashcan",60033),history:register("history",60034),clock:register("clock",60034),folder:register("folder",60035),fileDirectory:register("file-directory",60035),symbolFolder:register("symbol-folder",60035),logoGithub:register("logo-github",60036),markGithub:register("mark-github",60036),github:register("github",60036),terminal:register("terminal",60037),console:register("console",60037),repl:register("repl",60037),zap:register("zap",60038),symbolEvent:register("symbol-event",60038),error:register("error",60039),stop:register("stop",60039),variable:register("variable",60040),symbolVariable:register("symbol-variable",60040),array:register("array",60042),symbolArray:register("symbol-array",60042),symbolModule:register("symbol-module",60043),symbolPackage:register("symbol-package",60043),symbolNamespace:register("symbol-namespace",60043),symbolObject:register("symbol-object",60043),symbolMethod:register("symbol-method",60044),symbolFunction:register("symbol-function",60044),symbolConstructor:register("symbol-constructor",60044),symbolBoolean:register("symbol-boolean",60047),symbolNull:register("symbol-null",60047),symbolNumeric:register("symbol-numeric",60048),symbolNumber:register("symbol-number",60048),symbolStructure:register("symbol-structure",60049),symbolStruct:register("symbol-struct",60049),symbolParameter:register("symbol-parameter",60050),symbolTypeParameter:register("symbol-type-parameter",60050),symbolKey:register("symbol-key",60051),symbolText:register("symbol-text",60051),symbolReference:register("symbol-reference",60052),goToFile:register("go-to-file",60052),symbolEnum:register("symbol-enum",60053),symbolValue:register("symbol-value",60053),symbolRuler:register("symbol-ruler",60054),symbolUnit:register("symbol-unit",60054),activateBreakpoints:register("activate-breakpoints",60055),archive:register("archive",60056),arrowBoth:register("arrow-both",60057),arrowDown:register("arrow-down",60058),arrowLeft:register("arrow-left",60059),arrowRight:register("arrow-right",60060),arrowSmallDown:register("arrow-small-down",60061),arrowSmallLeft:register("arrow-small-left",60062),arrowSmallRight:register("arrow-small-right",60063),arrowSmallUp:register("arrow-small-up",60064),arrowUp:register("arrow-up",60065),bell:register("bell",60066),bold:register("bold",60067),book:register("book",60068),bookmark:register("bookmark",60069),debugBreakpointConditionalUnverified:register("debug-breakpoint-conditional-unverified",60070),debugBreakpointConditional:register("debug-breakpoint-conditional",60071),debugBreakpointConditionalDisabled:register("debug-breakpoint-conditional-disabled",60071),debugBreakpointDataUnverified:register("debug-breakpoint-data-unverified",60072),debugBreakpointData:register("debug-breakpoint-data",60073),debugBreakpointDataDisabled:register("debug-breakpoint-data-disabled",60073),debugBreakpointLogUnverified:register("debug-breakpoint-log-unverified",60074),debugBreakpointLog:register("debug-breakpoint-log",60075),debugBreakpointLogDisabled:register("debug-breakpoint-log-disabled",60075),briefcase:register("briefcase",60076),broadcast:register("broadcast",60077),browser:register("browser",60078),bug:register("bug",60079),calendar:register("calendar",60080),caseSensitive:register("case-sensitive",60081),check:register("check",60082),checklist:register("checklist",60083),chevronDown:register("chevron-down",60084),dropDownButton:register("drop-down-button",60084),chevronLeft:register("chevron-left",60085),chevronRight:register("chevron-right",60086),chevronUp:register("chevron-up",60087),chromeClose:register("chrome-close",60088),chromeMaximize:register("chrome-maximize",60089),chromeMinimize:register("chrome-minimize",60090),chromeRestore:register("chrome-restore",60091),circle:register("circle",60092),circleOutline:register("circle-outline",60092),debugBreakpointUnverified:register("debug-breakpoint-unverified",60092),circleSlash:register("circle-slash",60093),circuitBoard:register("circuit-board",60094),clearAll:register("clear-all",60095),clippy:register("clippy",60096),closeAll:register("close-all",60097),cloudDownload:register("cloud-download",60098),cloudUpload:register("cloud-upload",60099),code:register("code",60100),collapseAll:register("collapse-all",60101),colorMode:register("color-mode",60102),commentDiscussion:register("comment-discussion",60103),compareChanges:register("compare-changes",60157),creditCard:register("credit-card",60105),dash:register("dash",60108),dashboard:register("dashboard",60109),database:register("database",60110),debugContinue:register("debug-continue",60111),debugDisconnect:register("debug-disconnect",60112),debugPause:register("debug-pause",60113),debugRestart:register("debug-restart",60114),debugStart:register("debug-start",60115),debugStepInto:register("debug-step-into",60116),debugStepOut:register("debug-step-out",60117),debugStepOver:register("debug-step-over",60118),debugStop:register("debug-stop",60119),debug:register("debug",60120),deviceCameraVideo:register("device-camera-video",60121),deviceCamera:register("device-camera",60122),deviceMobile:register("device-mobile",60123),diffAdded:register("diff-added",60124),diffIgnored:register("diff-ignored",60125),diffModified:register("diff-modified",60126),diffRemoved:register("diff-removed",60127),diffRenamed:register("diff-renamed",60128),diff:register("diff",60129),discard:register("discard",60130),editorLayout:register("editor-layout",60131),emptyWindow:register("empty-window",60132),exclude:register("exclude",60133),extensions:register("extensions",60134),eyeClosed:register("eye-closed",60135),fileBinary:register("file-binary",60136),fileCode:register("file-code",60137),fileMedia:register("file-media",60138),filePdf:register("file-pdf",60139),fileSubmodule:register("file-submodule",60140),fileSymlinkDirectory:register("file-symlink-directory",60141),fileSymlinkFile:register("file-symlink-file",60142),fileZip:register("file-zip",60143),files:register("files",60144),filter:register("filter",60145),flame:register("flame",60146),foldDown:register("fold-down",60147),foldUp:register("fold-up",60148),fold:register("fold",60149),folderActive:register("folder-active",60150),folderOpened:register("folder-opened",60151),gear:register("gear",60152),gift:register("gift",60153),gistSecret:register("gist-secret",60154),gist:register("gist",60155),gitCommit:register("git-commit",60156),gitCompare:register("git-compare",60157),gitMerge:register("git-merge",60158),githubAction:register("github-action",60159),githubAlt:register("github-alt",60160),globe:register("globe",60161),grabber:register("grabber",60162),graph:register("graph",60163),gripper:register("gripper",60164),heart:register("heart",60165),home:register("home",60166),horizontalRule:register("horizontal-rule",60167),hubot:register("hubot",60168),inbox:register("inbox",60169),issueClosed:register("issue-closed",60324),issueReopened:register("issue-reopened",60171),issues:register("issues",60172),italic:register("italic",60173),jersey:register("jersey",60174),json:register("json",60175),bracket:register("bracket",60175),kebabVertical:register("kebab-vertical",60176),key:register("key",60177),law:register("law",60178),lightbulbAutofix:register("lightbulb-autofix",60179),linkExternal:register("link-external",60180),link:register("link",60181),listOrdered:register("list-ordered",60182),listUnordered:register("list-unordered",60183),liveShare:register("live-share",60184),loading:register("loading",60185),location:register("location",60186),mailRead:register("mail-read",60187),mail:register("mail",60188),markdown:register("markdown",60189),megaphone:register("megaphone",60190),mention:register("mention",60191),milestone:register("milestone",60192),mortarBoard:register("mortar-board",60193),move:register("move",60194),multipleWindows:register("multiple-windows",60195),mute:register("mute",60196),noNewline:register("no-newline",60197),note:register("note",60198),octoface:register("octoface",60199),openPreview:register("open-preview",60200),package_:register("package",60201),paintcan:register("paintcan",60202),pin:register("pin",60203),play:register("play",60204),run:register("run",60204),plug:register("plug",60205),preserveCase:register("preserve-case",60206),preview:register("preview",60207),project:register("project",60208),pulse:register("pulse",60209),question:register("question",60210),quote:register("quote",60211),radioTower:register("radio-tower",60212),reactions:register("reactions",60213),references:register("references",60214),refresh:register("refresh",60215),regex:register("regex",60216),remoteExplorer:register("remote-explorer",60217),remote:register("remote",60218),remove:register("remove",60219),replaceAll:register("replace-all",60220),replace:register("replace",60221),repoClone:register("repo-clone",60222),repoForcePush:register("repo-force-push",60223),repoPull:register("repo-pull",60224),repoPush:register("repo-push",60225),report:register("report",60226),requestChanges:register("request-changes",60227),rocket:register("rocket",60228),rootFolderOpened:register("root-folder-opened",60229),rootFolder:register("root-folder",60230),rss:register("rss",60231),ruby:register("ruby",60232),saveAll:register("save-all",60233),saveAs:register("save-as",60234),save:register("save",60235),screenFull:register("screen-full",60236),screenNormal:register("screen-normal",60237),searchStop:register("search-stop",60238),server:register("server",60240),settingsGear:register("settings-gear",60241),settings:register("settings",60242),shield:register("shield",60243),smiley:register("smiley",60244),sortPrecedence:register("sort-precedence",60245),splitHorizontal:register("split-horizontal",60246),splitVertical:register("split-vertical",60247),squirrel:register("squirrel",60248),starFull:register("star-full",60249),starHalf:register("star-half",60250),symbolClass:register("symbol-class",60251),symbolColor:register("symbol-color",60252),symbolCustomColor:register("symbol-customcolor",60252),symbolConstant:register("symbol-constant",60253),symbolEnumMember:register("symbol-enum-member",60254),symbolField:register("symbol-field",60255),symbolFile:register("symbol-file",60256),symbolInterface:register("symbol-interface",60257),symbolKeyword:register("symbol-keyword",60258),symbolMisc:register("symbol-misc",60259),symbolOperator:register("symbol-operator",60260),symbolProperty:register("symbol-property",60261),wrench:register("wrench",60261),wrenchSubaction:register("wrench-subaction",60261),symbolSnippet:register("symbol-snippet",60262),tasklist:register("tasklist",60263),telescope:register("telescope",60264),textSize:register("text-size",60265),threeBars:register("three-bars",60266),thumbsdown:register("thumbsdown",60267),thumbsup:register("thumbsup",60268),tools:register("tools",60269),triangleDown:register("triangle-down",60270),triangleLeft:register("triangle-left",60271),triangleRight:register("triangle-right",60272),triangleUp:register("triangle-up",60273),twitter:register("twitter",60274),unfold:register("unfold",60275),unlock:register("unlock",60276),unmute:register("unmute",60277),unverified:register("unverified",60278),verified:register("verified",60279),versions:register("versions",60280),vmActive:register("vm-active",60281),vmOutline:register("vm-outline",60282),vmRunning:register("vm-running",60283),watch:register("watch",60284),whitespace:register("whitespace",60285),wholeWord:register("whole-word",60286),window:register("window",60287),wordWrap:register("word-wrap",60288),zoomIn:register("zoom-in",60289),zoomOut:register("zoom-out",60290),listFilter:register("list-filter",60291),listFlat:register("list-flat",60292),listSelection:register("list-selection",60293),selection:register("selection",60293),listTree:register("list-tree",60294),debugBreakpointFunctionUnverified:register("debug-breakpoint-function-unverified",60295),debugBreakpointFunction:register("debug-breakpoint-function",60296),debugBreakpointFunctionDisabled:register("debug-breakpoint-function-disabled",60296),debugStackframeActive:register("debug-stackframe-active",60297),circleSmallFilled:register("circle-small-filled",60298),debugStackframeDot:register("debug-stackframe-dot",60298),debugStackframe:register("debug-stackframe",60299),debugStackframeFocused:register("debug-stackframe-focused",60299),debugBreakpointUnsupported:register("debug-breakpoint-unsupported",60300),symbolString:register("symbol-string",60301),debugReverseContinue:register("debug-reverse-continue",60302),debugStepBack:register("debug-step-back",60303),debugRestartFrame:register("debug-restart-frame",60304),callIncoming:register("call-incoming",60306),callOutgoing:register("call-outgoing",60307),menu:register("menu",60308),expandAll:register("expand-all",60309),feedback:register("feedback",60310),groupByRefType:register("group-by-ref-type",60311),ungroupByRefType:register("ungroup-by-ref-type",60312),account:register("account",60313),bellDot:register("bell-dot",60314),debugConsole:register("debug-console",60315),library:register("library",60316),output:register("output",60317),runAll:register("run-all",60318),syncIgnored:register("sync-ignored",60319),pinned:register("pinned",60320),githubInverted:register("github-inverted",60321),debugAlt:register("debug-alt",60305),serverProcess:register("server-process",60322),serverEnvironment:register("server-environment",60323),pass:register("pass",60324),stopCircle:register("stop-circle",60325),playCircle:register("play-circle",60326),record:register("record",60327),debugAltSmall:register("debug-alt-small",60328),vmConnect:register("vm-connect",60329),cloud:register("cloud",60330),merge:register("merge",60331),exportIcon:register("export",60332),graphLeft:register("graph-left",60333),magnet:register("magnet",60334),notebook:register("notebook",60335),redo:register("redo",60336),checkAll:register("check-all",60337),pinnedDirty:register("pinned-dirty",60338),passFilled:register("pass-filled",60339),circleLargeFilled:register("circle-large-filled",60340),circleLarge:register("circle-large",60341),circleLargeOutline:register("circle-large-outline",60341),combine:register("combine",60342),gather:register("gather",60342),table:register("table",60343),variableGroup:register("variable-group",60344),typeHierarchy:register("type-hierarchy",60345),typeHierarchySub:register("type-hierarchy-sub",60346),typeHierarchySuper:register("type-hierarchy-super",60347),gitPullRequestCreate:register("git-pull-request-create",60348),runAbove:register("run-above",60349),runBelow:register("run-below",60350),notebookTemplate:register("notebook-template",60351),debugRerun:register("debug-rerun",60352),workspaceTrusted:register("workspace-trusted",60353),workspaceUntrusted:register("workspace-untrusted",60354),workspaceUnspecified:register("workspace-unspecified",60355),terminalCmd:register("terminal-cmd",60356),terminalDebian:register("terminal-debian",60357),terminalLinux:register("terminal-linux",60358),terminalPowershell:register("terminal-powershell",60359),terminalTmux:register("terminal-tmux",60360),terminalUbuntu:register("terminal-ubuntu",60361),terminalBash:register("terminal-bash",60362),arrowSwap:register("arrow-swap",60363),copy:register("copy",60364),personAdd:register("person-add",60365),filterFilled:register("filter-filled",60366),wand:register("wand",60367),debugLineByLine:register("debug-line-by-line",60368),inspect:register("inspect",60369),layers:register("layers",60370),layersDot:register("layers-dot",60371),layersActive:register("layers-active",60372),compass:register("compass",60373),compassDot:register("compass-dot",60374),compassActive:register("compass-active",60375),azure:register("azure",60376),issueDraft:register("issue-draft",60377),gitPullRequestClosed:register("git-pull-request-closed",60378),gitPullRequestDraft:register("git-pull-request-draft",60379),debugAll:register("debug-all",60380),debugCoverage:register("debug-coverage",60381),runErrors:register("run-errors",60382),folderLibrary:register("folder-library",60383),debugContinueSmall:register("debug-continue-small",60384),beakerStop:register("beaker-stop",60385),graphLine:register("graph-line",60386),graphScatter:register("graph-scatter",60387),pieChart:register("pie-chart",60388),bracketDot:register("bracket-dot",60389),bracketError:register("bracket-error",60390),lockSmall:register("lock-small",60391),azureDevops:register("azure-devops",60392),verifiedFilled:register("verified-filled",60393),newLine:register("newline",60394),layout:register("layout",60395),layoutActivitybarLeft:register("layout-activitybar-left",60396),layoutActivitybarRight:register("layout-activitybar-right",60397),layoutPanelLeft:register("layout-panel-left",60398),layoutPanelCenter:register("layout-panel-center",60399),layoutPanelJustify:register("layout-panel-justify",60400),layoutPanelRight:register("layout-panel-right",60401),layoutPanel:register("layout-panel",60402),layoutSidebarLeft:register("layout-sidebar-left",60403),layoutSidebarRight:register("layout-sidebar-right",60404),layoutStatusbar:register("layout-statusbar",60405),layoutMenubar:register("layout-menubar",60406),layoutCentered:register("layout-centered",60407),layoutSidebarRightOff:register("layout-sidebar-right-off",60416),layoutPanelOff:register("layout-panel-off",60417),layoutSidebarLeftOff:register("layout-sidebar-left-off",60418),target:register("target",60408),indent:register("indent",60409),recordSmall:register("record-small",60410),errorSmall:register("error-small",60411),arrowCircleDown:register("arrow-circle-down",60412),arrowCircleLeft:register("arrow-circle-left",60413),arrowCircleRight:register("arrow-circle-right",60414),arrowCircleUp:register("arrow-circle-up",60415),heartFilled:register("heart-filled",60420),map:register("map",60421),mapFilled:register("map-filled",60422),circleSmall:register("circle-small",60423),bellSlash:register("bell-slash",60424),bellSlashDot:register("bell-slash-dot",60425),commentUnresolved:register("comment-unresolved",60426),gitPullRequestGoToChanges:register("git-pull-request-go-to-changes",60427),gitPullRequestNewChanges:register("git-pull-request-new-changes",60428),searchFuzzy:register("search-fuzzy",60429),commentDraft:register("comment-draft",60430),send:register("send",60431),sparkle:register("sparkle",60432),insert:register("insert",60433),dialogError:register("dialog-error","error"),dialogWarning:register("dialog-warning","warning"),dialogInfo:register("dialog-info","info"),dialogClose:register("dialog-close","close"),treeItemExpanded:register("tree-item-expanded","chevron-down"),treeFilterOnTypeOn:register("tree-filter-on-type-on","list-filter"),treeFilterOnTypeOff:register("tree-filter-on-type-off","list-selection"),treeFilterClear:register("tree-filter-clear","close"),treeItemLoading:register("tree-item-loading","loading"),menuSelection:register("menu-selection","check"),menuSubmenu:register("menu-submenu","chevron-right"),menuBarMore:register("menubar-more","more"),scrollbarButtonLeft:register("scrollbar-button-left","triangle-left"),scrollbarButtonRight:register("scrollbar-button-right","triangle-right"),scrollbarButtonUp:register("scrollbar-button-up","triangle-up"),scrollbarButtonDown:register("scrollbar-button-down","triangle-down"),toolBarMore:register("toolbar-more","more"),quickInputBack:register("quick-input-back","arrow-left")};var CompletionItemKinds,InlineCompletionTriggerKind,SignatureHelpTriggerKind,DocumentHighlightKind,SymbolKinds,Command,InlayHintKind,tokenizationRegistry_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class TokenizationSupportFactoryData extends lifecycle_Disposable{get isResolved(){return this._isResolved}constructor(_registry,_languageId,_factory){super(),this._registry=_registry,this._languageId=_languageId,this._factory=_factory,this._isDisposed=!1,this._resolvePromise=null,this._isResolved=!1}dispose(){this._isDisposed=!0,super.dispose()}resolve(){return tokenizationRegistry_awaiter(this,void 0,void 0,(function*(){return this._resolvePromise||(this._resolvePromise=this._create()),this._resolvePromise}))}_create(){return tokenizationRegistry_awaiter(this,void 0,void 0,(function*(){const value=yield this._factory.tokenizationSupport;this._isResolved=!0,value&&!this._isDisposed&&this._register(this._registry.register(this._languageId,value))}))}}class Token{constructor(offset,type,language){this.offset=offset,this.type=type,this.language=language,this._tokenBrand=void 0}toString(){return"("+this.offset+", "+this.type+")"}}!function(CompletionItemKinds){const byKind=new Map;byKind.set(0,Codicon.symbolMethod),byKind.set(1,Codicon.symbolFunction),byKind.set(2,Codicon.symbolConstructor),byKind.set(3,Codicon.symbolField),byKind.set(4,Codicon.symbolVariable),byKind.set(5,Codicon.symbolClass),byKind.set(6,Codicon.symbolStruct),byKind.set(7,Codicon.symbolInterface),byKind.set(8,Codicon.symbolModule),byKind.set(9,Codicon.symbolProperty),byKind.set(10,Codicon.symbolEvent),byKind.set(11,Codicon.symbolOperator),byKind.set(12,Codicon.symbolUnit),byKind.set(13,Codicon.symbolValue),byKind.set(15,Codicon.symbolEnum),byKind.set(14,Codicon.symbolConstant),byKind.set(15,Codicon.symbolEnum),byKind.set(16,Codicon.symbolEnumMember),byKind.set(17,Codicon.symbolKeyword),byKind.set(27,Codicon.symbolSnippet),byKind.set(18,Codicon.symbolText),byKind.set(19,Codicon.symbolColor),byKind.set(20,Codicon.symbolFile),byKind.set(21,Codicon.symbolReference),byKind.set(22,Codicon.symbolCustomColor),byKind.set(23,Codicon.symbolFolder),byKind.set(24,Codicon.symbolTypeParameter),byKind.set(25,Codicon.account),byKind.set(26,Codicon.issues),CompletionItemKinds.toIcon=function toIcon(kind){let codicon=byKind.get(kind);return codicon||(console.info("No codicon found for CompletionItemKind "+kind),codicon=Codicon.symbolProperty),codicon};const data=new Map;data.set("method",0),data.set("function",1),data.set("constructor",2),data.set("field",3),data.set("variable",4),data.set("class",5),data.set("struct",6),data.set("interface",7),data.set("module",8),data.set("property",9),data.set("event",10),data.set("operator",11),data.set("unit",12),data.set("value",13),data.set("constant",14),data.set("enum",15),data.set("enum-member",16),data.set("enumMember",16),data.set("keyword",17),data.set("snippet",27),data.set("text",18),data.set("color",19),data.set("file",20),data.set("reference",21),data.set("customcolor",22),data.set("folder",23),data.set("type-parameter",24),data.set("typeParameter",24),data.set("account",25),data.set("issue",26),CompletionItemKinds.fromString=function fromString(value,strict){let res=data.get(value);return void 0!==res||strict||(res=9),res}}(CompletionItemKinds||(CompletionItemKinds={})),function(InlineCompletionTriggerKind){InlineCompletionTriggerKind[InlineCompletionTriggerKind.Automatic=0]="Automatic",InlineCompletionTriggerKind[InlineCompletionTriggerKind.Explicit=1]="Explicit"}(InlineCompletionTriggerKind||(InlineCompletionTriggerKind={}));!function(SignatureHelpTriggerKind){SignatureHelpTriggerKind[SignatureHelpTriggerKind.Invoke=1]="Invoke",SignatureHelpTriggerKind[SignatureHelpTriggerKind.TriggerCharacter=2]="TriggerCharacter",SignatureHelpTriggerKind[SignatureHelpTriggerKind.ContentChange=3]="ContentChange"}(SignatureHelpTriggerKind||(SignatureHelpTriggerKind={})),function(DocumentHighlightKind){DocumentHighlightKind[DocumentHighlightKind.Text=0]="Text",DocumentHighlightKind[DocumentHighlightKind.Read=1]="Read",DocumentHighlightKind[DocumentHighlightKind.Write=2]="Write"}(DocumentHighlightKind||(DocumentHighlightKind={})),function(SymbolKinds){const byKind=new Map;byKind.set(0,Codicon.symbolFile),byKind.set(1,Codicon.symbolModule),byKind.set(2,Codicon.symbolNamespace),byKind.set(3,Codicon.symbolPackage),byKind.set(4,Codicon.symbolClass),byKind.set(5,Codicon.symbolMethod),byKind.set(6,Codicon.symbolProperty),byKind.set(7,Codicon.symbolField),byKind.set(8,Codicon.symbolConstructor),byKind.set(9,Codicon.symbolEnum),byKind.set(10,Codicon.symbolInterface),byKind.set(11,Codicon.symbolFunction),byKind.set(12,Codicon.symbolVariable),byKind.set(13,Codicon.symbolConstant),byKind.set(14,Codicon.symbolString),byKind.set(15,Codicon.symbolNumber),byKind.set(16,Codicon.symbolBoolean),byKind.set(17,Codicon.symbolArray),byKind.set(18,Codicon.symbolObject),byKind.set(19,Codicon.symbolKey),byKind.set(20,Codicon.symbolNull),byKind.set(21,Codicon.symbolEnumMember),byKind.set(22,Codicon.symbolStruct),byKind.set(23,Codicon.symbolEvent),byKind.set(24,Codicon.symbolOperator),byKind.set(25,Codicon.symbolTypeParameter),SymbolKinds.toIcon=function toIcon(kind){let icon=byKind.get(kind);return icon||(console.info("No codicon found for SymbolKind "+kind),icon=Codicon.symbolProperty),icon}}(SymbolKinds||(SymbolKinds={}));class FoldingRangeKind{static fromValue(value){switch(value){case"comment":return FoldingRangeKind.Comment;case"imports":return FoldingRangeKind.Imports;case"region":return FoldingRangeKind.Region}return new FoldingRangeKind(value)}constructor(value){this.value=value}}FoldingRangeKind.Comment=new FoldingRangeKind("comment"),FoldingRangeKind.Imports=new FoldingRangeKind("imports"),FoldingRangeKind.Region=new FoldingRangeKind("region"),function(Command){Command.is=function is(obj){return!(!obj||"object"!=typeof obj)&&("string"==typeof obj.id&&"string"==typeof obj.title)}}(Command||(Command={})),function(InlayHintKind){InlayHintKind[InlayHintKind.Type=1]="Type",InlayHintKind[InlayHintKind.Parameter=2]="Parameter"}(InlayHintKind||(InlayHintKind={}));new class TokenizationRegistry{constructor(){this._tokenizationSupports=new Map,this._factories=new Map,this._onDidChange=new Emitter,this.onDidChange=this._onDidChange.event,this._colorMap=null}handleChange(languageIds){this._onDidChange.fire({changedLanguages:languageIds,changedColorMap:!1})}register(languageId,support){return this._tokenizationSupports.set(languageId,support),this.handleChange([languageId]),lifecycle_toDisposable((()=>{this._tokenizationSupports.get(languageId)===support&&(this._tokenizationSupports.delete(languageId),this.handleChange([languageId]))}))}get(languageId){return this._tokenizationSupports.get(languageId)||null}registerFactory(languageId,factory){var _a;null===(_a=this._factories.get(languageId))||void 0===_a||_a.dispose();const myData=new TokenizationSupportFactoryData(this,languageId,factory);return this._factories.set(languageId,myData),lifecycle_toDisposable((()=>{const v=this._factories.get(languageId);v&&v===myData&&(this._factories.delete(languageId),v.dispose())}))}getOrCreate(languageId){return tokenizationRegistry_awaiter(this,void 0,void 0,(function*(){const tokenizationSupport=this.get(languageId);if(tokenizationSupport)return tokenizationSupport;const factory=this._factories.get(languageId);return!factory||factory.isResolved?null:(yield factory.resolve(),this.get(languageId))}))}isResolved(languageId){if(this.get(languageId))return!0;const factory=this._factories.get(languageId);return!(factory&&!factory.isResolved)}setColorMap(colorMap){this._colorMap=colorMap,this._onDidChange.fire({changedLanguages:Array.from(this._tokenizationSupports.keys()),changedColorMap:!0})}getColorMap(){return this._colorMap}getDefaultBackground(){return this._colorMap&&this._colorMap.length>2?this._colorMap[2]:null}};var AccessibilitySupport,CodeActionTriggerType,CompletionItemInsertTextRule,CompletionItemKind,CompletionItemTag,CompletionTriggerKind,ContentWidgetPositionPreference,CursorChangeReason,DefaultEndOfLine,standaloneEnums_DocumentHighlightKind,EditorAutoIndentStrategy,EditorOption,EndOfLinePreference,EndOfLineSequence,GlyphMarginLane,IndentAction,InjectedTextCursorStops,standaloneEnums_InlayHintKind,standaloneEnums_InlineCompletionTriggerKind,KeyCode,MarkerSeverity,MarkerTag,MinimapPosition,MouseTargetType,OverlayWidgetPositionPreference,OverviewRulerLane,PositionAffinity,RenderLineNumbersType,RenderMinimap,ScrollType,ScrollbarVisibility,SelectionDirection,standaloneEnums_SignatureHelpTriggerKind,SymbolKind,SymbolTag,TextEditorCursorBlinkingStyle,TextEditorCursorStyle,TrackedRangeStickiness,WrappingIndent;!function(AccessibilitySupport){AccessibilitySupport[AccessibilitySupport.Unknown=0]="Unknown",AccessibilitySupport[AccessibilitySupport.Disabled=1]="Disabled",AccessibilitySupport[AccessibilitySupport.Enabled=2]="Enabled"}(AccessibilitySupport||(AccessibilitySupport={})),function(CodeActionTriggerType){CodeActionTriggerType[CodeActionTriggerType.Invoke=1]="Invoke",CodeActionTriggerType[CodeActionTriggerType.Auto=2]="Auto"}(CodeActionTriggerType||(CodeActionTriggerType={})),function(CompletionItemInsertTextRule){CompletionItemInsertTextRule[CompletionItemInsertTextRule.None=0]="None",CompletionItemInsertTextRule[CompletionItemInsertTextRule.KeepWhitespace=1]="KeepWhitespace",CompletionItemInsertTextRule[CompletionItemInsertTextRule.InsertAsSnippet=4]="InsertAsSnippet"}(CompletionItemInsertTextRule||(CompletionItemInsertTextRule={})),function(CompletionItemKind){CompletionItemKind[CompletionItemKind.Method=0]="Method",CompletionItemKind[CompletionItemKind.Function=1]="Function",CompletionItemKind[CompletionItemKind.Constructor=2]="Constructor",CompletionItemKind[CompletionItemKind.Field=3]="Field",CompletionItemKind[CompletionItemKind.Variable=4]="Variable",CompletionItemKind[CompletionItemKind.Class=5]="Class",CompletionItemKind[CompletionItemKind.Struct=6]="Struct",CompletionItemKind[CompletionItemKind.Interface=7]="Interface",CompletionItemKind[CompletionItemKind.Module=8]="Module",CompletionItemKind[CompletionItemKind.Property=9]="Property",CompletionItemKind[CompletionItemKind.Event=10]="Event",CompletionItemKind[CompletionItemKind.Operator=11]="Operator",CompletionItemKind[CompletionItemKind.Unit=12]="Unit",CompletionItemKind[CompletionItemKind.Value=13]="Value",CompletionItemKind[CompletionItemKind.Constant=14]="Constant",CompletionItemKind[CompletionItemKind.Enum=15]="Enum",CompletionItemKind[CompletionItemKind.EnumMember=16]="EnumMember",CompletionItemKind[CompletionItemKind.Keyword=17]="Keyword",CompletionItemKind[CompletionItemKind.Text=18]="Text",CompletionItemKind[CompletionItemKind.Color=19]="Color",CompletionItemKind[CompletionItemKind.File=20]="File",CompletionItemKind[CompletionItemKind.Reference=21]="Reference",CompletionItemKind[CompletionItemKind.Customcolor=22]="Customcolor",CompletionItemKind[CompletionItemKind.Folder=23]="Folder",CompletionItemKind[CompletionItemKind.TypeParameter=24]="TypeParameter",CompletionItemKind[CompletionItemKind.User=25]="User",CompletionItemKind[CompletionItemKind.Issue=26]="Issue",CompletionItemKind[CompletionItemKind.Snippet=27]="Snippet"}(CompletionItemKind||(CompletionItemKind={})),function(CompletionItemTag){CompletionItemTag[CompletionItemTag.Deprecated=1]="Deprecated"}(CompletionItemTag||(CompletionItemTag={})),function(CompletionTriggerKind){CompletionTriggerKind[CompletionTriggerKind.Invoke=0]="Invoke",CompletionTriggerKind[CompletionTriggerKind.TriggerCharacter=1]="TriggerCharacter",CompletionTriggerKind[CompletionTriggerKind.TriggerForIncompleteCompletions=2]="TriggerForIncompleteCompletions"}(CompletionTriggerKind||(CompletionTriggerKind={})),function(ContentWidgetPositionPreference){ContentWidgetPositionPreference[ContentWidgetPositionPreference.EXACT=0]="EXACT",ContentWidgetPositionPreference[ContentWidgetPositionPreference.ABOVE=1]="ABOVE",ContentWidgetPositionPreference[ContentWidgetPositionPreference.BELOW=2]="BELOW"}(ContentWidgetPositionPreference||(ContentWidgetPositionPreference={})),function(CursorChangeReason){CursorChangeReason[CursorChangeReason.NotSet=0]="NotSet",CursorChangeReason[CursorChangeReason.ContentFlush=1]="ContentFlush",CursorChangeReason[CursorChangeReason.RecoverFromMarkers=2]="RecoverFromMarkers",CursorChangeReason[CursorChangeReason.Explicit=3]="Explicit",CursorChangeReason[CursorChangeReason.Paste=4]="Paste",CursorChangeReason[CursorChangeReason.Undo=5]="Undo",CursorChangeReason[CursorChangeReason.Redo=6]="Redo"}(CursorChangeReason||(CursorChangeReason={})),function(DefaultEndOfLine){DefaultEndOfLine[DefaultEndOfLine.LF=1]="LF",DefaultEndOfLine[DefaultEndOfLine.CRLF=2]="CRLF"}(DefaultEndOfLine||(DefaultEndOfLine={})),function(DocumentHighlightKind){DocumentHighlightKind[DocumentHighlightKind.Text=0]="Text",DocumentHighlightKind[DocumentHighlightKind.Read=1]="Read",DocumentHighlightKind[DocumentHighlightKind.Write=2]="Write"}(standaloneEnums_DocumentHighlightKind||(standaloneEnums_DocumentHighlightKind={})),function(EditorAutoIndentStrategy){EditorAutoIndentStrategy[EditorAutoIndentStrategy.None=0]="None",EditorAutoIndentStrategy[EditorAutoIndentStrategy.Keep=1]="Keep",EditorAutoIndentStrategy[EditorAutoIndentStrategy.Brackets=2]="Brackets",EditorAutoIndentStrategy[EditorAutoIndentStrategy.Advanced=3]="Advanced",EditorAutoIndentStrategy[EditorAutoIndentStrategy.Full=4]="Full"}(EditorAutoIndentStrategy||(EditorAutoIndentStrategy={})),function(EditorOption){EditorOption[EditorOption.acceptSuggestionOnCommitCharacter=0]="acceptSuggestionOnCommitCharacter",EditorOption[EditorOption.acceptSuggestionOnEnter=1]="acceptSuggestionOnEnter",EditorOption[EditorOption.accessibilitySupport=2]="accessibilitySupport",EditorOption[EditorOption.accessibilityPageSize=3]="accessibilityPageSize",EditorOption[EditorOption.ariaLabel=4]="ariaLabel",EditorOption[EditorOption.autoClosingBrackets=5]="autoClosingBrackets",EditorOption[EditorOption.screenReaderAnnounceInlineSuggestion=6]="screenReaderAnnounceInlineSuggestion",EditorOption[EditorOption.autoClosingDelete=7]="autoClosingDelete",EditorOption[EditorOption.autoClosingOvertype=8]="autoClosingOvertype",EditorOption[EditorOption.autoClosingQuotes=9]="autoClosingQuotes",EditorOption[EditorOption.autoIndent=10]="autoIndent",EditorOption[EditorOption.automaticLayout=11]="automaticLayout",EditorOption[EditorOption.autoSurround=12]="autoSurround",EditorOption[EditorOption.bracketPairColorization=13]="bracketPairColorization",EditorOption[EditorOption.guides=14]="guides",EditorOption[EditorOption.codeLens=15]="codeLens",EditorOption[EditorOption.codeLensFontFamily=16]="codeLensFontFamily",EditorOption[EditorOption.codeLensFontSize=17]="codeLensFontSize",EditorOption[EditorOption.colorDecorators=18]="colorDecorators",EditorOption[EditorOption.colorDecoratorsLimit=19]="colorDecoratorsLimit",EditorOption[EditorOption.columnSelection=20]="columnSelection",EditorOption[EditorOption.comments=21]="comments",EditorOption[EditorOption.contextmenu=22]="contextmenu",EditorOption[EditorOption.copyWithSyntaxHighlighting=23]="copyWithSyntaxHighlighting",EditorOption[EditorOption.cursorBlinking=24]="cursorBlinking",EditorOption[EditorOption.cursorSmoothCaretAnimation=25]="cursorSmoothCaretAnimation",EditorOption[EditorOption.cursorStyle=26]="cursorStyle",EditorOption[EditorOption.cursorSurroundingLines=27]="cursorSurroundingLines",EditorOption[EditorOption.cursorSurroundingLinesStyle=28]="cursorSurroundingLinesStyle",EditorOption[EditorOption.cursorWidth=29]="cursorWidth",EditorOption[EditorOption.disableLayerHinting=30]="disableLayerHinting",EditorOption[EditorOption.disableMonospaceOptimizations=31]="disableMonospaceOptimizations",EditorOption[EditorOption.domReadOnly=32]="domReadOnly",EditorOption[EditorOption.dragAndDrop=33]="dragAndDrop",EditorOption[EditorOption.dropIntoEditor=34]="dropIntoEditor",EditorOption[EditorOption.emptySelectionClipboard=35]="emptySelectionClipboard",EditorOption[EditorOption.experimentalWhitespaceRendering=36]="experimentalWhitespaceRendering",EditorOption[EditorOption.extraEditorClassName=37]="extraEditorClassName",EditorOption[EditorOption.fastScrollSensitivity=38]="fastScrollSensitivity",EditorOption[EditorOption.find=39]="find",EditorOption[EditorOption.fixedOverflowWidgets=40]="fixedOverflowWidgets",EditorOption[EditorOption.folding=41]="folding",EditorOption[EditorOption.foldingStrategy=42]="foldingStrategy",EditorOption[EditorOption.foldingHighlight=43]="foldingHighlight",EditorOption[EditorOption.foldingImportsByDefault=44]="foldingImportsByDefault",EditorOption[EditorOption.foldingMaximumRegions=45]="foldingMaximumRegions",EditorOption[EditorOption.unfoldOnClickAfterEndOfLine=46]="unfoldOnClickAfterEndOfLine",EditorOption[EditorOption.fontFamily=47]="fontFamily",EditorOption[EditorOption.fontInfo=48]="fontInfo",EditorOption[EditorOption.fontLigatures=49]="fontLigatures",EditorOption[EditorOption.fontSize=50]="fontSize",EditorOption[EditorOption.fontWeight=51]="fontWeight",EditorOption[EditorOption.fontVariations=52]="fontVariations",EditorOption[EditorOption.formatOnPaste=53]="formatOnPaste",EditorOption[EditorOption.formatOnType=54]="formatOnType",EditorOption[EditorOption.glyphMargin=55]="glyphMargin",EditorOption[EditorOption.gotoLocation=56]="gotoLocation",EditorOption[EditorOption.hideCursorInOverviewRuler=57]="hideCursorInOverviewRuler",EditorOption[EditorOption.hover=58]="hover",EditorOption[EditorOption.inDiffEditor=59]="inDiffEditor",EditorOption[EditorOption.inlineSuggest=60]="inlineSuggest",EditorOption[EditorOption.letterSpacing=61]="letterSpacing",EditorOption[EditorOption.lightbulb=62]="lightbulb",EditorOption[EditorOption.lineDecorationsWidth=63]="lineDecorationsWidth",EditorOption[EditorOption.lineHeight=64]="lineHeight",EditorOption[EditorOption.lineNumbers=65]="lineNumbers",EditorOption[EditorOption.lineNumbersMinChars=66]="lineNumbersMinChars",EditorOption[EditorOption.linkedEditing=67]="linkedEditing",EditorOption[EditorOption.links=68]="links",EditorOption[EditorOption.matchBrackets=69]="matchBrackets",EditorOption[EditorOption.minimap=70]="minimap",EditorOption[EditorOption.mouseStyle=71]="mouseStyle",EditorOption[EditorOption.mouseWheelScrollSensitivity=72]="mouseWheelScrollSensitivity",EditorOption[EditorOption.mouseWheelZoom=73]="mouseWheelZoom",EditorOption[EditorOption.multiCursorMergeOverlapping=74]="multiCursorMergeOverlapping",EditorOption[EditorOption.multiCursorModifier=75]="multiCursorModifier",EditorOption[EditorOption.multiCursorPaste=76]="multiCursorPaste",EditorOption[EditorOption.multiCursorLimit=77]="multiCursorLimit",EditorOption[EditorOption.occurrencesHighlight=78]="occurrencesHighlight",EditorOption[EditorOption.overviewRulerBorder=79]="overviewRulerBorder",EditorOption[EditorOption.overviewRulerLanes=80]="overviewRulerLanes",EditorOption[EditorOption.padding=81]="padding",EditorOption[EditorOption.pasteAs=82]="pasteAs",EditorOption[EditorOption.parameterHints=83]="parameterHints",EditorOption[EditorOption.peekWidgetDefaultFocus=84]="peekWidgetDefaultFocus",EditorOption[EditorOption.definitionLinkOpensInPeek=85]="definitionLinkOpensInPeek",EditorOption[EditorOption.quickSuggestions=86]="quickSuggestions",EditorOption[EditorOption.quickSuggestionsDelay=87]="quickSuggestionsDelay",EditorOption[EditorOption.readOnly=88]="readOnly",EditorOption[EditorOption.renameOnType=89]="renameOnType",EditorOption[EditorOption.renderControlCharacters=90]="renderControlCharacters",EditorOption[EditorOption.renderFinalNewline=91]="renderFinalNewline",EditorOption[EditorOption.renderLineHighlight=92]="renderLineHighlight",EditorOption[EditorOption.renderLineHighlightOnlyWhenFocus=93]="renderLineHighlightOnlyWhenFocus",EditorOption[EditorOption.renderValidationDecorations=94]="renderValidationDecorations",EditorOption[EditorOption.renderWhitespace=95]="renderWhitespace",EditorOption[EditorOption.revealHorizontalRightPadding=96]="revealHorizontalRightPadding",EditorOption[EditorOption.roundedSelection=97]="roundedSelection",EditorOption[EditorOption.rulers=98]="rulers",EditorOption[EditorOption.scrollbar=99]="scrollbar",EditorOption[EditorOption.scrollBeyondLastColumn=100]="scrollBeyondLastColumn",EditorOption[EditorOption.scrollBeyondLastLine=101]="scrollBeyondLastLine",EditorOption[EditorOption.scrollPredominantAxis=102]="scrollPredominantAxis",EditorOption[EditorOption.selectionClipboard=103]="selectionClipboard",EditorOption[EditorOption.selectionHighlight=104]="selectionHighlight",EditorOption[EditorOption.selectOnLineNumbers=105]="selectOnLineNumbers",EditorOption[EditorOption.showFoldingControls=106]="showFoldingControls",EditorOption[EditorOption.showUnused=107]="showUnused",EditorOption[EditorOption.snippetSuggestions=108]="snippetSuggestions",EditorOption[EditorOption.smartSelect=109]="smartSelect",EditorOption[EditorOption.smoothScrolling=110]="smoothScrolling",EditorOption[EditorOption.stickyScroll=111]="stickyScroll",EditorOption[EditorOption.stickyTabStops=112]="stickyTabStops",EditorOption[EditorOption.stopRenderingLineAfter=113]="stopRenderingLineAfter",EditorOption[EditorOption.suggest=114]="suggest",EditorOption[EditorOption.suggestFontSize=115]="suggestFontSize",EditorOption[EditorOption.suggestLineHeight=116]="suggestLineHeight",EditorOption[EditorOption.suggestOnTriggerCharacters=117]="suggestOnTriggerCharacters",EditorOption[EditorOption.suggestSelection=118]="suggestSelection",EditorOption[EditorOption.tabCompletion=119]="tabCompletion",EditorOption[EditorOption.tabIndex=120]="tabIndex",EditorOption[EditorOption.unicodeHighlighting=121]="unicodeHighlighting",EditorOption[EditorOption.unusualLineTerminators=122]="unusualLineTerminators",EditorOption[EditorOption.useShadowDOM=123]="useShadowDOM",EditorOption[EditorOption.useTabStops=124]="useTabStops",EditorOption[EditorOption.wordBreak=125]="wordBreak",EditorOption[EditorOption.wordSeparators=126]="wordSeparators",EditorOption[EditorOption.wordWrap=127]="wordWrap",EditorOption[EditorOption.wordWrapBreakAfterCharacters=128]="wordWrapBreakAfterCharacters",EditorOption[EditorOption.wordWrapBreakBeforeCharacters=129]="wordWrapBreakBeforeCharacters",EditorOption[EditorOption.wordWrapColumn=130]="wordWrapColumn",EditorOption[EditorOption.wordWrapOverride1=131]="wordWrapOverride1",EditorOption[EditorOption.wordWrapOverride2=132]="wordWrapOverride2",EditorOption[EditorOption.wrappingIndent=133]="wrappingIndent",EditorOption[EditorOption.wrappingStrategy=134]="wrappingStrategy",EditorOption[EditorOption.showDeprecated=135]="showDeprecated",EditorOption[EditorOption.inlayHints=136]="inlayHints",EditorOption[EditorOption.editorClassName=137]="editorClassName",EditorOption[EditorOption.pixelRatio=138]="pixelRatio",EditorOption[EditorOption.tabFocusMode=139]="tabFocusMode",EditorOption[EditorOption.layoutInfo=140]="layoutInfo",EditorOption[EditorOption.wrappingInfo=141]="wrappingInfo",EditorOption[EditorOption.defaultColorDecorators=142]="defaultColorDecorators"}(EditorOption||(EditorOption={})),function(EndOfLinePreference){EndOfLinePreference[EndOfLinePreference.TextDefined=0]="TextDefined",EndOfLinePreference[EndOfLinePreference.LF=1]="LF",EndOfLinePreference[EndOfLinePreference.CRLF=2]="CRLF"}(EndOfLinePreference||(EndOfLinePreference={})),function(EndOfLineSequence){EndOfLineSequence[EndOfLineSequence.LF=0]="LF",EndOfLineSequence[EndOfLineSequence.CRLF=1]="CRLF"}(EndOfLineSequence||(EndOfLineSequence={})),function(GlyphMarginLane){GlyphMarginLane[GlyphMarginLane.Left=1]="Left",GlyphMarginLane[GlyphMarginLane.Right=2]="Right"}(GlyphMarginLane||(GlyphMarginLane={})),function(IndentAction){IndentAction[IndentAction.None=0]="None",IndentAction[IndentAction.Indent=1]="Indent",IndentAction[IndentAction.IndentOutdent=2]="IndentOutdent",IndentAction[IndentAction.Outdent=3]="Outdent"}(IndentAction||(IndentAction={})),function(InjectedTextCursorStops){InjectedTextCursorStops[InjectedTextCursorStops.Both=0]="Both",InjectedTextCursorStops[InjectedTextCursorStops.Right=1]="Right",InjectedTextCursorStops[InjectedTextCursorStops.Left=2]="Left",InjectedTextCursorStops[InjectedTextCursorStops.None=3]="None"}(InjectedTextCursorStops||(InjectedTextCursorStops={})),function(InlayHintKind){InlayHintKind[InlayHintKind.Type=1]="Type",InlayHintKind[InlayHintKind.Parameter=2]="Parameter"}(standaloneEnums_InlayHintKind||(standaloneEnums_InlayHintKind={})),function(InlineCompletionTriggerKind){InlineCompletionTriggerKind[InlineCompletionTriggerKind.Automatic=0]="Automatic",InlineCompletionTriggerKind[InlineCompletionTriggerKind.Explicit=1]="Explicit"}(standaloneEnums_InlineCompletionTriggerKind||(standaloneEnums_InlineCompletionTriggerKind={})),function(KeyCode){KeyCode[KeyCode.DependsOnKbLayout=-1]="DependsOnKbLayout",KeyCode[KeyCode.Unknown=0]="Unknown",KeyCode[KeyCode.Backspace=1]="Backspace",KeyCode[KeyCode.Tab=2]="Tab",KeyCode[KeyCode.Enter=3]="Enter",KeyCode[KeyCode.Shift=4]="Shift",KeyCode[KeyCode.Ctrl=5]="Ctrl",KeyCode[KeyCode.Alt=6]="Alt",KeyCode[KeyCode.PauseBreak=7]="PauseBreak",KeyCode[KeyCode.CapsLock=8]="CapsLock",KeyCode[KeyCode.Escape=9]="Escape",KeyCode[KeyCode.Space=10]="Space",KeyCode[KeyCode.PageUp=11]="PageUp",KeyCode[KeyCode.PageDown=12]="PageDown",KeyCode[KeyCode.End=13]="End",KeyCode[KeyCode.Home=14]="Home",KeyCode[KeyCode.LeftArrow=15]="LeftArrow",KeyCode[KeyCode.UpArrow=16]="UpArrow",KeyCode[KeyCode.RightArrow=17]="RightArrow",KeyCode[KeyCode.DownArrow=18]="DownArrow",KeyCode[KeyCode.Insert=19]="Insert",KeyCode[KeyCode.Delete=20]="Delete",KeyCode[KeyCode.Digit0=21]="Digit0",KeyCode[KeyCode.Digit1=22]="Digit1",KeyCode[KeyCode.Digit2=23]="Digit2",KeyCode[KeyCode.Digit3=24]="Digit3",KeyCode[KeyCode.Digit4=25]="Digit4",KeyCode[KeyCode.Digit5=26]="Digit5",KeyCode[KeyCode.Digit6=27]="Digit6",KeyCode[KeyCode.Digit7=28]="Digit7",KeyCode[KeyCode.Digit8=29]="Digit8",KeyCode[KeyCode.Digit9=30]="Digit9",KeyCode[KeyCode.KeyA=31]="KeyA",KeyCode[KeyCode.KeyB=32]="KeyB",KeyCode[KeyCode.KeyC=33]="KeyC",KeyCode[KeyCode.KeyD=34]="KeyD",KeyCode[KeyCode.KeyE=35]="KeyE",KeyCode[KeyCode.KeyF=36]="KeyF",KeyCode[KeyCode.KeyG=37]="KeyG",KeyCode[KeyCode.KeyH=38]="KeyH",KeyCode[KeyCode.KeyI=39]="KeyI",KeyCode[KeyCode.KeyJ=40]="KeyJ",KeyCode[KeyCode.KeyK=41]="KeyK",KeyCode[KeyCode.KeyL=42]="KeyL",KeyCode[KeyCode.KeyM=43]="KeyM",KeyCode[KeyCode.KeyN=44]="KeyN",KeyCode[KeyCode.KeyO=45]="KeyO",KeyCode[KeyCode.KeyP=46]="KeyP",KeyCode[KeyCode.KeyQ=47]="KeyQ",KeyCode[KeyCode.KeyR=48]="KeyR",KeyCode[KeyCode.KeyS=49]="KeyS",KeyCode[KeyCode.KeyT=50]="KeyT",KeyCode[KeyCode.KeyU=51]="KeyU",KeyCode[KeyCode.KeyV=52]="KeyV",KeyCode[KeyCode.KeyW=53]="KeyW",KeyCode[KeyCode.KeyX=54]="KeyX",KeyCode[KeyCode.KeyY=55]="KeyY",KeyCode[KeyCode.KeyZ=56]="KeyZ",KeyCode[KeyCode.Meta=57]="Meta",KeyCode[KeyCode.ContextMenu=58]="ContextMenu",KeyCode[KeyCode.F1=59]="F1",KeyCode[KeyCode.F2=60]="F2",KeyCode[KeyCode.F3=61]="F3",KeyCode[KeyCode.F4=62]="F4",KeyCode[KeyCode.F5=63]="F5",KeyCode[KeyCode.F6=64]="F6",KeyCode[KeyCode.F7=65]="F7",KeyCode[KeyCode.F8=66]="F8",KeyCode[KeyCode.F9=67]="F9",KeyCode[KeyCode.F10=68]="F10",KeyCode[KeyCode.F11=69]="F11",KeyCode[KeyCode.F12=70]="F12",KeyCode[KeyCode.F13=71]="F13",KeyCode[KeyCode.F14=72]="F14",KeyCode[KeyCode.F15=73]="F15",KeyCode[KeyCode.F16=74]="F16",KeyCode[KeyCode.F17=75]="F17",KeyCode[KeyCode.F18=76]="F18",KeyCode[KeyCode.F19=77]="F19",KeyCode[KeyCode.F20=78]="F20",KeyCode[KeyCode.F21=79]="F21",KeyCode[KeyCode.F22=80]="F22",KeyCode[KeyCode.F23=81]="F23",KeyCode[KeyCode.F24=82]="F24",KeyCode[KeyCode.NumLock=83]="NumLock",KeyCode[KeyCode.ScrollLock=84]="ScrollLock",KeyCode[KeyCode.Semicolon=85]="Semicolon",KeyCode[KeyCode.Equal=86]="Equal",KeyCode[KeyCode.Comma=87]="Comma",KeyCode[KeyCode.Minus=88]="Minus",KeyCode[KeyCode.Period=89]="Period",KeyCode[KeyCode.Slash=90]="Slash",KeyCode[KeyCode.Backquote=91]="Backquote",KeyCode[KeyCode.BracketLeft=92]="BracketLeft",KeyCode[KeyCode.Backslash=93]="Backslash",KeyCode[KeyCode.BracketRight=94]="BracketRight",KeyCode[KeyCode.Quote=95]="Quote",KeyCode[KeyCode.OEM_8=96]="OEM_8",KeyCode[KeyCode.IntlBackslash=97]="IntlBackslash",KeyCode[KeyCode.Numpad0=98]="Numpad0",KeyCode[KeyCode.Numpad1=99]="Numpad1",KeyCode[KeyCode.Numpad2=100]="Numpad2",KeyCode[KeyCode.Numpad3=101]="Numpad3",KeyCode[KeyCode.Numpad4=102]="Numpad4",KeyCode[KeyCode.Numpad5=103]="Numpad5",KeyCode[KeyCode.Numpad6=104]="Numpad6",KeyCode[KeyCode.Numpad7=105]="Numpad7",KeyCode[KeyCode.Numpad8=106]="Numpad8",KeyCode[KeyCode.Numpad9=107]="Numpad9",KeyCode[KeyCode.NumpadMultiply=108]="NumpadMultiply",KeyCode[KeyCode.NumpadAdd=109]="NumpadAdd",KeyCode[KeyCode.NUMPAD_SEPARATOR=110]="NUMPAD_SEPARATOR",KeyCode[KeyCode.NumpadSubtract=111]="NumpadSubtract",KeyCode[KeyCode.NumpadDecimal=112]="NumpadDecimal",KeyCode[KeyCode.NumpadDivide=113]="NumpadDivide",KeyCode[KeyCode.KEY_IN_COMPOSITION=114]="KEY_IN_COMPOSITION",KeyCode[KeyCode.ABNT_C1=115]="ABNT_C1",KeyCode[KeyCode.ABNT_C2=116]="ABNT_C2",KeyCode[KeyCode.AudioVolumeMute=117]="AudioVolumeMute",KeyCode[KeyCode.AudioVolumeUp=118]="AudioVolumeUp",KeyCode[KeyCode.AudioVolumeDown=119]="AudioVolumeDown",KeyCode[KeyCode.BrowserSearch=120]="BrowserSearch",KeyCode[KeyCode.BrowserHome=121]="BrowserHome",KeyCode[KeyCode.BrowserBack=122]="BrowserBack",KeyCode[KeyCode.BrowserForward=123]="BrowserForward",KeyCode[KeyCode.MediaTrackNext=124]="MediaTrackNext",KeyCode[KeyCode.MediaTrackPrevious=125]="MediaTrackPrevious",KeyCode[KeyCode.MediaStop=126]="MediaStop",KeyCode[KeyCode.MediaPlayPause=127]="MediaPlayPause",KeyCode[KeyCode.LaunchMediaPlayer=128]="LaunchMediaPlayer",KeyCode[KeyCode.LaunchMail=129]="LaunchMail",KeyCode[KeyCode.LaunchApp2=130]="LaunchApp2",KeyCode[KeyCode.Clear=131]="Clear",KeyCode[KeyCode.MAX_VALUE=132]="MAX_VALUE"}(KeyCode||(KeyCode={})),function(MarkerSeverity){MarkerSeverity[MarkerSeverity.Hint=1]="Hint",MarkerSeverity[MarkerSeverity.Info=2]="Info",MarkerSeverity[MarkerSeverity.Warning=4]="Warning",MarkerSeverity[MarkerSeverity.Error=8]="Error"}(MarkerSeverity||(MarkerSeverity={})),function(MarkerTag){MarkerTag[MarkerTag.Unnecessary=1]="Unnecessary",MarkerTag[MarkerTag.Deprecated=2]="Deprecated"}(MarkerTag||(MarkerTag={})),function(MinimapPosition){MinimapPosition[MinimapPosition.Inline=1]="Inline",MinimapPosition[MinimapPosition.Gutter=2]="Gutter"}(MinimapPosition||(MinimapPosition={})),function(MouseTargetType){MouseTargetType[MouseTargetType.UNKNOWN=0]="UNKNOWN",MouseTargetType[MouseTargetType.TEXTAREA=1]="TEXTAREA",MouseTargetType[MouseTargetType.GUTTER_GLYPH_MARGIN=2]="GUTTER_GLYPH_MARGIN",MouseTargetType[MouseTargetType.GUTTER_LINE_NUMBERS=3]="GUTTER_LINE_NUMBERS",MouseTargetType[MouseTargetType.GUTTER_LINE_DECORATIONS=4]="GUTTER_LINE_DECORATIONS",MouseTargetType[MouseTargetType.GUTTER_VIEW_ZONE=5]="GUTTER_VIEW_ZONE",MouseTargetType[MouseTargetType.CONTENT_TEXT=6]="CONTENT_TEXT",MouseTargetType[MouseTargetType.CONTENT_EMPTY=7]="CONTENT_EMPTY",MouseTargetType[MouseTargetType.CONTENT_VIEW_ZONE=8]="CONTENT_VIEW_ZONE",MouseTargetType[MouseTargetType.CONTENT_WIDGET=9]="CONTENT_WIDGET",MouseTargetType[MouseTargetType.OVERVIEW_RULER=10]="OVERVIEW_RULER",MouseTargetType[MouseTargetType.SCROLLBAR=11]="SCROLLBAR",MouseTargetType[MouseTargetType.OVERLAY_WIDGET=12]="OVERLAY_WIDGET",MouseTargetType[MouseTargetType.OUTSIDE_EDITOR=13]="OUTSIDE_EDITOR"}(MouseTargetType||(MouseTargetType={})),function(OverlayWidgetPositionPreference){OverlayWidgetPositionPreference[OverlayWidgetPositionPreference.TOP_RIGHT_CORNER=0]="TOP_RIGHT_CORNER",OverlayWidgetPositionPreference[OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER=1]="BOTTOM_RIGHT_CORNER",OverlayWidgetPositionPreference[OverlayWidgetPositionPreference.TOP_CENTER=2]="TOP_CENTER"}(OverlayWidgetPositionPreference||(OverlayWidgetPositionPreference={})),function(OverviewRulerLane){OverviewRulerLane[OverviewRulerLane.Left=1]="Left",OverviewRulerLane[OverviewRulerLane.Center=2]="Center",OverviewRulerLane[OverviewRulerLane.Right=4]="Right",OverviewRulerLane[OverviewRulerLane.Full=7]="Full"}(OverviewRulerLane||(OverviewRulerLane={})),function(PositionAffinity){PositionAffinity[PositionAffinity.Left=0]="Left",PositionAffinity[PositionAffinity.Right=1]="Right",PositionAffinity[PositionAffinity.None=2]="None",PositionAffinity[PositionAffinity.LeftOfInjectedText=3]="LeftOfInjectedText",PositionAffinity[PositionAffinity.RightOfInjectedText=4]="RightOfInjectedText"}(PositionAffinity||(PositionAffinity={})),function(RenderLineNumbersType){RenderLineNumbersType[RenderLineNumbersType.Off=0]="Off",RenderLineNumbersType[RenderLineNumbersType.On=1]="On",RenderLineNumbersType[RenderLineNumbersType.Relative=2]="Relative",RenderLineNumbersType[RenderLineNumbersType.Interval=3]="Interval",RenderLineNumbersType[RenderLineNumbersType.Custom=4]="Custom"}(RenderLineNumbersType||(RenderLineNumbersType={})),function(RenderMinimap){RenderMinimap[RenderMinimap.None=0]="None",RenderMinimap[RenderMinimap.Text=1]="Text",RenderMinimap[RenderMinimap.Blocks=2]="Blocks"}(RenderMinimap||(RenderMinimap={})),function(ScrollType){ScrollType[ScrollType.Smooth=0]="Smooth",ScrollType[ScrollType.Immediate=1]="Immediate"}(ScrollType||(ScrollType={})),function(ScrollbarVisibility){ScrollbarVisibility[ScrollbarVisibility.Auto=1]="Auto",ScrollbarVisibility[ScrollbarVisibility.Hidden=2]="Hidden",ScrollbarVisibility[ScrollbarVisibility.Visible=3]="Visible"}(ScrollbarVisibility||(ScrollbarVisibility={})),function(SelectionDirection){SelectionDirection[SelectionDirection.LTR=0]="LTR",SelectionDirection[SelectionDirection.RTL=1]="RTL"}(SelectionDirection||(SelectionDirection={})),function(SignatureHelpTriggerKind){SignatureHelpTriggerKind[SignatureHelpTriggerKind.Invoke=1]="Invoke",SignatureHelpTriggerKind[SignatureHelpTriggerKind.TriggerCharacter=2]="TriggerCharacter",SignatureHelpTriggerKind[SignatureHelpTriggerKind.ContentChange=3]="ContentChange"}(standaloneEnums_SignatureHelpTriggerKind||(standaloneEnums_SignatureHelpTriggerKind={})),function(SymbolKind){SymbolKind[SymbolKind.File=0]="File",SymbolKind[SymbolKind.Module=1]="Module",SymbolKind[SymbolKind.Namespace=2]="Namespace",SymbolKind[SymbolKind.Package=3]="Package",SymbolKind[SymbolKind.Class=4]="Class",SymbolKind[SymbolKind.Method=5]="Method",SymbolKind[SymbolKind.Property=6]="Property",SymbolKind[SymbolKind.Field=7]="Field",SymbolKind[SymbolKind.Constructor=8]="Constructor",SymbolKind[SymbolKind.Enum=9]="Enum",SymbolKind[SymbolKind.Interface=10]="Interface",SymbolKind[SymbolKind.Function=11]="Function",SymbolKind[SymbolKind.Variable=12]="Variable",SymbolKind[SymbolKind.Constant=13]="Constant",SymbolKind[SymbolKind.String=14]="String",SymbolKind[SymbolKind.Number=15]="Number",SymbolKind[SymbolKind.Boolean=16]="Boolean",SymbolKind[SymbolKind.Array=17]="Array",SymbolKind[SymbolKind.Object=18]="Object",SymbolKind[SymbolKind.Key=19]="Key",SymbolKind[SymbolKind.Null=20]="Null",SymbolKind[SymbolKind.EnumMember=21]="EnumMember",SymbolKind[SymbolKind.Struct=22]="Struct",SymbolKind[SymbolKind.Event=23]="Event",SymbolKind[SymbolKind.Operator=24]="Operator",SymbolKind[SymbolKind.TypeParameter=25]="TypeParameter"}(SymbolKind||(SymbolKind={})),function(SymbolTag){SymbolTag[SymbolTag.Deprecated=1]="Deprecated"}(SymbolTag||(SymbolTag={})),function(TextEditorCursorBlinkingStyle){TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle.Hidden=0]="Hidden",TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle.Blink=1]="Blink",TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle.Smooth=2]="Smooth",TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle.Phase=3]="Phase",TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle.Expand=4]="Expand",TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle.Solid=5]="Solid"}(TextEditorCursorBlinkingStyle||(TextEditorCursorBlinkingStyle={})),function(TextEditorCursorStyle){TextEditorCursorStyle[TextEditorCursorStyle.Line=1]="Line",TextEditorCursorStyle[TextEditorCursorStyle.Block=2]="Block",TextEditorCursorStyle[TextEditorCursorStyle.Underline=3]="Underline",TextEditorCursorStyle[TextEditorCursorStyle.LineThin=4]="LineThin",TextEditorCursorStyle[TextEditorCursorStyle.BlockOutline=5]="BlockOutline",TextEditorCursorStyle[TextEditorCursorStyle.UnderlineThin=6]="UnderlineThin"}(TextEditorCursorStyle||(TextEditorCursorStyle={})),function(TrackedRangeStickiness){TrackedRangeStickiness[TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges=0]="AlwaysGrowsWhenTypingAtEdges",TrackedRangeStickiness[TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges=1]="NeverGrowsWhenTypingAtEdges",TrackedRangeStickiness[TrackedRangeStickiness.GrowsOnlyWhenTypingBefore=2]="GrowsOnlyWhenTypingBefore",TrackedRangeStickiness[TrackedRangeStickiness.GrowsOnlyWhenTypingAfter=3]="GrowsOnlyWhenTypingAfter"}(TrackedRangeStickiness||(TrackedRangeStickiness={})),function(WrappingIndent){WrappingIndent[WrappingIndent.None=0]="None",WrappingIndent[WrappingIndent.Same=1]="Same",WrappingIndent[WrappingIndent.Indent=2]="Indent",WrappingIndent[WrappingIndent.DeepIndent=3]="DeepIndent"}(WrappingIndent||(WrappingIndent={}));class KeyMod{static chord(firstPart,secondPart){return function KeyChord(firstPart,secondPart){return(firstPart|(65535&secondPart)<<16>>>0)>>>0}(firstPart,secondPart)}}KeyMod.CtrlCmd=2048,KeyMod.Shift=1024,KeyMod.Alt=512,KeyMod.WinCtrl=256;class WordCharacterClassifier extends CharacterClassifier{constructor(wordSeparators){super(0);for(let i=0,len=wordSeparators.length;i<len;i++)this.set(wordSeparators.charCodeAt(i),2);this.set(32,1),this.set(9,1)}}(function wordCharacterClassifier_once(computeFn){const cache={};return input=>(cache.hasOwnProperty(input)||(cache[input]=computeFn(input)),cache[input])})((input=>new WordCharacterClassifier(input)));var model_OverviewRulerLane,model_GlyphMarginLane,model_MinimapPosition,model_InjectedTextCursorStops;!function(OverviewRulerLane){OverviewRulerLane[OverviewRulerLane.Left=1]="Left",OverviewRulerLane[OverviewRulerLane.Center=2]="Center",OverviewRulerLane[OverviewRulerLane.Right=4]="Right",OverviewRulerLane[OverviewRulerLane.Full=7]="Full"}(model_OverviewRulerLane||(model_OverviewRulerLane={})),function(GlyphMarginLane){GlyphMarginLane[GlyphMarginLane.Left=1]="Left",GlyphMarginLane[GlyphMarginLane.Right=2]="Right"}(model_GlyphMarginLane||(model_GlyphMarginLane={})),function(MinimapPosition){MinimapPosition[MinimapPosition.Inline=1]="Inline",MinimapPosition[MinimapPosition.Gutter=2]="Gutter"}(model_MinimapPosition||(model_MinimapPosition={})),function(InjectedTextCursorStops){InjectedTextCursorStops[InjectedTextCursorStops.Both=0]="Both",InjectedTextCursorStops[InjectedTextCursorStops.Right=1]="Right",InjectedTextCursorStops[InjectedTextCursorStops.Left=2]="Left",InjectedTextCursorStops[InjectedTextCursorStops.None=3]="None"}(model_InjectedTextCursorStops||(model_InjectedTextCursorStops={}));function isValidMatch(wordSeparators,text,textLength,matchStartIndex,matchLength){return function leftIsWordBounday(wordSeparators,text,textLength,matchStartIndex,matchLength){if(0===matchStartIndex)return!0;const charBefore=text.charCodeAt(matchStartIndex-1);if(0!==wordSeparators.get(charBefore))return!0;if(13===charBefore||10===charBefore)return!0;if(matchLength>0){const firstCharInMatch=text.charCodeAt(matchStartIndex);if(0!==wordSeparators.get(firstCharInMatch))return!0}return!1}(wordSeparators,text,0,matchStartIndex,matchLength)&&function rightIsWordBounday(wordSeparators,text,textLength,matchStartIndex,matchLength){if(matchStartIndex+matchLength===textLength)return!0;const charAfter=text.charCodeAt(matchStartIndex+matchLength);if(0!==wordSeparators.get(charAfter))return!0;if(13===charAfter||10===charAfter)return!0;if(matchLength>0){const lastCharInMatch=text.charCodeAt(matchStartIndex+matchLength-1);if(0!==wordSeparators.get(lastCharInMatch))return!0}return!1}(wordSeparators,text,textLength,matchStartIndex,matchLength)}class Searcher{constructor(wordSeparators,searchRegex){this._wordSeparators=wordSeparators,this._searchRegex=searchRegex,this._prevMatchStartIndex=-1,this._prevMatchLength=0}reset(lastIndex){this._searchRegex.lastIndex=lastIndex,this._prevMatchStartIndex=-1,this._prevMatchLength=0}next(text){const textLength=text.length;let m;do{if(this._prevMatchStartIndex+this._prevMatchLength===textLength)return null;if(m=this._searchRegex.exec(text),!m)return null;const matchStartIndex=m.index,matchLength=m[0].length;if(matchStartIndex===this._prevMatchStartIndex&&matchLength===this._prevMatchLength){if(0===matchLength){getNextCodePoint(text,textLength,this._searchRegex.lastIndex)>65535?this._searchRegex.lastIndex+=2:this._searchRegex.lastIndex+=1;continue}return null}if(this._prevMatchStartIndex=matchStartIndex,this._prevMatchLength=matchLength,!this._wordSeparators||isValidMatch(this._wordSeparators,text,textLength,matchStartIndex,matchLength))return m}while(m);return null}}function assertNever(value,message="Unreachable"){throw new Error(message)}function assertFn(condition){condition()||(condition(),onUnexpectedError(new BugIndicatingError("Assertion Failed")))}function checkAdjacentItems(items,predicate){let i=0;for(;i<items.length-1;){if(!predicate(items[i],items[i+1]))return!1;i++}return!0}class UnicodeTextModelHighlighter{static computeUnicodeHighlights(model,options,range){const startLine=range?range.startLineNumber:1,endLine=range?range.endLineNumber:model.getLineCount(),codePointHighlighter=new CodePointHighlighter(options),candidates=codePointHighlighter.getCandidateCodePoints();let regex;regex="allNonBasicAscii"===candidates?new RegExp("[^\\t\\n\\r\\x20-\\x7E]","g"):new RegExp(`${function buildRegExpCharClassExpr(codePoints,flags){return`[${escapeRegExpCharacters(codePoints.map((i=>String.fromCodePoint(i))).join(""))}]`}(Array.from(candidates))}`,"g");const searcher=new Searcher(null,regex),ranges=[];let m,hasMore=!1,ambiguousCharacterCount=0,invisibleCharacterCount=0,nonBasicAsciiCharacterCount=0;forLoop:for(let lineNumber=startLine,lineCount=endLine;lineNumber<=lineCount;lineNumber++){const lineContent=model.getLineContent(lineNumber),lineLength=lineContent.length;searcher.reset(0);do{if(m=searcher.next(lineContent),m){let startIndex=m.index,endIndex=m.index+m[0].length;if(startIndex>0){isHighSurrogate(lineContent.charCodeAt(startIndex-1))&&startIndex--}if(endIndex+1<lineLength){isHighSurrogate(lineContent.charCodeAt(endIndex-1))&&endIndex++}const str=lineContent.substring(startIndex,endIndex);let word=getWordAtText(startIndex+1,DEFAULT_WORD_REGEXP,lineContent,0);word&&word.endColumn<=startIndex+1&&(word=null);const highlightReason=codePointHighlighter.shouldHighlightNonBasicASCII(str,word?word.word:null);if(0!==highlightReason){3===highlightReason?ambiguousCharacterCount++:2===highlightReason?invisibleCharacterCount++:1===highlightReason?nonBasicAsciiCharacterCount++:assertNever();const MAX_RESULT_LENGTH=1e3;if(ranges.length>=MAX_RESULT_LENGTH){hasMore=!0;break forLoop}ranges.push(new range_Range(lineNumber,startIndex+1,lineNumber,endIndex+1))}}}while(m)}return{ranges,hasMore,ambiguousCharacterCount,invisibleCharacterCount,nonBasicAsciiCharacterCount}}static computeUnicodeHighlightReason(char,options){const codePointHighlighter=new CodePointHighlighter(options);switch(codePointHighlighter.shouldHighlightNonBasicASCII(char,null)){case 0:return null;case 2:return{kind:1};case 3:{const codePoint=char.codePointAt(0),primaryConfusable=codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint),notAmbiguousInLocales=AmbiguousCharacters.getLocales().filter((l=>!AmbiguousCharacters.getInstance(new Set([...options.allowedLocales,l])).isAmbiguous(codePoint)));return{kind:0,confusableWith:String.fromCodePoint(primaryConfusable),notAmbiguousInLocales}}case 1:return{kind:2}}}}class CodePointHighlighter{constructor(options){this.options=options,this.allowedCodePoints=new Set(options.allowedCodePoints),this.ambiguousCharacters=AmbiguousCharacters.getInstance(new Set(options.allowedLocales))}getCandidateCodePoints(){if(this.options.nonBasicASCII)return"allNonBasicAscii";const set=new Set;if(this.options.invisibleCharacters)for(const cp of InvisibleCharacters.codePoints)isAllowedInvisibleCharacter(String.fromCodePoint(cp))||set.add(cp);if(this.options.ambiguousCharacters)for(const cp of this.ambiguousCharacters.getConfusableCodePoints())set.add(cp);for(const cp of this.allowedCodePoints)set.delete(cp);return set}shouldHighlightNonBasicASCII(character,wordContext){const codePoint=character.codePointAt(0);if(this.allowedCodePoints.has(codePoint))return 0;if(this.options.nonBasicASCII)return 1;let hasBasicASCIICharacters=!1,hasNonConfusableNonBasicAsciiCharacter=!1;if(wordContext)for(const char of wordContext){const codePoint=char.codePointAt(0),isBasicASCII=(str=char,IS_BASIC_ASCII.test(str));hasBasicASCIICharacters=hasBasicASCIICharacters||isBasicASCII,isBasicASCII||this.ambiguousCharacters.isAmbiguous(codePoint)||InvisibleCharacters.isInvisibleCharacter(codePoint)||(hasNonConfusableNonBasicAsciiCharacter=!0)}var str;return!hasBasicASCIICharacters&&hasNonConfusableNonBasicAsciiCharacter?0:this.options.invisibleCharacters&&!isAllowedInvisibleCharacter(character)&&InvisibleCharacters.isInvisibleCharacter(codePoint)?2:this.options.ambiguousCharacters&&this.ambiguousCharacters.isAmbiguous(codePoint)?3:0}}function isAllowedInvisibleCharacter(character){return" "===character||"\n"===character||"\t"===character}class LineRange{static fromRange(range){return new LineRange(range.startLineNumber,range.endLineNumber)}static joinMany(lineRanges){if(0===lineRanges.length)return[];let result=lineRanges[0];for(let i=1;i<lineRanges.length;i++)result=this.join(result,lineRanges[i]);return result}static join(lineRanges1,lineRanges2){if(0===lineRanges1.length)return lineRanges2;if(0===lineRanges2.length)return lineRanges1;const result=[];let i1=0,i2=0,current=null;for(;i1<lineRanges1.length||i2<lineRanges2.length;){let next=null;if(i1<lineRanges1.length&&i2<lineRanges2.length){const lineRange1=lineRanges1[i1],lineRange2=lineRanges2[i2];lineRange1.startLineNumber<lineRange2.startLineNumber?(next=lineRange1,i1++):(next=lineRange2,i2++)}else i1<lineRanges1.length?(next=lineRanges1[i1],i1++):(next=lineRanges2[i2],i2++);null===current?current=next:current.endLineNumberExclusive>=next.startLineNumber?current=new LineRange(current.startLineNumber,Math.max(current.endLineNumberExclusive,next.endLineNumberExclusive)):(result.push(current),current=next)}return null!==current&&result.push(current),result}static ofLength(startLineNumber,length){return new LineRange(startLineNumber,startLineNumber+length)}constructor(startLineNumber,endLineNumberExclusive){if(startLineNumber>endLineNumberExclusive)throw new BugIndicatingError(`startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`);this.startLineNumber=startLineNumber,this.endLineNumberExclusive=endLineNumberExclusive}contains(lineNumber){return this.startLineNumber<=lineNumber&&lineNumber<this.endLineNumberExclusive}get isEmpty(){return this.startLineNumber===this.endLineNumberExclusive}delta(offset){return new LineRange(this.startLineNumber+offset,this.endLineNumberExclusive+offset)}get length(){return this.endLineNumberExclusive-this.startLineNumber}join(other){return new LineRange(Math.min(this.startLineNumber,other.startLineNumber),Math.max(this.endLineNumberExclusive,other.endLineNumberExclusive))}toString(){return`[${this.startLineNumber},${this.endLineNumberExclusive})`}intersect(other){const startLineNumber=Math.max(this.startLineNumber,other.startLineNumber),endLineNumberExclusive=Math.min(this.endLineNumberExclusive,other.endLineNumberExclusive);if(startLineNumber<=endLineNumberExclusive)return new LineRange(startLineNumber,endLineNumberExclusive)}intersectsStrict(other){return this.startLineNumber<other.endLineNumberExclusive&&other.startLineNumber<this.endLineNumberExclusive}overlapOrTouch(other){return this.startLineNumber<=other.endLineNumberExclusive&&other.startLineNumber<=this.endLineNumberExclusive}equals(b){return this.startLineNumber===b.startLineNumber&&this.endLineNumberExclusive===b.endLineNumberExclusive}toInclusiveRange(){return this.isEmpty?null:new range_Range(this.startLineNumber,1,this.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER)}toExclusiveRange(){return new range_Range(this.startLineNumber,1,this.endLineNumberExclusive,1)}}class LinesDiff{constructor(changes,hitTimeout){this.changes=changes,this.hitTimeout=hitTimeout}}class LineRangeMapping{static inverse(mapping,originalLineCount,modifiedLineCount){const result=[];let lastOriginalEndLineNumber=1,lastModifiedEndLineNumber=1;for(const m of mapping){const r=new LineRangeMapping(new LineRange(lastOriginalEndLineNumber,m.originalRange.startLineNumber),new LineRange(lastModifiedEndLineNumber,m.modifiedRange.startLineNumber),void 0);r.modifiedRange.isEmpty||result.push(r),lastOriginalEndLineNumber=m.originalRange.endLineNumberExclusive,lastModifiedEndLineNumber=m.modifiedRange.endLineNumberExclusive}const r=new LineRangeMapping(new LineRange(lastOriginalEndLineNumber,originalLineCount+1),new LineRange(lastModifiedEndLineNumber,modifiedLineCount+1),void 0);return r.modifiedRange.isEmpty||result.push(r),result}constructor(originalRange,modifiedRange,innerChanges){this.originalRange=originalRange,this.modifiedRange=modifiedRange,this.innerChanges=innerChanges}toString(){return`{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`}get changedLineCount(){return Math.max(this.originalRange.length,this.modifiedRange.length)}}class RangeMapping{constructor(originalRange,modifiedRange){this.originalRange=originalRange,this.modifiedRange=modifiedRange}toString(){return`{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`}}function computeDiff(originalSequence,modifiedSequence,continueProcessingPredicate,pretty){return new LcsDiff(originalSequence,modifiedSequence,continueProcessingPredicate).ComputeDiff(pretty)}class LineSequence{constructor(lines){const startColumns=[],endColumns=[];for(let i=0,length=lines.length;i<length;i++)startColumns[i]=getFirstNonBlankColumn(lines[i],1),endColumns[i]=getLastNonBlankColumn(lines[i],1);this.lines=lines,this._startColumns=startColumns,this._endColumns=endColumns}getElements(){const elements=[];for(let i=0,len=this.lines.length;i<len;i++)elements[i]=this.lines[i].substring(this._startColumns[i]-1,this._endColumns[i]-1);return elements}getStrictElement(index){return this.lines[index]}getStartLineNumber(i){return i+1}getEndLineNumber(i){return i+1}createCharSequence(shouldIgnoreTrimWhitespace,startIndex,endIndex){const charCodes=[],lineNumbers=[],columns=[];let len=0;for(let index=startIndex;index<=endIndex;index++){const lineContent=this.lines[index],startColumn=shouldIgnoreTrimWhitespace?this._startColumns[index]:1,endColumn=shouldIgnoreTrimWhitespace?this._endColumns[index]:lineContent.length+1;for(let col=startColumn;col<endColumn;col++)charCodes[len]=lineContent.charCodeAt(col-1),lineNumbers[len]=index+1,columns[len]=col,len++;!shouldIgnoreTrimWhitespace&&index<endIndex&&(charCodes[len]=10,lineNumbers[len]=index+1,columns[len]=lineContent.length+1,len++)}return new CharSequence(charCodes,lineNumbers,columns)}}class CharSequence{constructor(charCodes,lineNumbers,columns){this._charCodes=charCodes,this._lineNumbers=lineNumbers,this._columns=columns}toString(){return"["+this._charCodes.map(((s,idx)=>(10===s?"\\n":String.fromCharCode(s))+`-(${this._lineNumbers[idx]},${this._columns[idx]})`)).join(", ")+"]"}_assertIndex(index,arr){if(index<0||index>=arr.length)throw new Error("Illegal index")}getElements(){return this._charCodes}getStartLineNumber(i){return i>0&&i===this._lineNumbers.length?this.getEndLineNumber(i-1):(this._assertIndex(i,this._lineNumbers),this._lineNumbers[i])}getEndLineNumber(i){return-1===i?this.getStartLineNumber(i+1):(this._assertIndex(i,this._lineNumbers),10===this._charCodes[i]?this._lineNumbers[i]+1:this._lineNumbers[i])}getStartColumn(i){return i>0&&i===this._columns.length?this.getEndColumn(i-1):(this._assertIndex(i,this._columns),this._columns[i])}getEndColumn(i){return-1===i?this.getStartColumn(i+1):(this._assertIndex(i,this._columns),10===this._charCodes[i]?1:this._columns[i]+1)}}class CharChange{constructor(originalStartLineNumber,originalStartColumn,originalEndLineNumber,originalEndColumn,modifiedStartLineNumber,modifiedStartColumn,modifiedEndLineNumber,modifiedEndColumn){this.originalStartLineNumber=originalStartLineNumber,this.originalStartColumn=originalStartColumn,this.originalEndLineNumber=originalEndLineNumber,this.originalEndColumn=originalEndColumn,this.modifiedStartLineNumber=modifiedStartLineNumber,this.modifiedStartColumn=modifiedStartColumn,this.modifiedEndLineNumber=modifiedEndLineNumber,this.modifiedEndColumn=modifiedEndColumn}static createFromDiffChange(diffChange,originalCharSequence,modifiedCharSequence){const originalStartLineNumber=originalCharSequence.getStartLineNumber(diffChange.originalStart),originalStartColumn=originalCharSequence.getStartColumn(diffChange.originalStart),originalEndLineNumber=originalCharSequence.getEndLineNumber(diffChange.originalStart+diffChange.originalLength-1),originalEndColumn=originalCharSequence.getEndColumn(diffChange.originalStart+diffChange.originalLength-1),modifiedStartLineNumber=modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart),modifiedStartColumn=modifiedCharSequence.getStartColumn(diffChange.modifiedStart),modifiedEndLineNumber=modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart+diffChange.modifiedLength-1),modifiedEndColumn=modifiedCharSequence.getEndColumn(diffChange.modifiedStart+diffChange.modifiedLength-1);return new CharChange(originalStartLineNumber,originalStartColumn,originalEndLineNumber,originalEndColumn,modifiedStartLineNumber,modifiedStartColumn,modifiedEndLineNumber,modifiedEndColumn)}}class LineChange{constructor(originalStartLineNumber,originalEndLineNumber,modifiedStartLineNumber,modifiedEndLineNumber,charChanges){this.originalStartLineNumber=originalStartLineNumber,this.originalEndLineNumber=originalEndLineNumber,this.modifiedStartLineNumber=modifiedStartLineNumber,this.modifiedEndLineNumber=modifiedEndLineNumber,this.charChanges=charChanges}static createFromDiffResult(shouldIgnoreTrimWhitespace,diffChange,originalLineSequence,modifiedLineSequence,continueCharDiff,shouldComputeCharChanges,shouldPostProcessCharChanges){let originalStartLineNumber,originalEndLineNumber,modifiedStartLineNumber,modifiedEndLineNumber,charChanges;if(0===diffChange.originalLength?(originalStartLineNumber=originalLineSequence.getStartLineNumber(diffChange.originalStart)-1,originalEndLineNumber=0):(originalStartLineNumber=originalLineSequence.getStartLineNumber(diffChange.originalStart),originalEndLineNumber=originalLineSequence.getEndLineNumber(diffChange.originalStart+diffChange.originalLength-1)),0===diffChange.modifiedLength?(modifiedStartLineNumber=modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart)-1,modifiedEndLineNumber=0):(modifiedStartLineNumber=modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart),modifiedEndLineNumber=modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart+diffChange.modifiedLength-1)),shouldComputeCharChanges&&diffChange.originalLength>0&&diffChange.originalLength<20&&diffChange.modifiedLength>0&&diffChange.modifiedLength<20&&continueCharDiff()){const originalCharSequence=originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace,diffChange.originalStart,diffChange.originalStart+diffChange.originalLength-1),modifiedCharSequence=modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace,diffChange.modifiedStart,diffChange.modifiedStart+diffChange.modifiedLength-1);if(originalCharSequence.getElements().length>0&&modifiedCharSequence.getElements().length>0){let rawChanges=computeDiff(originalCharSequence,modifiedCharSequence,continueCharDiff,!0).changes;shouldPostProcessCharChanges&&(rawChanges=function postProcessCharChanges(rawChanges){if(rawChanges.length<=1)return rawChanges;const result=[rawChanges[0]];let prevChange=result[0];for(let i=1,len=rawChanges.length;i<len;i++){const currChange=rawChanges[i],originalMatchingLength=currChange.originalStart-(prevChange.originalStart+prevChange.originalLength),modifiedMatchingLength=currChange.modifiedStart-(prevChange.modifiedStart+prevChange.modifiedLength);Math.min(originalMatchingLength,modifiedMatchingLength)<3?(prevChange.originalLength=currChange.originalStart+currChange.originalLength-prevChange.originalStart,prevChange.modifiedLength=currChange.modifiedStart+currChange.modifiedLength-prevChange.modifiedStart):(result.push(currChange),prevChange=currChange)}return result}(rawChanges)),charChanges=[];for(let i=0,length=rawChanges.length;i<length;i++)charChanges.push(CharChange.createFromDiffChange(rawChanges[i],originalCharSequence,modifiedCharSequence))}}return new LineChange(originalStartLineNumber,originalEndLineNumber,modifiedStartLineNumber,modifiedEndLineNumber,charChanges)}}class DiffComputer{constructor(originalLines,modifiedLines,opts){this.shouldComputeCharChanges=opts.shouldComputeCharChanges,this.shouldPostProcessCharChanges=opts.shouldPostProcessCharChanges,this.shouldIgnoreTrimWhitespace=opts.shouldIgnoreTrimWhitespace,this.shouldMakePrettyDiff=opts.shouldMakePrettyDiff,this.originalLines=originalLines,this.modifiedLines=modifiedLines,this.original=new LineSequence(originalLines),this.modified=new LineSequence(modifiedLines),this.continueLineDiff=createContinueProcessingPredicate(opts.maxComputationTime),this.continueCharDiff=createContinueProcessingPredicate(0===opts.maxComputationTime?0:Math.min(opts.maxComputationTime,5e3))}computeDiff(){if(1===this.original.lines.length&&0===this.original.lines[0].length)return 1===this.modified.lines.length&&0===this.modified.lines[0].length?{quitEarly:!1,changes:[]}:{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:1,modifiedStartLineNumber:1,modifiedEndLineNumber:this.modified.lines.length,charChanges:void 0}]};if(1===this.modified.lines.length&&0===this.modified.lines[0].length)return{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:this.original.lines.length,modifiedStartLineNumber:1,modifiedEndLineNumber:1,charChanges:void 0}]};const diffResult=computeDiff(this.original,this.modified,this.continueLineDiff,this.shouldMakePrettyDiff),rawChanges=diffResult.changes,quitEarly=diffResult.quitEarly;if(this.shouldIgnoreTrimWhitespace){const lineChanges=[];for(let i=0,length=rawChanges.length;i<length;i++)lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace,rawChanges[i],this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges));return{quitEarly,changes:lineChanges}}const result=[];let originalLineIndex=0,modifiedLineIndex=0;for(let i=-1,len=rawChanges.length;i<len;i++){const nextChange=i+1<len?rawChanges[i+1]:null,originalStop=nextChange?nextChange.originalStart:this.originalLines.length,modifiedStop=nextChange?nextChange.modifiedStart:this.modifiedLines.length;for(;originalLineIndex<originalStop&&modifiedLineIndex<modifiedStop;){const originalLine=this.originalLines[originalLineIndex],modifiedLine=this.modifiedLines[modifiedLineIndex];if(originalLine!==modifiedLine){{let originalStartColumn=getFirstNonBlankColumn(originalLine,1),modifiedStartColumn=getFirstNonBlankColumn(modifiedLine,1);for(;originalStartColumn>1&&modifiedStartColumn>1;){if(originalLine.charCodeAt(originalStartColumn-2)!==modifiedLine.charCodeAt(modifiedStartColumn-2))break;originalStartColumn--,modifiedStartColumn--}(originalStartColumn>1||modifiedStartColumn>1)&&this._pushTrimWhitespaceCharChange(result,originalLineIndex+1,1,originalStartColumn,modifiedLineIndex+1,1,modifiedStartColumn)}{let originalEndColumn=getLastNonBlankColumn(originalLine,1),modifiedEndColumn=getLastNonBlankColumn(modifiedLine,1);const originalMaxColumn=originalLine.length+1,modifiedMaxColumn=modifiedLine.length+1;for(;originalEndColumn<originalMaxColumn&&modifiedEndColumn<modifiedMaxColumn;){if(originalLine.charCodeAt(originalEndColumn-1)!==originalLine.charCodeAt(modifiedEndColumn-1))break;originalEndColumn++,modifiedEndColumn++}(originalEndColumn<originalMaxColumn||modifiedEndColumn<modifiedMaxColumn)&&this._pushTrimWhitespaceCharChange(result,originalLineIndex+1,originalEndColumn,originalMaxColumn,modifiedLineIndex+1,modifiedEndColumn,modifiedMaxColumn)}}originalLineIndex++,modifiedLineIndex++}nextChange&&(result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace,nextChange,this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges)),originalLineIndex+=nextChange.originalLength,modifiedLineIndex+=nextChange.modifiedLength)}return{quitEarly,changes:result}}_pushTrimWhitespaceCharChange(result,originalLineNumber,originalStartColumn,originalEndColumn,modifiedLineNumber,modifiedStartColumn,modifiedEndColumn){if(this._mergeTrimWhitespaceCharChange(result,originalLineNumber,originalStartColumn,originalEndColumn,modifiedLineNumber,modifiedStartColumn,modifiedEndColumn))return;let charChanges;this.shouldComputeCharChanges&&(charChanges=[new CharChange(originalLineNumber,originalStartColumn,originalLineNumber,originalEndColumn,modifiedLineNumber,modifiedStartColumn,modifiedLineNumber,modifiedEndColumn)]),result.push(new LineChange(originalLineNumber,originalLineNumber,modifiedLineNumber,modifiedLineNumber,charChanges))}_mergeTrimWhitespaceCharChange(result,originalLineNumber,originalStartColumn,originalEndColumn,modifiedLineNumber,modifiedStartColumn,modifiedEndColumn){const len=result.length;if(0===len)return!1;const prevChange=result[len-1];return 0!==prevChange.originalEndLineNumber&&0!==prevChange.modifiedEndLineNumber&&(prevChange.originalEndLineNumber===originalLineNumber&&prevChange.modifiedEndLineNumber===modifiedLineNumber?(this.shouldComputeCharChanges&&prevChange.charChanges&&prevChange.charChanges.push(new CharChange(originalLineNumber,originalStartColumn,originalLineNumber,originalEndColumn,modifiedLineNumber,modifiedStartColumn,modifiedLineNumber,modifiedEndColumn)),!0):prevChange.originalEndLineNumber+1===originalLineNumber&&prevChange.modifiedEndLineNumber+1===modifiedLineNumber&&(prevChange.originalEndLineNumber=originalLineNumber,prevChange.modifiedEndLineNumber=modifiedLineNumber,this.shouldComputeCharChanges&&prevChange.charChanges&&prevChange.charChanges.push(new CharChange(originalLineNumber,originalStartColumn,originalLineNumber,originalEndColumn,modifiedLineNumber,modifiedStartColumn,modifiedLineNumber,modifiedEndColumn)),!0))}}function getFirstNonBlankColumn(txt,defaultValue){const r=function firstNonWhitespaceIndex(str){for(let i=0,len=str.length;i<len;i++){const chCode=str.charCodeAt(i);if(32!==chCode&&9!==chCode)return i}return-1}(txt);return-1===r?defaultValue:r+1}function getLastNonBlankColumn(txt,defaultValue){const r=function lastNonWhitespaceIndex(str,startIndex=str.length-1){for(let i=startIndex;i>=0;i--){const chCode=str.charCodeAt(i);if(32!==chCode&&9!==chCode)return i}return-1}(txt);return-1===r?defaultValue:r+2}function createContinueProcessingPredicate(maximumRuntime){if(0===maximumRuntime)return()=>!0;const startTime=Date.now();return()=>Date.now()-startTime<maximumRuntime}class OffsetRange{static addRange(range,sortedRanges){let i=0;for(;i<sortedRanges.length&&sortedRanges[i].endExclusive<range.start;)i++;let j=i;for(;j<sortedRanges.length&&sortedRanges[j].start<=range.endExclusive;)j++;if(i===j)sortedRanges.splice(i,0,range);else{const start=Math.min(range.start,sortedRanges[i].start),end=Math.max(range.endExclusive,sortedRanges[j-1].endExclusive);sortedRanges.splice(i,j-i,new OffsetRange(start,end))}}static tryCreate(start,endExclusive){if(!(start>endExclusive))return new OffsetRange(start,endExclusive)}constructor(start,endExclusive){if(this.start=start,this.endExclusive=endExclusive,start>endExclusive)throw new BugIndicatingError(`Invalid range: ${this.toString()}`)}get isEmpty(){return this.start===this.endExclusive}delta(offset){return new OffsetRange(this.start+offset,this.endExclusive+offset)}get length(){return this.endExclusive-this.start}toString(){return`[${this.start}, ${this.endExclusive})`}equals(other){return this.start===other.start&&this.endExclusive===other.endExclusive}containsRange(other){return this.start<=other.start&&other.endExclusive<=this.endExclusive}join(other){return new OffsetRange(Math.min(this.start,other.start),Math.max(this.endExclusive,other.endExclusive))}intersect(other){const start=Math.max(this.start,other.start),end=Math.min(this.endExclusive,other.endExclusive);if(start<=end)return new OffsetRange(start,end)}}class DiffAlgorithmResult{static trivial(seq1,seq2){return new DiffAlgorithmResult([new SequenceDiff(new OffsetRange(0,seq1.length),new OffsetRange(0,seq2.length))],!1)}static trivialTimedOut(seq1,seq2){return new DiffAlgorithmResult([new SequenceDiff(new OffsetRange(0,seq1.length),new OffsetRange(0,seq2.length))],!0)}constructor(diffs,hitTimeout){this.diffs=diffs,this.hitTimeout=hitTimeout}}class SequenceDiff{constructor(seq1Range,seq2Range){this.seq1Range=seq1Range,this.seq2Range=seq2Range}reverse(){return new SequenceDiff(this.seq2Range,this.seq1Range)}toString(){return`${this.seq1Range} <-> ${this.seq2Range}`}join(other){return new SequenceDiff(this.seq1Range.join(other.seq1Range),this.seq2Range.join(other.seq2Range))}}class InfiniteTimeout{isValid(){return!0}}InfiniteTimeout.instance=new InfiniteTimeout;class DateTimeout{constructor(timeout){if(this.timeout=timeout,this.startTime=Date.now(),this.valid=!0,timeout<=0)throw new BugIndicatingError("timeout must be positive")}isValid(){return!(Date.now()-this.startTime<this.timeout)&&this.valid&&(this.valid=!1),this.valid}}class Array2D{constructor(width,height){this.width=width,this.height=height,this.array=[],this.array=new Array(width*height)}get(x,y){return this.array[x+y*this.width]}set(x,y,value){this.array[x+y*this.width]=value}}class DynamicProgrammingDiffing{compute(sequence1,sequence2,timeout=InfiniteTimeout.instance,equalityScore){if(0===sequence1.length||0===sequence2.length)return DiffAlgorithmResult.trivial(sequence1,sequence2);const lcsLengths=new Array2D(sequence1.length,sequence2.length),directions=new Array2D(sequence1.length,sequence2.length),lengths=new Array2D(sequence1.length,sequence2.length);for(let s1=0;s1<sequence1.length;s1++)for(let s2=0;s2<sequence2.length;s2++){if(!timeout.isValid())return DiffAlgorithmResult.trivialTimedOut(sequence1,sequence2);const horizontalLen=0===s1?0:lcsLengths.get(s1-1,s2),verticalLen=0===s2?0:lcsLengths.get(s1,s2-1);let extendedSeqScore;sequence1.getElement(s1)===sequence2.getElement(s2)?(extendedSeqScore=0===s1||0===s2?0:lcsLengths.get(s1-1,s2-1),s1>0&&s2>0&&3===directions.get(s1-1,s2-1)&&(extendedSeqScore+=lengths.get(s1-1,s2-1)),extendedSeqScore+=equalityScore?equalityScore(s1,s2):1):extendedSeqScore=-1;const newValue=Math.max(horizontalLen,verticalLen,extendedSeqScore);if(newValue===extendedSeqScore){const prevLen=s1>0&&s2>0?lengths.get(s1-1,s2-1):0;lengths.set(s1,s2,prevLen+1),directions.set(s1,s2,3)}else newValue===horizontalLen?(lengths.set(s1,s2,0),directions.set(s1,s2,1)):newValue===verticalLen&&(lengths.set(s1,s2,0),directions.set(s1,s2,2));lcsLengths.set(s1,s2,newValue)}const result=[];let lastAligningPosS1=sequence1.length,lastAligningPosS2=sequence2.length;function reportDecreasingAligningPositions(s1,s2){s1+1===lastAligningPosS1&&s2+1===lastAligningPosS2||result.push(new SequenceDiff(new OffsetRange(s1+1,lastAligningPosS1),new OffsetRange(s2+1,lastAligningPosS2))),lastAligningPosS1=s1,lastAligningPosS2=s2}let s1=sequence1.length-1,s2=sequence2.length-1;for(;s1>=0&&s2>=0;)3===directions.get(s1,s2)?(reportDecreasingAligningPositions(s1,s2),s1--,s2--):1===directions.get(s1,s2)?s1--:s2--;return reportDecreasingAligningPositions(-1,-1),result.reverse(),new DiffAlgorithmResult(result,!1)}}function optimizeSequenceDiffs(sequence1,sequence2,sequenceDiffs){let result=sequenceDiffs;return result=function joinSequenceDiffs(sequence1,sequence2,sequenceDiffs){const result=[];sequenceDiffs.length>0&&result.push(sequenceDiffs[0]);for(let i=1;i<sequenceDiffs.length;i++){const lastResult=result[result.length-1],cur=sequenceDiffs[i];if(cur.seq1Range.isEmpty){let all=!0;const length=cur.seq1Range.start-lastResult.seq1Range.endExclusive;for(let i=1;i<=length;i++)if(sequence2.getElement(cur.seq2Range.start-i)!==sequence2.getElement(cur.seq2Range.endExclusive-i)){all=!1;break}if(all){result[result.length-1]=new SequenceDiff(lastResult.seq1Range,new OffsetRange(lastResult.seq2Range.start,cur.seq2Range.endExclusive-length));continue}}result.push(cur)}return result}(0,sequence2,result),result=function shiftSequenceDiffs(sequence1,sequence2,sequenceDiffs){if(!sequence1.getBoundaryScore||!sequence2.getBoundaryScore)return sequenceDiffs;for(let i=0;i<sequenceDiffs.length;i++){const diff=sequenceDiffs[i];if(diff.seq1Range.isEmpty){const seq2PrevEndExclusive=i>0?sequenceDiffs[i-1].seq2Range.endExclusive:-1,seq2NextStart=i+1<sequenceDiffs.length?sequenceDiffs[i+1].seq2Range.start:sequence2.length;sequenceDiffs[i]=shiftDiffToBetterPosition(diff,sequence1,sequence2,seq2NextStart,seq2PrevEndExclusive)}else if(diff.seq2Range.isEmpty){const seq1PrevEndExclusive=i>0?sequenceDiffs[i-1].seq1Range.endExclusive:-1,seq1NextStart=i+1<sequenceDiffs.length?sequenceDiffs[i+1].seq1Range.start:sequence1.length;sequenceDiffs[i]=shiftDiffToBetterPosition(diff.reverse(),sequence2,sequence1,seq1NextStart,seq1PrevEndExclusive).reverse()}}return sequenceDiffs}(sequence1,sequence2,result),result}function shiftDiffToBetterPosition(diff,sequence1,sequence2,seq2NextStart,seq2PrevEndExclusive){let deltaBefore=1;for(;diff.seq2Range.start-deltaBefore>seq2PrevEndExclusive&&sequence2.getElement(diff.seq2Range.start-deltaBefore)===sequence2.getElement(diff.seq2Range.endExclusive-deltaBefore)&&deltaBefore<20;)deltaBefore++;deltaBefore--;let deltaAfter=0;for(;diff.seq2Range.start+deltaAfter<seq2NextStart&&sequence2.getElement(diff.seq2Range.start+deltaAfter)===sequence2.getElement(diff.seq2Range.endExclusive+deltaAfter)&&deltaAfter<20;)deltaAfter++;if(0===deltaBefore&&0===deltaAfter)return diff;let bestDelta=0,bestScore=-1;for(let delta=-deltaBefore;delta<=deltaAfter;delta++){const seq2OffsetStart=diff.seq2Range.start+delta,seq2OffsetEndExclusive=diff.seq2Range.endExclusive+delta,seq1Offset=diff.seq1Range.start+delta,score=sequence1.getBoundaryScore(seq1Offset)+sequence2.getBoundaryScore(seq2OffsetStart)+sequence2.getBoundaryScore(seq2OffsetEndExclusive);score>bestScore&&(bestScore=score,bestDelta=delta)}return 0!==bestDelta?new SequenceDiff(diff.seq1Range.delta(bestDelta),diff.seq2Range.delta(bestDelta)):diff}class MyersDiffAlgorithm{compute(seq1,seq2,timeout=InfiniteTimeout.instance){if(0===seq1.length||0===seq2.length)return DiffAlgorithmResult.trivial(seq1,seq2);function getXAfterSnake(x,y){for(;x<seq1.length&&y<seq2.length&&seq1.getElement(x)===seq2.getElement(y);)x++,y++;return x}let d=0;const V=new FastInt32Array;V.set(0,getXAfterSnake(0,0));const paths=new FastArrayNegativeIndices;paths.set(0,0===V.get(0)?null:new SnakePath(null,0,0,V.get(0)));let k=0;loop:for(;;)for(d++,k=-d;k<=d;k+=2){if(!timeout.isValid())return DiffAlgorithmResult.trivialTimedOut(seq1,seq2);const maxXofDLineTop=k===d?-1:V.get(k+1),maxXofDLineLeft=k===-d?-1:V.get(k-1)+1,x=Math.min(Math.max(maxXofDLineTop,maxXofDLineLeft),seq1.length),y=x-k,newMaxX=getXAfterSnake(x,y);V.set(k,newMaxX);const lastPath=x===maxXofDLineTop?paths.get(k+1):paths.get(k-1);if(paths.set(k,newMaxX!==x?new SnakePath(lastPath,x,y,newMaxX-x):lastPath),V.get(k)===seq1.length&&V.get(k)-k===seq2.length)break loop}let path=paths.get(k);const result=[];let lastAligningPosS1=seq1.length,lastAligningPosS2=seq2.length;for(;;){const endX=path?path.x+path.length:0,endY=path?path.y+path.length:0;if(endX===lastAligningPosS1&&endY===lastAligningPosS2||result.push(new SequenceDiff(new OffsetRange(endX,lastAligningPosS1),new OffsetRange(endY,lastAligningPosS2))),!path)break;lastAligningPosS1=path.x,lastAligningPosS2=path.y,path=path.prev}return result.reverse(),new DiffAlgorithmResult(result,!1)}}class SnakePath{constructor(prev,x,y,length){this.prev=prev,this.x=x,this.y=y,this.length=length}}class FastInt32Array{constructor(){this.positiveArr=new Int32Array(10),this.negativeArr=new Int32Array(10)}get(idx){return idx<0?(idx=-idx-1,this.negativeArr[idx]):this.positiveArr[idx]}set(idx,value){if(idx<0){if((idx=-idx-1)>=this.negativeArr.length){const arr=this.negativeArr;this.negativeArr=new Int32Array(2*arr.length),this.negativeArr.set(arr)}this.negativeArr[idx]=value}else{if(idx>=this.positiveArr.length){const arr=this.positiveArr;this.positiveArr=new Int32Array(2*arr.length),this.positiveArr.set(arr)}this.positiveArr[idx]=value}}}class FastArrayNegativeIndices{constructor(){this.positiveArr=[],this.negativeArr=[]}get(idx){return idx<0?(idx=-idx-1,this.negativeArr[idx]):this.positiveArr[idx]}set(idx,value){idx<0?(idx=-idx-1,this.negativeArr[idx]=value):this.positiveArr[idx]=value}}class standardLinesDiffComputer_LineSequence{constructor(trimmedHash,lines){this.trimmedHash=trimmedHash,this.lines=lines}getElement(offset){return this.trimmedHash[offset]}get length(){return this.trimmedHash.length}getBoundaryScore(length){return 1e3-((0===length?0:getIndentation(this.lines[length-1]))+(length===this.lines.length?0:getIndentation(this.lines[length])))}}function getIndentation(str){let i=0;for(;i<str.length&&(32===str.charCodeAt(i)||9===str.charCodeAt(i));)i++;return i}class Slice{constructor(lines,lineRange,considerWhitespaceChanges){this.lines=lines,this.considerWhitespaceChanges=considerWhitespaceChanges,this.elements=[],this.firstCharOffsetByLineMinusOne=[],this.offsetByLine=[];let trimFirstLineFully=!1;lineRange.start>0&&lineRange.endExclusive>=lines.length&&(lineRange=new OffsetRange(lineRange.start-1,lineRange.endExclusive),trimFirstLineFully=!0),this.lineRange=lineRange;for(let i=this.lineRange.start;i<this.lineRange.endExclusive;i++){let line=lines[i],offset=0;if(trimFirstLineFully)offset=line.length,line="",trimFirstLineFully=!1;else if(!considerWhitespaceChanges){const trimmedStartLine=line.trimStart();offset=line.length-trimmedStartLine.length,line=trimmedStartLine.trimEnd()}this.offsetByLine.push(offset);for(let i=0;i<line.length;i++)this.elements.push(line.charCodeAt(i));i<lines.length-1&&(this.elements.push("\n".charCodeAt(0)),this.firstCharOffsetByLineMinusOne[i-this.lineRange.start]=this.elements.length)}this.offsetByLine.push(0)}toString(){return`Slice: "${this.text}"`}get text(){return[...this.elements].map((e=>String.fromCharCode(e))).join("")}getElement(offset){return this.elements[offset]}get length(){return this.elements.length}getBoundaryScore(length){const prevCategory=getCategory(length>0?this.elements[length-1]:-1),nextCategory=getCategory(length<this.elements.length?this.elements[length]:-1);if(6===prevCategory&&7===nextCategory)return 0;let score=0;return prevCategory!==nextCategory&&(score+=10,1===nextCategory&&(score+=1)),score+=getCategoryBoundaryScore(prevCategory),score+=getCategoryBoundaryScore(nextCategory),score}translateOffset(offset){if(this.lineRange.isEmpty)return new position_Position(this.lineRange.start+1,1);let i=0,j=this.firstCharOffsetByLineMinusOne.length;for(;i<j;){const k=Math.floor((i+j)/2);this.firstCharOffsetByLineMinusOne[k]>offset?j=k:i=k+1}const offsetOfPrevLineBreak=0===i?0:this.firstCharOffsetByLineMinusOne[i-1];return new position_Position(this.lineRange.start+i+1,offset-offsetOfPrevLineBreak+1+this.offsetByLine[i])}translateRange(range){return range_Range.fromPositions(this.translateOffset(range.start),this.translateOffset(range.endExclusive))}findWordContaining(offset){if(offset<0||offset>=this.elements.length)return;if(!isWordChar(this.elements[offset]))return;let start=offset;for(;start>0&&isWordChar(this.elements[start-1]);)start--;let end=offset;for(;end<this.elements.length&&isWordChar(this.elements[end]);)end++;return new OffsetRange(start,end)}}function isWordChar(charCode){return charCode>=97&&charCode<=122||charCode>=65&&charCode<=90||charCode>=48&&charCode<=57}const score={0:0,1:0,2:0,3:10,4:2,5:3,6:10,7:10};function getCategoryBoundaryScore(category){return score[category]}function getCategory(charCode){return 10===charCode?7:13===charCode?6:function isSpace(charCode){return 32===charCode||9===charCode}(charCode)?5:charCode>=97&&charCode<=122?0:charCode>=65&&charCode<=90?1:charCode>=48&&charCode<=57?2:-1===charCode?3:4}const linesDiffComputers={legacy:new class SmartLinesDiffComputer{computeDiff(originalLines,modifiedLines,options){var _a;const result=new DiffComputer(originalLines,modifiedLines,{maxComputationTime:options.maxComputationTimeMs,shouldIgnoreTrimWhitespace:options.ignoreTrimWhitespace,shouldComputeCharChanges:!0,shouldMakePrettyDiff:!0,shouldPostProcessCharChanges:!0}).computeDiff(),changes=[];let lastChange=null;for(const c of result.changes){let originalRange,modifiedRange;originalRange=0===c.originalEndLineNumber?new LineRange(c.originalStartLineNumber+1,c.originalStartLineNumber+1):new LineRange(c.originalStartLineNumber,c.originalEndLineNumber+1),modifiedRange=0===c.modifiedEndLineNumber?new LineRange(c.modifiedStartLineNumber+1,c.modifiedStartLineNumber+1):new LineRange(c.modifiedStartLineNumber,c.modifiedEndLineNumber+1);let change=new LineRangeMapping(originalRange,modifiedRange,null===(_a=c.charChanges)||void 0===_a?void 0:_a.map((c=>new RangeMapping(new range_Range(c.originalStartLineNumber,c.originalStartColumn,c.originalEndLineNumber,c.originalEndColumn),new range_Range(c.modifiedStartLineNumber,c.modifiedStartColumn,c.modifiedEndLineNumber,c.modifiedEndColumn)))));lastChange&&(lastChange.modifiedRange.endLineNumberExclusive!==change.modifiedRange.startLineNumber&&lastChange.originalRange.endLineNumberExclusive!==change.originalRange.startLineNumber||(change=new LineRangeMapping(lastChange.originalRange.join(change.originalRange),lastChange.modifiedRange.join(change.modifiedRange),lastChange.innerChanges&&change.innerChanges?lastChange.innerChanges.concat(change.innerChanges):void 0),changes.pop())),changes.push(change),lastChange=change}return assertFn((()=>checkAdjacentItems(changes,((m1,m2)=>m2.originalRange.startLineNumber-m1.originalRange.endLineNumberExclusive==m2.modifiedRange.startLineNumber-m1.modifiedRange.endLineNumberExclusive&&m1.originalRange.endLineNumberExclusive<m2.originalRange.startLineNumber&&m1.modifiedRange.endLineNumberExclusive<m2.modifiedRange.startLineNumber)))),new LinesDiff(changes,result.quitEarly)}},advanced:new class StandardLinesDiffComputer{constructor(){this.dynamicProgrammingDiffing=new DynamicProgrammingDiffing,this.myersDiffingAlgorithm=new MyersDiffAlgorithm}computeDiff(originalLines,modifiedLines,options){const timeout=0===options.maxComputationTimeMs?InfiniteTimeout.instance:new DateTimeout(options.maxComputationTimeMs),considerWhitespaceChanges=!options.ignoreTrimWhitespace,perfectHashes=new Map;function getOrCreateHash(text){let hash=perfectHashes.get(text);return void 0===hash&&(hash=perfectHashes.size,perfectHashes.set(text,hash)),hash}const srcDocLines=originalLines.map((l=>getOrCreateHash(l.trim()))),tgtDocLines=modifiedLines.map((l=>getOrCreateHash(l.trim()))),sequence1=new standardLinesDiffComputer_LineSequence(srcDocLines,originalLines),sequence2=new standardLinesDiffComputer_LineSequence(tgtDocLines,modifiedLines),lineAlignmentResult=(()=>sequence1.length+sequence2.length<1500?this.dynamicProgrammingDiffing.compute(sequence1,sequence2,timeout,((offset1,offset2)=>originalLines[offset1]===modifiedLines[offset2]?0===modifiedLines[offset2].length?.1:1+Math.log(1+modifiedLines[offset2].length):.99)):this.myersDiffingAlgorithm.compute(sequence1,sequence2))();let lineAlignments=lineAlignmentResult.diffs,hitTimeout=lineAlignmentResult.hitTimeout;lineAlignments=optimizeSequenceDiffs(sequence1,sequence2,lineAlignments);const alignments=[],scanForWhitespaceChanges=equalLinesCount=>{if(considerWhitespaceChanges)for(let i=0;i<equalLinesCount;i++){const seq1Offset=seq1LastStart+i,seq2Offset=seq2LastStart+i;if(originalLines[seq1Offset]!==modifiedLines[seq2Offset]){const characterDiffs=this.refineDiff(originalLines,modifiedLines,new SequenceDiff(new OffsetRange(seq1Offset,seq1Offset+1),new OffsetRange(seq2Offset,seq2Offset+1)),timeout,considerWhitespaceChanges);for(const a of characterDiffs.mappings)alignments.push(a);characterDiffs.hitTimeout&&(hitTimeout=!0)}}};let seq1LastStart=0,seq2LastStart=0;for(const diff of lineAlignments){assertFn((()=>diff.seq1Range.start-seq1LastStart==diff.seq2Range.start-seq2LastStart));scanForWhitespaceChanges(diff.seq1Range.start-seq1LastStart),seq1LastStart=diff.seq1Range.endExclusive,seq2LastStart=diff.seq2Range.endExclusive;const characterDiffs=this.refineDiff(originalLines,modifiedLines,diff,timeout,considerWhitespaceChanges);characterDiffs.hitTimeout&&(hitTimeout=!0);for(const a of characterDiffs.mappings)alignments.push(a)}scanForWhitespaceChanges(originalLines.length-seq1LastStart);const changes=function lineRangeMappingFromRangeMappings(alignments,originalLines,modifiedLines){const changes=[];for(const g of function*group(items,shouldBeGrouped){let currentGroup,last;for(const item of items)void 0!==last&&shouldBeGrouped(last,item)?currentGroup.push(item):(currentGroup&&(yield currentGroup),currentGroup=[item]),last=item;currentGroup&&(yield currentGroup)}(alignments.map((a=>function getLineRangeMapping(rangeMapping,originalLines,modifiedLines){let lineStartDelta=0,lineEndDelta=0;rangeMapping.modifiedRange.startColumn-1>=modifiedLines[rangeMapping.modifiedRange.startLineNumber-1].length&&rangeMapping.originalRange.startColumn-1>=originalLines[rangeMapping.originalRange.startLineNumber-1].length&&(lineStartDelta=1);1===rangeMapping.modifiedRange.endColumn&&1===rangeMapping.originalRange.endColumn&&rangeMapping.originalRange.startLineNumber+lineStartDelta<=rangeMapping.originalRange.endLineNumber&&rangeMapping.modifiedRange.startLineNumber+lineStartDelta<=rangeMapping.modifiedRange.endLineNumber&&(lineEndDelta=-1);const originalLineRange=new LineRange(rangeMapping.originalRange.startLineNumber+lineStartDelta,rangeMapping.originalRange.endLineNumber+1+lineEndDelta),modifiedLineRange=new LineRange(rangeMapping.modifiedRange.startLineNumber+lineStartDelta,rangeMapping.modifiedRange.endLineNumber+1+lineEndDelta);return new LineRangeMapping(originalLineRange,modifiedLineRange,[rangeMapping])}(a,originalLines,modifiedLines))),((a1,a2)=>a1.originalRange.overlapOrTouch(a2.originalRange)||a1.modifiedRange.overlapOrTouch(a2.modifiedRange)))){const first=g[0],last=g[g.length-1];changes.push(new LineRangeMapping(first.originalRange.join(last.originalRange),first.modifiedRange.join(last.modifiedRange),g.map((a=>a.innerChanges[0]))))}return assertFn((()=>checkAdjacentItems(changes,((m1,m2)=>m2.originalRange.startLineNumber-m1.originalRange.endLineNumberExclusive==m2.modifiedRange.startLineNumber-m1.modifiedRange.endLineNumberExclusive&&m1.originalRange.endLineNumberExclusive<m2.originalRange.startLineNumber&&m1.modifiedRange.endLineNumberExclusive<m2.modifiedRange.startLineNumber)))),changes}(alignments,originalLines,modifiedLines);return new LinesDiff(changes,hitTimeout)}refineDiff(originalLines,modifiedLines,diff,timeout,considerWhitespaceChanges){const sourceSlice=new Slice(originalLines,diff.seq1Range,considerWhitespaceChanges),targetSlice=new Slice(modifiedLines,diff.seq2Range,considerWhitespaceChanges),diffResult=sourceSlice.length+targetSlice.length<500?this.dynamicProgrammingDiffing.compute(sourceSlice,targetSlice,timeout):this.myersDiffingAlgorithm.compute(sourceSlice,targetSlice,timeout);let diffs=diffResult.diffs;diffs=optimizeSequenceDiffs(sourceSlice,targetSlice,diffs),diffs=function coverFullWords(sequence1,sequence2,sequenceDiffs){const additional=[];let lastModifiedWord;function maybePushWordToAdditional(){if(!lastModifiedWord)return;const originalLength1=lastModifiedWord.s1Range.length-lastModifiedWord.deleted;lastModifiedWord.s2Range.length,lastModifiedWord.added;Math.max(lastModifiedWord.deleted,lastModifiedWord.added)+(lastModifiedWord.count-1)>originalLength1&&additional.push(new SequenceDiff(lastModifiedWord.s1Range,lastModifiedWord.s2Range)),lastModifiedWord=void 0}for(const s of sequenceDiffs){function processWord(s1Range,s2Range){var _a,_b,_c,_d;if(!lastModifiedWord||!lastModifiedWord.s1Range.containsRange(s1Range)||!lastModifiedWord.s2Range.containsRange(s2Range))if(!lastModifiedWord||lastModifiedWord.s1Range.endExclusive<s1Range.start&&lastModifiedWord.s2Range.endExclusive<s2Range.start)maybePushWordToAdditional(),lastModifiedWord={added:0,deleted:0,count:0,s1Range,s2Range};else{const s1Added=OffsetRange.tryCreate(lastModifiedWord.s1Range.endExclusive,s1Range.start),s2Added=OffsetRange.tryCreate(lastModifiedWord.s2Range.endExclusive,s2Range.start);lastModifiedWord.deleted+=null!==(_a=null==s1Added?void 0:s1Added.length)&&void 0!==_a?_a:0,lastModifiedWord.added+=null!==(_b=null==s2Added?void 0:s2Added.length)&&void 0!==_b?_b:0,lastModifiedWord.s1Range=lastModifiedWord.s1Range.join(s1Range),lastModifiedWord.s2Range=lastModifiedWord.s2Range.join(s2Range)}const changedS1=s1Range.intersect(s.seq1Range),changedS2=s2Range.intersect(s.seq2Range);lastModifiedWord.count++,lastModifiedWord.deleted+=null!==(_c=null==changedS1?void 0:changedS1.length)&&void 0!==_c?_c:0,lastModifiedWord.added+=null!==(_d=null==changedS2?void 0:changedS2.length)&&void 0!==_d?_d:0}const w1Before=sequence1.findWordContaining(s.seq1Range.start-1),w2Before=sequence2.findWordContaining(s.seq2Range.start-1),w1After=sequence1.findWordContaining(s.seq1Range.endExclusive),w2After=sequence2.findWordContaining(s.seq2Range.endExclusive);w1Before&&w1After&&w2Before&&w2After&&w1Before.equals(w1After)&&w2Before.equals(w2After)?processWord(w1Before,w2Before):(w1Before&&w2Before&&processWord(w1Before,w2Before),w1After&&w2After&&processWord(w1After,w2After))}maybePushWordToAdditional();return function mergeSequenceDiffs(sequenceDiffs1,sequenceDiffs2){const result=[];for(;sequenceDiffs1.length>0||sequenceDiffs2.length>0;){const sd1=sequenceDiffs1[0],sd2=sequenceDiffs2[0];let next;next=sd1&&(!sd2||sd1.seq1Range.start<sd2.seq1Range.start)?sequenceDiffs1.shift():sequenceDiffs2.shift(),result.length>0&&result[result.length-1].seq1Range.endExclusive>=next.seq1Range.start?result[result.length-1]=result[result.length-1].join(next):result.push(next)}return result}(sequenceDiffs,additional)}(sourceSlice,targetSlice,diffs),diffs=function smoothenSequenceDiffs(sequence1,sequence2,sequenceDiffs){const result=[];for(const s of sequenceDiffs){const last=result[result.length-1];last&&(s.seq1Range.start-last.seq1Range.endExclusive<=2||s.seq2Range.start-last.seq2Range.endExclusive<=2)?result[result.length-1]=new SequenceDiff(last.seq1Range.join(s.seq1Range),last.seq2Range.join(s.seq2Range)):result.push(s)}return result}(0,0,diffs);return{mappings:diffs.map((d=>new RangeMapping(sourceSlice.translateRange(d.seq1Range),targetSlice.translateRange(d.seq2Range)))),hitTimeout:diffResult.hitTimeout}}}};function roundFloat(number,decimalPoints){const decimal=Math.pow(10,decimalPoints);return Math.round(number*decimal)/decimal}class RGBA{constructor(r,g,b,a=1){this._rgbaBrand=void 0,this.r=0|Math.min(255,Math.max(0,r)),this.g=0|Math.min(255,Math.max(0,g)),this.b=0|Math.min(255,Math.max(0,b)),this.a=roundFloat(Math.max(Math.min(1,a),0),3)}static equals(a,b){return a.r===b.r&&a.g===b.g&&a.b===b.b&&a.a===b.a}}class HSLA{constructor(h,s,l,a){this._hslaBrand=void 0,this.h=0|Math.max(Math.min(360,h),0),this.s=roundFloat(Math.max(Math.min(1,s),0),3),this.l=roundFloat(Math.max(Math.min(1,l),0),3),this.a=roundFloat(Math.max(Math.min(1,a),0),3)}static equals(a,b){return a.h===b.h&&a.s===b.s&&a.l===b.l&&a.a===b.a}static fromRGBA(rgba){const r=rgba.r/255,g=rgba.g/255,b=rgba.b/255,a=rgba.a,max=Math.max(r,g,b),min=Math.min(r,g,b);let h=0,s=0;const l=(min+max)/2,chroma=max-min;if(chroma>0){switch(s=Math.min(l<=.5?chroma/(2*l):chroma/(2-2*l),1),max){case r:h=(g-b)/chroma+(g<b?6:0);break;case g:h=(b-r)/chroma+2;break;case b:h=(r-g)/chroma+4}h*=60,h=Math.round(h)}return new HSLA(h,s,l,a)}static _hue2rgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p}static toRGBA(hsla){const h=hsla.h/360,{s,l,a}=hsla;let r,g,b;if(0===s)r=g=b=l;else{const q=l<.5?l*(1+s):l+s-l*s,p=2*l-q;r=HSLA._hue2rgb(p,q,h+1/3),g=HSLA._hue2rgb(p,q,h),b=HSLA._hue2rgb(p,q,h-1/3)}return new RGBA(Math.round(255*r),Math.round(255*g),Math.round(255*b),a)}}class HSVA{constructor(h,s,v,a){this._hsvaBrand=void 0,this.h=0|Math.max(Math.min(360,h),0),this.s=roundFloat(Math.max(Math.min(1,s),0),3),this.v=roundFloat(Math.max(Math.min(1,v),0),3),this.a=roundFloat(Math.max(Math.min(1,a),0),3)}static equals(a,b){return a.h===b.h&&a.s===b.s&&a.v===b.v&&a.a===b.a}static fromRGBA(rgba){const r=rgba.r/255,g=rgba.g/255,b=rgba.b/255,cmax=Math.max(r,g,b),delta=cmax-Math.min(r,g,b),s=0===cmax?0:delta/cmax;let m;return m=0===delta?0:cmax===r?((g-b)/delta%6+6)%6:cmax===g?(b-r)/delta+2:(r-g)/delta+4,new HSVA(Math.round(60*m),s,cmax,rgba.a)}static toRGBA(hsva){const{h,s,v,a}=hsva,c=v*s,x=c*(1-Math.abs(h/60%2-1)),m=v-c;let[r,g,b]=[0,0,0];return h<60?(r=c,g=x):h<120?(r=x,g=c):h<180?(g=c,b=x):h<240?(g=x,b=c):h<300?(r=x,b=c):h<=360&&(r=c,b=x),r=Math.round(255*(r+m)),g=Math.round(255*(g+m)),b=Math.round(255*(b+m)),new RGBA(r,g,b,a)}}class Color{static fromHex(hex){return Color.Format.CSS.parseHex(hex)||Color.red}static equals(a,b){return!a&&!b||!(!a||!b)&&a.equals(b)}get hsla(){return this._hsla?this._hsla:HSLA.fromRGBA(this.rgba)}get hsva(){return this._hsva?this._hsva:HSVA.fromRGBA(this.rgba)}constructor(arg){if(!arg)throw new Error("Color needs a value");if(arg instanceof RGBA)this.rgba=arg;else if(arg instanceof HSLA)this._hsla=arg,this.rgba=HSLA.toRGBA(arg);else{if(!(arg instanceof HSVA))throw new Error("Invalid color ctor argument");this._hsva=arg,this.rgba=HSVA.toRGBA(arg)}}equals(other){return!!other&&RGBA.equals(this.rgba,other.rgba)&&HSLA.equals(this.hsla,other.hsla)&&HSVA.equals(this.hsva,other.hsva)}getRelativeLuminance(){return roundFloat(.2126*Color._relativeLuminanceForComponent(this.rgba.r)+.7152*Color._relativeLuminanceForComponent(this.rgba.g)+.0722*Color._relativeLuminanceForComponent(this.rgba.b),4)}static _relativeLuminanceForComponent(color){const c=color/255;return c<=.03928?c/12.92:Math.pow((c+.055)/1.055,2.4)}isLighter(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3>=128}isLighterThan(another){return this.getRelativeLuminance()>another.getRelativeLuminance()}isDarkerThan(another){return this.getRelativeLuminance()<another.getRelativeLuminance()}lighten(factor){return new Color(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l+this.hsla.l*factor,this.hsla.a))}darken(factor){return new Color(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l-this.hsla.l*factor,this.hsla.a))}transparent(factor){const{r,g,b,a}=this.rgba;return new Color(new RGBA(r,g,b,a*factor))}isTransparent(){return 0===this.rgba.a}isOpaque(){return 1===this.rgba.a}opposite(){return new Color(new RGBA(255-this.rgba.r,255-this.rgba.g,255-this.rgba.b,this.rgba.a))}makeOpaque(opaqueBackground){if(this.isOpaque()||1!==opaqueBackground.rgba.a)return this;const{r,g,b,a}=this.rgba;return new Color(new RGBA(opaqueBackground.rgba.r-a*(opaqueBackground.rgba.r-r),opaqueBackground.rgba.g-a*(opaqueBackground.rgba.g-g),opaqueBackground.rgba.b-a*(opaqueBackground.rgba.b-b),1))}toString(){return this._toString||(this._toString=Color.Format.CSS.format(this)),this._toString}static getLighterColor(of,relative,factor){if(of.isLighterThan(relative))return of;factor=factor||.5;const lum1=of.getRelativeLuminance(),lum2=relative.getRelativeLuminance();return factor=factor*(lum2-lum1)/lum2,of.lighten(factor)}static getDarkerColor(of,relative,factor){if(of.isDarkerThan(relative))return of;factor=factor||.5;const lum1=of.getRelativeLuminance();return factor=factor*(lum1-relative.getRelativeLuminance())/lum1,of.darken(factor)}}function _parseCaptureGroups(captureGroups){const values=[];for(const captureGroup of captureGroups){const parsedNumber=Number(captureGroup);(parsedNumber||0===parsedNumber&&""!==captureGroup.replace(/\s/g,""))&&values.push(parsedNumber)}return values}function _toIColor(r,g,b,a){return{red:r/255,blue:b/255,green:g/255,alpha:a}}function _findRange(model,match){const index=match.index,length=match[0].length;if(!index)return;const startPosition=model.positionAt(index);return{startLineNumber:startPosition.lineNumber,startColumn:startPosition.column,endLineNumber:startPosition.lineNumber,endColumn:startPosition.column+length}}function _findHexColorInformation(range,hexValue){if(!range)return;const parsedHexColor=Color.Format.CSS.parseHex(hexValue);return parsedHexColor?{range,color:_toIColor(parsedHexColor.rgba.r,parsedHexColor.rgba.g,parsedHexColor.rgba.b,parsedHexColor.rgba.a)}:void 0}function _findRGBColorInformation(range,matches,isAlpha){if(!range||1!==matches.length)return;const parsedRegex=_parseCaptureGroups(matches[0].values());return{range,color:_toIColor(parsedRegex[0],parsedRegex[1],parsedRegex[2],isAlpha?parsedRegex[3]:1)}}function _findHSLColorInformation(range,matches,isAlpha){if(!range||1!==matches.length)return;const parsedRegex=_parseCaptureGroups(matches[0].values()),colorEquivalent=new Color(new HSLA(parsedRegex[0],parsedRegex[1]/100,parsedRegex[2]/100,isAlpha?parsedRegex[3]:1));return{range,color:_toIColor(colorEquivalent.rgba.r,colorEquivalent.rgba.g,colorEquivalent.rgba.b,colorEquivalent.rgba.a)}}function _findMatches(model,regex){return"string"==typeof model?[...model.matchAll(regex)]:model.findMatches(regex)}function computeDefaultDocumentColors(model){return model&&"function"==typeof model.getValue&&"function"==typeof model.positionAt?function computeColors(model){const result=[],initialValidationMatches=_findMatches(model,/\b(rgb|rgba|hsl|hsla)(\([0-9\s,.\%]*\))|(#)([A-Fa-f0-9]{6})\b|(#)([A-Fa-f0-9]{8})\b/gm);if(initialValidationMatches.length>0)for(const initialMatch of initialValidationMatches){const initialCaptureGroups=initialMatch.filter((captureGroup=>void 0!==captureGroup)),colorScheme=initialCaptureGroups[1],colorParameters=initialCaptureGroups[2];if(!colorParameters)continue;let colorInformation;if("rgb"===colorScheme){const regexParameters=/^\(\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*\)$/gm;colorInformation=_findRGBColorInformation(_findRange(model,initialMatch),_findMatches(colorParameters,regexParameters),!1)}else if("rgba"===colorScheme){const regexParameters=/^\(\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\s*\)$/gm;colorInformation=_findRGBColorInformation(_findRange(model,initialMatch),_findMatches(colorParameters,regexParameters),!0)}else if("hsl"===colorScheme){const regexParameters=/^\(\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*\)$/gm;colorInformation=_findHSLColorInformation(_findRange(model,initialMatch),_findMatches(colorParameters,regexParameters),!1)}else if("hsla"===colorScheme){const regexParameters=/^\(\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*,\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\s*\)$/gm;colorInformation=_findHSLColorInformation(_findRange(model,initialMatch),_findMatches(colorParameters,regexParameters),!0)}else"#"===colorScheme&&(colorInformation=_findHexColorInformation(_findRange(model,initialMatch),colorScheme+colorParameters));colorInformation&&result.push(colorInformation)}return result}(model):[]}Color.white=new Color(new RGBA(255,255,255,1)),Color.black=new Color(new RGBA(0,0,0,1)),Color.red=new Color(new RGBA(255,0,0,1)),Color.blue=new Color(new RGBA(0,0,255,1)),Color.green=new Color(new RGBA(0,255,0,1)),Color.cyan=new Color(new RGBA(0,255,255,1)),Color.lightgrey=new Color(new RGBA(211,211,211,1)),Color.transparent=new Color(new RGBA(0,0,0,0)),function(Color){let Format;!function(Format){let CSS;!function(CSS){function _toTwoDigitHex(n){const r=n.toString(16);return 2!==r.length?"0"+r:r}function _parseHexDigit(charCode){switch(charCode){case 48:return 0;case 49:return 1;case 50:return 2;case 51:return 3;case 52:return 4;case 53:return 5;case 54:return 6;case 55:return 7;case 56:return 8;case 57:return 9;case 97:case 65:return 10;case 98:case 66:return 11;case 99:case 67:return 12;case 100:case 68:return 13;case 101:case 69:return 14;case 102:case 70:return 15}return 0}CSS.formatRGB=function formatRGB(color){return 1===color.rgba.a?`rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`:Color.Format.CSS.formatRGBA(color)},CSS.formatRGBA=function formatRGBA(color){return`rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+color.rgba.a.toFixed(2)})`},CSS.formatHSL=function formatHSL(color){return 1===color.hsla.a?`hsl(${color.hsla.h}, ${(100*color.hsla.s).toFixed(2)}%, ${(100*color.hsla.l).toFixed(2)}%)`:Color.Format.CSS.formatHSLA(color)},CSS.formatHSLA=function formatHSLA(color){return`hsla(${color.hsla.h}, ${(100*color.hsla.s).toFixed(2)}%, ${(100*color.hsla.l).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`},CSS.formatHex=function formatHex(color){return`#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`},CSS.formatHexA=function formatHexA(color,compact=!1){return compact&&1===color.rgba.a?Color.Format.CSS.formatHex(color):`#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(255*color.rgba.a))}`},CSS.format=function format(color){return color.isOpaque()?Color.Format.CSS.formatHex(color):Color.Format.CSS.formatRGBA(color)},CSS.parseHex=function parseHex(hex){const length=hex.length;if(0===length)return null;if(35!==hex.charCodeAt(0))return null;if(7===length){const r=16*_parseHexDigit(hex.charCodeAt(1))+_parseHexDigit(hex.charCodeAt(2)),g=16*_parseHexDigit(hex.charCodeAt(3))+_parseHexDigit(hex.charCodeAt(4)),b=16*_parseHexDigit(hex.charCodeAt(5))+_parseHexDigit(hex.charCodeAt(6));return new Color(new RGBA(r,g,b,1))}if(9===length){const r=16*_parseHexDigit(hex.charCodeAt(1))+_parseHexDigit(hex.charCodeAt(2)),g=16*_parseHexDigit(hex.charCodeAt(3))+_parseHexDigit(hex.charCodeAt(4)),b=16*_parseHexDigit(hex.charCodeAt(5))+_parseHexDigit(hex.charCodeAt(6)),a=16*_parseHexDigit(hex.charCodeAt(7))+_parseHexDigit(hex.charCodeAt(8));return new Color(new RGBA(r,g,b,a/255))}if(4===length){const r=_parseHexDigit(hex.charCodeAt(1)),g=_parseHexDigit(hex.charCodeAt(2)),b=_parseHexDigit(hex.charCodeAt(3));return new Color(new RGBA(16*r+r,16*g+g,16*b+b))}if(5===length){const r=_parseHexDigit(hex.charCodeAt(1)),g=_parseHexDigit(hex.charCodeAt(2)),b=_parseHexDigit(hex.charCodeAt(3)),a=_parseHexDigit(hex.charCodeAt(4));return new Color(new RGBA(16*r+r,16*g+g,16*b+b,(16*a+a)/255))}return null}}(CSS=Format.CSS||(Format.CSS={}))}(Format=Color.Format||(Color.Format={}))}(Color||(Color={}));var editorSimpleWorker_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class MirrorModel extends MirrorTextModel{get uri(){return this._uri}get eol(){return this._eol}getValue(){return this.getText()}findMatches(regex){const matches=[];for(let i=0;i<this._lines.length;i++){const line=this._lines[i],offsetToAdd=this.offsetAt(new position_Position(i+1,1)),iteratorOverMatches=line.matchAll(regex);for(const match of iteratorOverMatches)(match.index||0===match.index)&&(match.index=match.index+offsetToAdd),matches.push(match)}return matches}getLinesContent(){return this._lines.slice(0)}getLineCount(){return this._lines.length}getLineContent(lineNumber){return this._lines[lineNumber-1]}getWordAtPosition(position,wordDefinition){const wordAtText=getWordAtText(position.column,function ensureValidWordDefinition(wordDefinition){let result=DEFAULT_WORD_REGEXP;if(wordDefinition&&wordDefinition instanceof RegExp)if(wordDefinition.global)result=wordDefinition;else{let flags="g";wordDefinition.ignoreCase&&(flags+="i"),wordDefinition.multiline&&(flags+="m"),wordDefinition.unicode&&(flags+="u"),result=new RegExp(wordDefinition.source,flags)}return result.lastIndex=0,result}(wordDefinition),this._lines[position.lineNumber-1],0);return wordAtText?new range_Range(position.lineNumber,wordAtText.startColumn,position.lineNumber,wordAtText.endColumn):null}words(wordDefinition){const lines=this._lines,wordenize=this._wordenize.bind(this);let lineNumber=0,lineText="",wordRangesIdx=0,wordRanges=[];return{*[Symbol.iterator](){for(;;)if(wordRangesIdx<wordRanges.length){const value=lineText.substring(wordRanges[wordRangesIdx].start,wordRanges[wordRangesIdx].end);wordRangesIdx+=1,yield value}else{if(!(lineNumber<lines.length))break;lineText=lines[lineNumber],wordRanges=wordenize(lineText,wordDefinition),wordRangesIdx=0,lineNumber+=1}}}}getLineWords(lineNumber,wordDefinition){const content=this._lines[lineNumber-1],ranges=this._wordenize(content,wordDefinition),words=[];for(const range of ranges)words.push({word:content.substring(range.start,range.end),startColumn:range.start+1,endColumn:range.end+1});return words}_wordenize(content,wordDefinition){const result=[];let match;for(wordDefinition.lastIndex=0;(match=wordDefinition.exec(content))&&0!==match[0].length;)result.push({start:match.index,end:match.index+match[0].length});return result}getValueInRange(range){if((range=this._validateRange(range)).startLineNumber===range.endLineNumber)return this._lines[range.startLineNumber-1].substring(range.startColumn-1,range.endColumn-1);const lineEnding=this._eol,startLineIndex=range.startLineNumber-1,endLineIndex=range.endLineNumber-1,resultLines=[];resultLines.push(this._lines[startLineIndex].substring(range.startColumn-1));for(let i=startLineIndex+1;i<endLineIndex;i++)resultLines.push(this._lines[i]);return resultLines.push(this._lines[endLineIndex].substring(0,range.endColumn-1)),resultLines.join(lineEnding)}offsetAt(position){return position=this._validatePosition(position),this._ensureLineStarts(),this._lineStarts.getPrefixSum(position.lineNumber-2)+(position.column-1)}positionAt(offset){offset=Math.floor(offset),offset=Math.max(0,offset),this._ensureLineStarts();const out=this._lineStarts.getIndexOf(offset),lineLength=this._lines[out.index].length;return{lineNumber:1+out.index,column:1+Math.min(out.remainder,lineLength)}}_validateRange(range){const start=this._validatePosition({lineNumber:range.startLineNumber,column:range.startColumn}),end=this._validatePosition({lineNumber:range.endLineNumber,column:range.endColumn});return start.lineNumber!==range.startLineNumber||start.column!==range.startColumn||end.lineNumber!==range.endLineNumber||end.column!==range.endColumn?{startLineNumber:start.lineNumber,startColumn:start.column,endLineNumber:end.lineNumber,endColumn:end.column}:range}_validatePosition(position){if(!position_Position.isIPosition(position))throw new Error("bad position");let{lineNumber,column}=position,hasChanged=!1;if(lineNumber<1)lineNumber=1,column=1,hasChanged=!0;else if(lineNumber>this._lines.length)lineNumber=this._lines.length,column=this._lines[lineNumber-1].length+1,hasChanged=!0;else{const maxCharacter=this._lines[lineNumber-1].length+1;column<1?(column=1,hasChanged=!0):column>maxCharacter&&(column=maxCharacter,hasChanged=!0)}return hasChanged?{lineNumber,column}:position}}class EditorSimpleWorker{constructor(host,foreignModuleFactory){this._host=host,this._models=Object.create(null),this._foreignModuleFactory=foreignModuleFactory,this._foreignModule=null}dispose(){this._models=Object.create(null)}_getModel(uri){return this._models[uri]}_getModels(){const all=[];return Object.keys(this._models).forEach((key=>all.push(this._models[key]))),all}acceptNewModel(data){this._models[data.url]=new MirrorModel(uri_URI.parse(data.url),data.lines,data.EOL,data.versionId)}acceptModelChanged(strURL,e){if(!this._models[strURL])return;this._models[strURL].onEvents(e)}acceptRemovedModel(strURL){this._models[strURL]&&delete this._models[strURL]}computeUnicodeHighlights(url,options,range){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const model=this._getModel(url);return model?UnicodeTextModelHighlighter.computeUnicodeHighlights(model,options,range):{ranges:[],hasMore:!1,ambiguousCharacterCount:0,invisibleCharacterCount:0,nonBasicAsciiCharacterCount:0}}))}computeDiff(originalUrl,modifiedUrl,options,algorithm){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const original=this._getModel(originalUrl),modified=this._getModel(modifiedUrl);return original&&modified?EditorSimpleWorker.computeDiff(original,modified,options,algorithm):null}))}static computeDiff(originalTextModel,modifiedTextModel,options,algorithm){const diffAlgorithm="advanced"===algorithm?linesDiffComputers.advanced:linesDiffComputers.legacy,originalLines=originalTextModel.getLinesContent(),modifiedLines=modifiedTextModel.getLinesContent(),result=diffAlgorithm.computeDiff(originalLines,modifiedLines,options);return{identical:!(result.changes.length>0)&&this._modelsAreIdentical(originalTextModel,modifiedTextModel),quitEarly:result.hitTimeout,changes:result.changes.map((m=>{var _a;return[m.originalRange.startLineNumber,m.originalRange.endLineNumberExclusive,m.modifiedRange.startLineNumber,m.modifiedRange.endLineNumberExclusive,null===(_a=m.innerChanges)||void 0===_a?void 0:_a.map((m=>[m.originalRange.startLineNumber,m.originalRange.startColumn,m.originalRange.endLineNumber,m.originalRange.endColumn,m.modifiedRange.startLineNumber,m.modifiedRange.startColumn,m.modifiedRange.endLineNumber,m.modifiedRange.endColumn]))]}))}}static _modelsAreIdentical(original,modified){const originalLineCount=original.getLineCount();if(originalLineCount!==modified.getLineCount())return!1;for(let line=1;line<=originalLineCount;line++){if(original.getLineContent(line)!==modified.getLineContent(line))return!1}return!0}computeMoreMinimalEdits(modelUrl,edits,pretty){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const model=this._getModel(modelUrl);if(!model)return edits;const result=[];let lastEol;edits=edits.slice(0).sort(((a,b)=>{if(a.range&&b.range)return range_Range.compareRangesUsingStarts(a.range,b.range);return(a.range?0:1)-(b.range?0:1)}));for(let{range,text,eol}of edits){if("number"==typeof eol&&(lastEol=eol),range_Range.isEmpty(range)&&!text)continue;const original=model.getValueInRange(range);if(text=text.replace(/\r\n|\n|\r/g,model.eol),original===text)continue;if(Math.max(text.length,original.length)>EditorSimpleWorker._diffLimit){result.push({range,text});continue}const changes=stringDiff(original,text,pretty),editOffset=model.offsetAt(range_Range.lift(range).getStartPosition());for(const change of changes){const start=model.positionAt(editOffset+change.originalStart),end=model.positionAt(editOffset+change.originalStart+change.originalLength),newEdit={text:text.substr(change.modifiedStart,change.modifiedLength),range:{startLineNumber:start.lineNumber,startColumn:start.column,endLineNumber:end.lineNumber,endColumn:end.column}};model.getValueInRange(newEdit.range)!==newEdit.text&&result.push(newEdit)}}return"number"==typeof lastEol&&result.push({eol:lastEol,text:"",range:{startLineNumber:0,startColumn:0,endLineNumber:0,endColumn:0}}),result}))}computeLinks(modelUrl){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const model=this._getModel(modelUrl);return model?function computeLinks(model){return model&&"function"==typeof model.getLineCount&&"function"==typeof model.getLineContent?LinkComputer.computeLinks(model):[]}(model):null}))}computeDefaultDocumentColors(modelUrl){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const model=this._getModel(modelUrl);return model?computeDefaultDocumentColors(model):null}))}textualSuggest(modelUrls,leadingWord,wordDef,wordDefFlags){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const sw=new StopWatch(!0),wordDefRegExp=new RegExp(wordDef,wordDefFlags),seen=new Set;outer:for(const url of modelUrls){const model=this._getModel(url);if(model)for(const word of model.words(wordDefRegExp))if(word!==leadingWord&&isNaN(Number(word))&&(seen.add(word),seen.size>EditorSimpleWorker._suggestionsLimit))break outer}return{words:Array.from(seen),duration:sw.elapsed()}}))}computeWordRanges(modelUrl,range,wordDef,wordDefFlags){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const model=this._getModel(modelUrl);if(!model)return Object.create(null);const wordDefRegExp=new RegExp(wordDef,wordDefFlags),result=Object.create(null);for(let line=range.startLineNumber;line<range.endLineNumber;line++){const words=model.getLineWords(line,wordDefRegExp);for(const word of words){if(!isNaN(Number(word.word)))continue;let array=result[word.word];array||(array=[],result[word.word]=array),array.push({startLineNumber:line,startColumn:word.startColumn,endLineNumber:line,endColumn:word.endColumn})}}return result}))}navigateValueSet(modelUrl,range,up,wordDef,wordDefFlags){return editorSimpleWorker_awaiter(this,void 0,void 0,(function*(){const model=this._getModel(modelUrl);if(!model)return null;const wordDefRegExp=new RegExp(wordDef,wordDefFlags);range.startColumn===range.endColumn&&(range={startLineNumber:range.startLineNumber,startColumn:range.startColumn,endLineNumber:range.endLineNumber,endColumn:range.endColumn+1});const selectionText=model.getValueInRange(range),wordRange=model.getWordAtPosition({lineNumber:range.startLineNumber,column:range.startColumn},wordDefRegExp);if(!wordRange)return null;const word=model.getValueInRange(wordRange);return BasicInplaceReplace.INSTANCE.navigateValueSet(range,selectionText,wordRange,word,up)}))}loadForeignModule(moduleId,createData,foreignHostMethods){const foreignHost=function createProxyObject(methodNames,invoke){const createProxyMethod=method=>function(){const args=Array.prototype.slice.call(arguments,0);return invoke(method,args)},result={};for(const methodName of methodNames)result[methodName]=createProxyMethod(methodName);return result}(foreignHostMethods,((method,args)=>this._host.fhr(method,args))),ctx={host:foreignHost,getMirrorModels:()=>this._getModels()};return this._foreignModuleFactory?(this._foreignModule=this._foreignModuleFactory(ctx,createData),Promise.resolve(objects_getAllMethodNames(this._foreignModule))):Promise.reject(new Error("Unexpected usage"))}fmr(method,args){if(!this._foreignModule||"function"!=typeof this._foreignModule[method])return Promise.reject(new Error("Missing requestHandler or method: "+method));try{return Promise.resolve(this._foreignModule[method].apply(this._foreignModule,args))}catch(e){return Promise.reject(e)}}}EditorSimpleWorker._diffLimit=1e5,EditorSimpleWorker._suggestionsLimit=1e4,"function"==typeof importScripts&&(globalThis.monaco=function createMonacoBaseAPI(){return{editor:void 0,languages:void 0,CancellationTokenSource,Emitter,KeyCode,KeyMod,Position:position_Position,Range:range_Range,Selection,SelectionDirection,MarkerSeverity,MarkerTag,Uri:uri_URI,Token}}());let initialized=!1;globalThis.onmessage=e=>{initialized||function initialize(foreignModule){if(initialized)return;initialized=!0;const simpleWorker=new SimpleWorkerServer((msg=>{globalThis.postMessage(msg)}),(host=>new EditorSimpleWorker(host,foreignModule)));globalThis.onmessage=e=>{simpleWorker.onmessage(e.data)}}(null)}})()})();